{"version":3,"sources":["Entities/NumberUtils.js","Components/InvestmentDetails.js","Entities/MyDate.js","Entities/Investment.js","Entities/Pin.js","Entities/Database.js","Components/InvestmentForm.js","Components/InvestmentsTable.js","Components/InvestmentsContainer.js","Components/MyDataContainer.js","Components/DashboardPin.js","Components/DashboardContainer.js","Components/AboutContainer.js","App.js","serviceWorker.js","index.js"],"names":["NumberUtils","x","toFixed","toString","replace","InvestmentDetails","netInterestRate","netGainRate","netGainAmount","netTotalPayoutAmount","paymentSchedules","onHoldNotice","this","props","investment","calculateNetInterestRate","calculateTenureInterestRate","calculateNetGainAmount","properties","generateRepaymentSchedule","formatCurrency","map","schedule","key","Alert","variant","Form","Group","Label","Control","type","readOnly","value","Table","responsive","striped","bordered","hover","React","Component","MyDate","year","month","day","isNaN","Error","daysEachMonth","isLeapYear","other","otherDate","compareTo","daysBetween","currentDay","currentMonth","currentYear","daysPassed","jsDate","Date","getFullYear","getMonth","getDate","date","strDate","tokens","split","length","i","parseInt","daysInMonths","json","Investment","id","amount","interestRate","firstPayDate","repaymentMethod","tenure","status","getOpenDate","toJson","projectId","endDate","subtractMonth","monthlyInterestRate","currentDate","now","schedules","result","monthlyNetInterestPayoutAmount","calculateMonthlyNetInterestPayoutAmount","monthlyCapitalAmount","calculateMonthlyCapitalPayoutAmount","copy","netPayout","push","addMonth","validationResult","toMyDate","jsonToObject","investments","earliestDate","latestDate","openDate","lastPayDate","calculateMaturityDate","startDate","filter","issuer","issuers","indexOf","sort","Pin","fromDate","toDate","amountInvested","completedNetEarnings","netEarnings","projectedNetAmount","completedNetPayoutAmount","completedProjects","gainPercent","numOngoingProjects","netInterestRateStats","tenureStats","netInterestRateAfterTenureStats","subscriptionDaysStats","idleDaysStats","undefined","Database","localStorage","setItem","JSON","stringify","console","log","investmentsJson","parse","getItem","pinsJson","pins","j","pin","err","version","appVersion","toImportJson","startsWith","importJsonVersion_1_2","importJsonVersion_1_0_0","tempInvestments","tempPins","persist","investmentsList","index","splice","slice","InvestmentForm","database","getIssuers","getInvestments","formMode","state","window","scrollTo","handleCalculateClick","validateProjectId","alert","findInvestment","validateInvestedAmount","investedAmount","validateGrossInterestRate","grossInterestRate","validateDate","setState","validateTenure","parseFloat","projectUrl","loanee","toUpperCase","createInvestmentObject","addInvestment","backClick","confirm","deleteInvestment","url","toLowerCase","a","document","createElement","target","rel","href","click","controls","formTitle","projectIdInputControl","Button","onClick","e","handleAddClick","placeholder","onChange","handleDeleteClick","handleUpdateClick","firstDateOfPaymentInputControl","Text","className","issuersListGroupItems","ListGroup","Item","action","Row","Col","md","InputGroup","FormControl","Append","handleShowIssuerClick","Modal","show","chooseIssuer","onHide","Header","closeButton","Title","Body","handleOpenProjectUrlClick","step","as","custom","style","textAlign","InvestmentsTable","dates","getEarliestAndLatestInvestmentDates","listRef","createRef","issuerOptions","investmentsTableRows","filteredInvestments","filterInvestmentsByDate","filterInvestmentsByRepaymentMethod","filterInvestmentsByIssuer","sortedBy","investmentA","investmentB","dateA","calculateNextPayDate","dateB","sortOrder","reverse","payDateDetails","calculateNextPayAndMaturityDate","scrollY","openInvestmentClick","ref","addInvestmentClick","InvestmentsContainer","activeComponentName","handleOpenInvestmentClick","bind","clickedInvestment","activeComponent","handleAddInvestmentClick","handleBackClick","MyDataContainer","major","minor","patch","downloadLink","download","encodeURIComponent","exportAsJson","file","fileReader","FileReader","onload","importJson","readAsText","clear","handleExportClick","File","label","handleImportClick","files","handleResetClick","DashboardPin","Card","bg","text","marginBottom","size","ProgressBar","max","Prepend","Footer","removePinClick","pinNumber","DashboardContainer","getPins","handleRemovePinClick","addPin","deletePin","numMaturedToday","numOnHold","onHoldAmount","numPayoutsToday","totalPayoutsToday","totalSubscriptionDays","interestRateDistribution","tenureDistribution","totalIdleDays","k","idleDays","totalNetInterestRate","totalTenure","frequency","subscriptionDays","calculateSubscriptionDays","averageNetInterestRateAfterTenure","negativeGainPercentNotification","maturedProjectsNotification","onHoldProjectsNotification","payoutsTodayNotification","pinId","padding","margin","ButtonGroup","handleCreatePinClick","showInterestRateDistribution","Object","keys","showTenureDistribution","b","showNegativeGainExplanation","showPinReportHelp","AboutContainer","link","Link","buyMeACoffee","App","newActiveMenuName","disableBrowserBackButton","menuNames","menuContainers","menuNavLinks","menuName","activeMenuName","Nav","eventKey","active","handleMenuClick","activeMenuContainer","Navbar","collapseOnSelect","expand","fixed","Brand","Toggle","aria-controls","Collapse","Container","fluid","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"mXAOeA,E,4GALWC,GAClB,MAAO,SAAMA,EAAEC,QAAQ,GAAGC,WAAWC,QAAQ,wBAAyB,S,KC2E/DC,E,uKArEP,IAAIC,EAAkB,MAClBC,EAAc,MACdC,EAAgB,MAChBC,EAAuB,MACvBC,EAAmB,4BAAI,mCAAY,mCAAY,oCAC/CC,EAAe,qCA2BzB,OAxBmC,OAA1BC,KAAKC,MAAMC,aACVR,GAAsE,IAAnDM,KAAKC,MAAMC,WAAWC,4BAAkCb,QAAQ,GAAK,IACxFK,GAAqE,IAAtDK,KAAKC,MAAMC,WAAWE,+BAAqCd,QAAQ,GAAK,IACvFM,EAAgBI,KAAKC,MAAMC,WAAWG,yBACtCR,EAAuBG,KAAKC,MAAMC,WAAWI,WAAtB,iBAAuDV,EAC9EE,EAAmBE,KAAKC,MAAMC,WAAWK,4BAEzCX,EAAgBR,EAAYoB,eAAeZ,GAC3CC,EAAuBT,EAAYoB,eAAeX,GAElDC,EAAmBA,EAAiBW,KAAI,SAACC,GACrC,OAAO,wBAAIC,IAAKD,EAAQ,KAASnB,YAC7B,4BAAMmB,EAAQ,KAASnB,YACvB,4BAAMH,EAAYoB,eAAeE,EAAQ,oBACzC,4BAAMtB,EAAYoB,eAAeE,EAAQ,gBAKC,YAA/CV,KAAKC,MAAMC,WAAWI,WAAtB,SACCP,EAAe,kBAACa,EAAA,EAAD,CAAOC,QAAQ,WAAf,mBAAyC,2CAAzC,YAA0E,0EAA1E,QAK5B,oCACC,kDACY,kBAACC,EAAA,EAAD,KACI,kBAACA,EAAA,EAAKC,MAAN,KACI,kBAACD,EAAA,EAAKE,MAAN,oCACA,kBAACF,EAAA,EAAKG,QAAN,CAAcC,KAAK,OAAOC,UAAQ,EAACC,MAAO1B,KAE9C,kBAACoB,EAAA,EAAKC,MAAN,KACI,kBAACD,EAAA,EAAKE,MAAN,mCACA,kBAACF,EAAA,EAAKG,QAAN,CAAcC,KAAK,OAAOC,UAAQ,EAACC,MAAOzB,KAE9C,kBAACmB,EAAA,EAAKC,MAAN,KACI,kBAACD,EAAA,EAAKE,MAAN,qCACA,kBAACF,EAAA,EAAKG,QAAN,CAAcC,KAAK,OAAOC,UAAQ,EAACC,MAAOxB,KAE9C,kBAACkB,EAAA,EAAKC,MAAN,KACI,kBAACD,EAAA,EAAKE,MAAN,sCACA,kBAACF,EAAA,EAAKG,QAAN,CAAcC,KAAK,OAAOC,UAAQ,EAACC,MAAOvB,MAGhDE,EACF,kBAACsB,EAAA,EAAD,CAAOC,YAAU,EAACC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACZ,QAAQ,QAC7C,+BACI,4BACI,4CACA,4CACA,4CAGR,+BAASf,S,GAlEG4B,IAAMC,WC0NvBC,E,WA3NX,WAAYC,EAAMC,EAAOC,GAQrB,GAR2B,oBAC3B/B,KAAKM,WAAa,CACd,KAAQuB,EACR,MAASC,EACT,IAAOC,GAIRC,MAAMH,IAASG,MAAMF,IAAUE,MAAMD,GACpC,MAAM,IAAIE,MAAM,+CAGpB,GAAGJ,EAAO,KACN,MAAM,IAAII,MAAM,8BAGpB,GAAGH,EAAQ,GAAKA,EAAQ,GACpB,MAAM,IAAIG,MAAM,2BAGpB,IAAIC,EAAgB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAKjE,GAHGN,EAAOO,WAAWN,KACjBK,EAAc,GAAK,IAEpBH,EAAM,GAAKA,EAAMG,EAAcJ,EAAQ,GACtC,MAAM,IAAIG,MAAM,+B,sDAIdG,GACN,OAAGpC,KAAKM,WAAL,KAA0B8B,EAAM9B,WAAN,KAClB,EAERN,KAAKM,WAAL,KAA0B8B,EAAM9B,WAAN,MACjB,EAETN,KAAKM,WAAL,MAA2B8B,EAAM9B,WAAN,MACnB,EAERN,KAAKM,WAAL,MAA2B8B,EAAM9B,WAAN,OAClB,EAETN,KAAKM,WAAL,IAAyB8B,EAAM9B,WAAN,IACjB,EAERN,KAAKM,WAAL,IAAyB8B,EAAM9B,WAAN,KAChB,EAEL,I,iCAKP,IAAIwB,EAAQ9B,KAAKM,WAAL,MACRyB,EAAM/B,KAAKM,WAAL,IAQV,OANGwB,EAAQ,KACPA,EAAQ,IAAMA,GAEfC,EAAM,KACLA,EAAM,IAAMA,GAET/B,KAAKM,WAAL,KAA0B,IAC3BwB,EAAQ,IACRC,I,kCAIEM,GACR,GAAGrC,KAAKsC,UAAUD,GAAa,EAC3B,OAAOA,EAAUE,YAAYvC,MAEjC,IAAIkC,EAAgB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAE7DM,EAAaxC,KAAKM,WAAL,IACbmC,EAAezC,KAAKM,WAAL,MACfoC,EAAc1C,KAAKM,WAAL,KACdqC,EAAa,EAMjB,IAHGf,EAAOO,WAAWO,KACjBR,EAAc,GAAK,IAEjBQ,IAAgBL,EAAU/B,WAAV,MACXmC,IAAiBJ,EAAU/B,WAAV,OACjBkC,IAAeH,EAAU/B,WAAV,KAEtBqC,MADAH,EAGgBN,EAAcO,EAAe,KAEzCD,EAAa,IACbC,EAEkB,KAEdA,EAAe,EACfC,IAGGd,EAAOO,WAAWO,GACjBR,EAAc,GAAK,GAEnBA,EAAc,GAAK,KAKnC,OAAOS,I,sCAKP,IAAId,EAAO7B,KAAKM,WAAL,KACPwB,EAAQ9B,KAAKM,WAAL,MAA2B,EAQvC,OALGwB,EAAQ,IACPA,EAAQ,GACRD,KAGG,IAAID,EAAOC,EAAMC,EAPd9B,KAAKM,WAAL,O,iCAeV,IAAIuB,EAAO7B,KAAKM,WAAL,KACPwB,EAAQ9B,KAAKM,WAAL,MAA2B,EAQvC,OALGwB,EAAQ,KACPD,IACAC,EAAQ,GAGL,IAAIF,EAAOC,EAAMC,EAPd9B,KAAKM,WAAL,O,+BAYV,MAAO,CACH,KAAQN,KAAKM,WAAL,KACR,MAASN,KAAKM,WAAL,MACT,IAAON,KAAKM,WAAL,Q,6BAMX,IAAIsC,EAAS,IAAIC,KACjB,OAAO,IAAIjB,EAAOgB,EAAOE,cAAeF,EAAOG,WAAa,EAAGH,EAAOI,a,2BAI9DC,GACR,OAAO,IAAIrB,EAAOqB,EAAK3C,WAAL,KAAyB2C,EAAK3C,WAAL,MAA0B2C,EAAK3C,WAAL,O,+BAMzD4C,GAIZ,GAFAlD,KAAKmD,OAASD,EAAQE,MAAM,KAEF,IAAvBpD,KAAKmD,OAAOE,OACX,OAAO,KAGX,IAAI,IAAIC,EAAI,EAAGA,EAAItD,KAAKmD,OAAOE,OAAQC,IACnC,GAAGtB,MAAMhC,KAAKmD,OAAOG,IACjB,OAAO,KAEf,IAAIzB,EAAO0B,SAASvD,KAAKmD,OAAO,IAC5BrB,EAAQyB,SAASvD,KAAKmD,OAAO,IAC7BpB,EAAMwB,SAASvD,KAAKmD,OAAO,IAG/B,GAAGtB,EAAO,MAAQG,MAAMH,IAASG,MAAMF,IAAUE,MAAMD,GACnD,OAAO,KAGX,GAAGD,EAAQ,GAAKA,EAAQ,GACpB,OAAO,KAGX,IAAI0B,EAAe,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAMrD,OAHI3B,EAAO,MAAQ,EAAMA,EAAO,MAAQ,EAAMA,EAAO,IAAM,KACvD2B,EAAa,GAAK,IAEnBzB,EAAM,GAAKA,EAAMyB,EAAa1B,EAAQ,GAC9B,KAGJ,IAAIF,EAAOC,EAAMC,EAAOC,K,mCAIf0B,GAChB,OAAO,IAAI7B,EACP6B,EAAI,KACJA,EAAI,MACJA,EAAI,O,iCAKM5B,GACd,OAAOA,EAAO,MAAQ,EAAIA,EAAO,MAAQ,EAAIA,EAAO,IAAM,M,KCwInD6B,E,WA9VX,WAAYC,EAAIC,EAAQC,EAAcC,EAAcC,EAAiBC,EAAQC,GAczE,GAdkF,oBAClFjE,KAAKM,WAAa,CACd,UAAaqD,EACb,iBAAoBC,EACpB,kBAAqBC,EACrB,KAAQC,EACR,gBAAmBC,EACnB,OAAUC,EACV,WAAc,GACd,OAAU,GACV,OAAUC,GAIXjE,KAAKkE,cAAc5B,UAAUwB,GAAgB,EAC5C,MAAM,IAAI7B,MAAM,4C,qDAKpB,MAAO,CACH,UAAajC,KAAKM,WAAL,UACb,iBAAoBN,KAAKM,WAAL,iBACpB,kBAAqBN,KAAKM,WAAL,kBACrB,KAAQN,KAAKM,WAAL,KAAwB6D,SAChC,gBAAmBnE,KAAKM,WAAL,gBACnB,OAAUN,KAAKM,WAAL,OACV,WAAcN,KAAKM,WAAL,WACd,OAAUN,KAAKM,WAAL,OACV,OAAUN,KAAKM,WAAL,U,oCAMd,IAAI8D,EAAYpE,KAAKM,WAAL,UAEZuB,EAAO0B,SAASa,EAAU,GAAK,GAAKA,EAAU,GAAUA,EAAU,GAAUA,EAAU,IACtFtC,EAAQyB,SAASa,EAAU,GAAK,GAAKA,EAAU,IAC/CrC,EAAMwB,SAASa,EAAU,GAAK,GAAKA,EAAU,IAEjD,OAAO,IAAIxC,EAAOC,EAAMC,EAAOC,K,kDAM/B,GAAiC,YAA9B/B,KAAKM,WAAL,OACC,MAAM,IAAI2B,MAAM,WAAajC,KAAKM,WAAL,UAA+B,eAIhE,IAAI+D,EAAUrE,KAAKM,WAAL,KAAwBgE,gBAKtC,OADetE,KAAKkE,cACJ3B,YAAY8B,K,iDAO5B,MADsB,GAAArE,KAAKM,WAAL,oB,oDAQtB,OAFsBN,KAAKG,2BACiB,GAAQH,KAAKM,WAAL,S,+CAOpD,OADoBN,KAAKI,8BAAgCJ,KAAKM,WAAL,mB,gEAMzD,IAAIiE,EAAsBvE,KAAKG,2BAA6B,GAC5D,OAAOH,KAAKM,WAAL,iBAAsCiE,I,4DAK7C,MAA0C,UAAvCvE,KAAKM,WAAL,gBACQN,KAAKM,WAAL,iBAAsCN,KAAKM,WAAL,OAE1C,I,6CAMP,IAAIkE,EAAc5C,EAAO6C,MACrBC,EAAY1E,KAAKO,4BAErB,GAAGiE,EAAYlC,UAAUoC,EAAUA,EAAUrB,OAAS,GAA7B,MAA2C,EAChE,OAAO,KAGX,IAAI,IAAIC,EAAI,EAAGA,EAAIoB,EAAUrB,OAAQC,IACjC,GAAGkB,EAAYlC,UAAUoC,EAAUpB,GAAV,OAAyB,EAC9C,OAAOoB,EAAUpB,GAAV,KAEf,OAAO,O,8CAMP,IAAIoB,EAAY1E,KAAKO,4BACrB,OAAOmE,EAAUA,EAAUrB,OAAS,GAA7B,O,wDAKP,GAAiC,YAA9BrD,KAAKM,WAAL,OACC,MAAO,CACH,aAAgB,UAChB,YAAe,UACf,cAAiB,GAIzB,IAAIkE,EAAc5C,EAAO6C,MACrBC,EAAY1E,KAAKO,4BAEjBoE,EAAS,CACT,aAAgBD,EAAUA,EAAUrB,OAAS,GAA7B,KAChB,YAAe,YACf,cAAiB,GAGrB,GAAGmB,EAAYlC,UAAUoC,EAAUA,EAAUrB,OAAS,GAA7B,OAA4C,EAEjE,IAAI,IAAIC,EAAI,EAAGA,EAAIoB,EAAUrB,OAAQC,IACjC,GAAGkB,EAAYlC,UAAUoC,EAAUpB,GAAV,OAAyB,EAAG,CAEjDqB,EAAM,YAAkBD,EAAUpB,GAAV,KACxBqB,EAAM,cAAoBD,EAAUpB,GAAV,UAC1B,MAKZ,OAAOqB,I,kDAUP,IALA,IAAID,EAAY,GACZE,EAAiC5E,KAAK6E,0CACtCC,EAAuB9E,KAAK+E,sCAC5BP,EAAc5C,EAAOoD,KAAKhF,KAAKM,WAAL,MAEtBgD,EAAI,EAAGA,EAAItD,KAAKM,WAAL,OAA2BgD,IAAK,CAC/C,IAAI2B,EAAaL,EAAiCE,EAG/CxB,EAAI,IAAMtD,KAAKM,WAAL,QAAoE,YAAvCN,KAAKM,WAAL,kBACtC2E,GAAajF,KAAKM,WAAL,kBAEjB,IAAII,EAAW,CACX,KAAQ8D,EACR,kBAAqBI,EACrB,UAAaK,GAGjBP,EAAUQ,KAAKxE,GACf8D,EAAcA,EAAYW,WAG9B,OAAOT,K,yCAIcN,GAQrB,OAPApE,KAAKoF,iBAAmB,CAAE,QAAU,GAEnB,KAAdhB,IACCpE,KAAKoF,iBAAL,QAAkC,EAClCpF,KAAKoF,iBAAL,QAAmC,2BAGhCpF,KAAKoF,mB,6CAIcxB,GAc1B,OAbA5D,KAAKoF,iBAAmB,CAAE,QAAU,GAEtB,KAAXxB,GACC5D,KAAKoF,iBAAL,QAAkC,EAClCpF,KAAKoF,iBAAL,QAAmC,gCAC7BpD,MAAM4B,IACZ5D,KAAKoF,iBAAL,QAAkC,EAClCpF,KAAKoF,iBAAL,QAAmC,qCAC7BxB,GAAU,IAChB5D,KAAKoF,iBAAL,QAAkC,EAClCpF,KAAKoF,iBAAL,QAAmC,+CAGhCpF,KAAKoF,mB,gDAIiBvB,GAc7B,OAbA7D,KAAKoF,iBAAmB,CAAE,QAAU,GAEhB,KAAjBvB,GACC7D,KAAKoF,iBAAL,QAAkC,EAClCpF,KAAKoF,iBAAL,QAAmC,2CAC7BpD,MAAM6B,IACZ7D,KAAKoF,iBAAL,QAAkC,EAClCpF,KAAKoF,iBAAL,QAAmC,mDAC7BvB,EAAe,GAAKA,EAAe,MACzC7D,KAAKoF,iBAAL,QAAkC,EAClCpF,KAAKoF,iBAAL,QAAmC,0DAGhCpF,KAAKoF,mB,mCAIInC,GAShB,OARAA,EAAOrB,EAAOyD,SAASpC,GACvBjD,KAAKoF,iBAAmB,CAAE,QAAU,GAExB,OAATnC,IACCjD,KAAKoF,iBAAL,QAAkC,EAClCpF,KAAKoF,iBAAL,QAAmC,iBAGhCpF,KAAKoF,mB,qCAIMpB,GAclB,OAbAhE,KAAKoF,iBAAmB,CAAE,QAAU,GAEtB,KAAXpB,GACChE,KAAKoF,iBAAL,QAAkC,EAClCpF,KAAKoF,iBAAL,QAAmC,uBAC7BpD,MAAMgC,IACZhE,KAAKoF,iBAAL,QAAkC,EAClCpF,KAAKoF,iBAAL,QAAmC,sCAC7BpB,EAAS,GAAKA,EAAS,MAC7BhE,KAAKoF,iBAAL,QAAkC,EAClCpF,KAAKoF,iBAAL,QAAmC,kDAGhCpF,KAAKoF,mB,mCAII3B,GAEX,WAAYA,IACbA,EAAI,OAAa,YAErB,IAAIvD,EAAa,IAAIwD,EACjBD,EAAI,UACJA,EAAI,iBACJA,EAAI,kBACJ7B,EAAO0D,aAAa7B,EAAI,MACxBA,EAAI,gBACJA,EAAI,OACJA,EAAI,QAMR,OAHAvD,EAAWI,WAAX,WAAsCmD,EAAI,WAC1CvD,EAAWI,WAAX,OAAkCmD,EAAI,OAE/BvD,I,0DAIgCqF,GACvC,GAA2B,IAAvBA,EAAYlC,OACZ,OAAO,KAKX,IAHA,IAAImC,EAAe,KACfC,EAAa,KAETnC,EAAI,EAAGA,EAAIiC,EAAYlC,OAAQC,IAAK,CACxC,IAAIpD,EAAaqF,EAAYjC,GACzBoC,EAAWxF,EAAWgE,cACtByB,EAAczF,EAAW0F,yBAET,OAAjBJ,GAAyBE,EAASpD,UAAUkD,GAAgB,KAC3DA,EAAeE,IAED,OAAfD,GAAuBE,EAAYrD,UAAUmD,GAAc,KAC1DA,EAAaE,GAGrB,MAAO,CACH,SAAYH,EACZ,OAAUC,K,8CAKaF,EAAaM,EAAWxB,GACnD,OAAOkB,EAAYO,QAAO,SAAS5F,GAC/B,OAAOA,EAAW0F,wBAAwBtD,UAAUuD,IAAc,GAC3D3F,EAAWgE,cAAc5B,UAAU+B,IAAY,O,yDAKpBkB,EAAaxB,GACnD,OAAOwB,EAAYO,QAAO,SAAS5F,GAC/B,MAA2B,QAApB6D,GACAA,IAAoB7D,EAAWI,WAAX,qB,gDAKFiF,EAAaQ,GAC1C,OAAOR,EAAYO,QAAO,SAAS5F,GAC/B,MAAkB,QAAX6F,GACAA,IAAW7F,EAAWI,WAAX,Y,iCAKRiF,GAGd,IAFA,IAAIS,EAAU,GAEN1C,EAAI,EAAGA,EAAIiC,EAAYlC,OAAQC,IAAK,CACxC,IAAIpD,EAAaqF,EAAYjC,GAE7B,GAAG,WAAYpD,EAAWI,YAAkD,KAApCJ,EAAWI,WAAX,OAAwC,CAC5E,IAAIyF,EAAS7F,EAAWI,WAAX,OAEV0F,EAAQC,QAAQF,KAAY,GAC3BC,EAAQd,KAAKa,IAKzB,OADAC,EAAQE,OACDF,M,KC/PAG,E,WA7FX,WAAYC,EACRC,EACAtC,EACAgC,EACAO,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACNC,EACAC,EACAC,EACAC,EACAC,GAuBA,IAAI,IAAIvG,KAvBQ,oBAEVX,KAAKM,WAAa,CACd,SAAY8F,EACrB,OAAUC,EACV,gBAAmBtC,EACnB,OAAUgC,EACV,eAAkBO,EAClB,qBAAwBC,EACxB,YAAeC,EACf,mBAAsBC,EACtB,yBAA4BC,EAC5B,kBAAqBC,EACrB,YAAeC,EACf,mBAAsBC,EACtB,qBAAwBC,EACxB,YAAeC,EACf,gCAAmCC,EACnC,sBAAyBC,EACzB,cAAiBC,GAIHlH,KAAKM,WACnB,QAA4B6G,IAAzBnH,KAAKM,WAAWK,GAClB,MAAM,IAAIsB,MAAMtB,EAAM,iB,qDAKlB,MAAO,CACH,SAAYX,KAAKM,WAAL,SACrB,OAAUN,KAAKM,WAAL,OACV,gBAAmBN,KAAKM,WAAL,gBACnB,OAAUN,KAAKM,WAAL,OACV,eAAkBN,KAAKM,WAAL,eAClB,qBAAwBN,KAAKM,WAAL,qBACxB,YAAeN,KAAKM,WAAL,YACf,mBAAsBN,KAAKM,WAAL,mBACtB,yBAA4BN,KAAKM,WAAL,yBAC5B,kBAAqBN,KAAKM,WAAL,kBACrB,YAAeN,KAAKM,WAAL,YACf,mBAAsBN,KAAKM,WAAL,mBACtB,qBAAwBN,KAAKM,WAAL,qBACxB,YAAeN,KAAKM,WAAL,YACf,gCAAmCN,KAAKM,WAAL,gCACnC,sBAAyBN,KAAKM,WAAL,sBACzB,cAAiBN,KAAKM,WAAL,kB,oCAKImD,GAqBhB,OApBU,IAAI0C,EACV1C,EAAI,SACbA,EAAI,OACJA,EAAI,gBACJA,EAAI,OACJA,EAAI,eACJA,EAAI,qBACJA,EAAI,YACJA,EAAI,mBACJA,EAAI,yBACJA,EAAI,kBACJA,EAAI,YACJA,EAAI,mBACJA,EAAI,qBACJA,EAAI,YACJA,EAAI,gCACJA,EAAI,sBACJA,EAAI,mB,KC6HQ2D,E,WA/MX,aAAe,oBACN,gBAAiBC,eAClBA,aAAaC,QAAQ,cAAeC,KAAKC,UAAU,KACnDC,QAAQC,IAAI,qCAGX,SAAUL,eACXA,aAAaC,QAAQ,OAAQC,KAAKC,UAAU,KAC5CC,QAAQC,IAAI,8BAIhB,IAAIC,EAAkBJ,KAAKK,MAAMP,aAAaQ,QAAQ,gBAEtD7H,KAAKuF,YAAc,GAEnB,IAAI,IAAIjC,EAAI,EAAGA,EAAIqE,EAAgBtE,OAAQC,IAAK,CAC5C,IAAIpD,EAAawD,EAAW4B,aAAaqC,EAAgBrE,IACzDtD,KAAKuF,YAAYrF,EAAWI,WAAX,WAAsCJ,EAI3D,IAAI4H,EAAWP,KAAKK,MAAMP,aAAaQ,QAAQ,SAC/C7H,KAAK+H,KAAO,GAEZ,IAAI,IAAIC,EAAI,EAAGA,EAAIF,EAASzE,OAAQ2E,IAChC,IACI,IAAIC,EAAM9B,EAAIb,aAAawC,EAASE,IACpChI,KAAK+H,KAAK7C,KAAK+C,GACjB,MAAMC,GAEJT,QAAQC,IAAIQ,GACZlI,KAAK+H,KAAO,I,yDAMXI,GACT,IAAIR,EAAkB,GAGtB,IAAI,IAAIvD,KAAapE,KAAKuF,YACtBoC,EAAgBzC,KAAKlF,KAAKuF,YAAYnB,GAAWD,UAGrDkD,aAAaC,QAAQ,cAAeC,KAAKC,UAAUG,IAInD,IAFA,IAAIG,EAAW,GAEPxE,EAAI,EAAGA,EAAItD,KAAK+H,KAAK1E,OAAQC,IACjCwE,EAAS5C,KAAKlF,KAAK+H,KAAKzE,GAAGa,UAE/B,MAAO,CACH,QAAWgE,EACX,YAAeR,EACf,KAAQG,K,iCAKLM,EAAYC,GACnB,MAAK,YAAaA,IAKfA,EAAY,QAAYC,WAAW,SAC3BtI,KAAKuI,sBAAsBF,GAJ3BrI,KAAKwI,wBAAwBH,K,4CAUtBA,GAClB,KAAK,gBAAiBA,MAAmB,SAAUA,GAC/C,OAAO,EAMX,IAHA,IAAII,EAAkB,GAClBd,EAAkBU,EAAY,YAE1B/E,EAAI,EAAGA,EAAIqE,EAAgBtE,OAAQC,IACvC,IACI,IAAIpD,EAAawD,EAAW4B,aAAaqC,EAAgBrE,IACzDmF,EAAgBvI,EAAWI,WAAX,WAAsCJ,EACxD,MAAMgI,GAEJ,OADAT,QAAQC,IAAIQ,IACL,EAIflI,KAAKuF,YAAckD,EAMnB,IAHA,IAAIC,EAAW,GACXZ,EAAWO,EAAY,KAEnBL,EAAI,EAAGA,EAAIF,EAASzE,OAAQ2E,IAChC,IACI,IAAIC,EAAM9B,EAAIb,aAAawC,EAASE,IACpCU,EAASxD,KAAK+C,GAChB,MAAMC,GACJT,QAAQC,IAAIQ,GAOpB,OAHAlI,KAAK+H,KAAOW,EAEZ1I,KAAK2I,WACE,I,8CAIaN,GAGpB,IAFA,IAAII,EAAkB,GAEdnF,EAAI,EAAGA,EAAI+E,EAAahF,OAAQC,IACpC,IACI,IAAIpD,EAAawD,EAAW4B,aAAa+C,EAAa/E,IACtDmF,EAAgBvI,EAAWI,WAAX,WAAsCJ,EACxD,MAAMgI,GAEJ,OADAT,QAAQC,IAAIQ,IACL,EAOf,OAFAlI,KAAKuF,YAAckD,EACnBzI,KAAK2I,WACE,I,qCAIIvE,GACX,OAAKA,KAAapE,KAAKuF,YAGhBvF,KAAKuF,YAAYnB,GAFb,O,uCAMEA,UACNpE,KAAKuF,YAAYnB,GACxBpE,KAAK2I,Y,oCAIKzI,GACVF,KAAKuF,YAAYrF,EAAWI,WAAX,WAAsCJ,EACvDF,KAAK2I,Y,uCAKL,IAAIC,EAAkB,GAEtB,IAAI,IAAIxE,KAAapE,KAAKuF,YACtBqD,EAAgB1D,KAAKlF,KAAKuF,YAAYnB,IAE1C,OAAOwE,I,6BAIJX,GACHjI,KAAK+H,KAAK7C,KAAK+C,GACfjI,KAAK2I,Y,gCAICE,GACN7I,KAAK+H,KAAKe,OAAOD,EAAO,GACxB7I,KAAK2I,Y,gCAKL,OAAO3I,KAAK+H,KAAKgB,U,gCAKjB,IAAIpB,EAAkB,GAGtB,IAAI,IAAIvD,KAAapE,KAAKuF,YACtBoC,EAAgBzC,KAAKlF,KAAKuF,YAAYnB,GAAWD,UAGrDkD,aAAaC,QAAQ,cAAeC,KAAKC,UAAUG,IAInD,IAFA,IAAIG,EAAW,GAEPxE,EAAI,EAAGA,EAAItD,KAAK+H,KAAK1E,OAAQC,IACjCwE,EAAS5C,KAAKlF,KAAK+H,KAAKzE,GAAGa,UAE/BkD,aAAaC,QAAQ,OAAQC,KAAKC,UAAUM,M,8BAK5C9H,KAAKuF,YAAc,GACnBvF,KAAK+H,KAAO,GACZ/H,KAAK2I,c,KCoJEK,E,kDA3Vd,WAAY/I,GAAQ,IAAD,8BAClB,cAAMA,IAEKgJ,SAAW,IAAI7B,EACpB,EAAKpB,QAAUtC,EAAWwF,WAAW,EAAKD,SAASE,kBAG7B,QAAnBlJ,EAAMmJ,SACL,EAAKC,MAAQ,CACT,UAAa,GACb,OAAU,GACV,WAAc,GACd,eAAkB,GAClB,kBAAqB,GACrB,OAAU,WACV,OAAU,GACV,gBAAmB,QACnB,KAAQ,GACR,WAAc,KACd,cAAgB,GAIpB,EAAKA,MAAQ,CACT,UAAapJ,EAAMC,WAAWI,WAAjB,UACb,OAAUL,EAAMC,WAAWI,WAAjB,OACV,WAAcL,EAAMC,WAAWI,WAAjB,WACd,eAAkBL,EAAMC,WAAWI,WAAjB,iBAAgDhB,QAAQ,GAC1E,mBAAyE,IAAnDW,EAAMC,WAAWI,WAAjB,mBAAwDhB,QAAQ,GACtF,OAAUW,EAAMC,WAAWI,WAAjB,OACV,OAAUL,EAAMC,WAAWI,WAAjB,OACV,gBAAmBL,EAAMC,WAAWI,WAAjB,gBACnB,KAAQL,EAAMC,WAAWI,WAAjB,KAAoCf,WAC5C,WAAcU,EAAMC,WACpB,cAAgB,GAlCZ,E,gEA0CZoJ,OAAOC,SAAS,EAAG,GAEQ,WAAxBvJ,KAAKC,MAAMmJ,UACVpJ,KAAKwJ,yB,+CAMT,IAAIpE,EAAmB1B,EAAW+F,kBAAkBzJ,KAAKqJ,MAAMjF,WAE/D,IAAIgB,EAAgB,OAEhB,OADAsE,MAAMtE,EAAgB,SACf,KAGX,GAA2B,QAAxBpF,KAAKC,MAAMmJ,UAC+C,MAAtDpJ,KAAKiJ,SAASU,eAAe3J,KAAKqJ,MAAMjF,WAEvC,OADAsF,MAAM,wCACC,KAOf,KAFAtE,EAAmB1B,EAAWkG,uBAAuB5J,KAAKqJ,MAAMQ,iBAE5C,OAEhB,OADAH,MAAMtE,EAAgB,SACf,KAMX,KAFAA,EAAmB1B,EAAWoG,0BAA0B9J,KAAKqJ,MAAMU,oBAE/C,OAEhB,OADAL,MAAMtE,EAAgB,SACf,KAIX,IAAInC,EAAOjD,KAAKqJ,MAAMpG,KAEtB,GAAyB,aAAtBjD,KAAKqJ,MAAMpF,QAGV,KAFAmB,EAAmB1B,EAAWsG,aAAa/G,IAEvB,OAEhB,OADAyG,MAAMtE,EAAgB,SACf,SAEiB,YAAtBpF,KAAKqJ,MAAMpF,SACjBhB,EAAOrB,EAAO6C,MAAMlF,WACpBS,KAAKiK,SAAS,CAAE,KAAQhH,KAQ5B,KAFAmC,EAAmB1B,EAAWwG,eAAelK,KAAKqJ,MAAMrF,SAEpC,OAEhB,OADA0F,MAAMtE,EAAgB,SACf,KAIX,IACI,IAAIlF,EAAa,IAAIwD,EACjB1D,KAAKqJ,MAAMjF,UACX+F,WAAWnK,KAAKqJ,MAAMQ,gBACtBM,WAAWnK,KAAKqJ,MAAMU,mBAAqB,IAC3CnI,EAAOyD,SAASpC,GAChBjD,KAAKqJ,MAAMtF,gBACXR,SAASvD,KAAKqJ,MAAMrF,QACpBhE,KAAKqJ,MAAMpF,QAKf,OAHA/D,EAAWI,WAAX,WAAsCN,KAAKqJ,MAAMe,WACjDlK,EAAWI,WAAX,OAAkCN,KAAKqJ,MAAMgB,OAAOC,cAE7CpK,EACT,MAAMgI,GACJwB,MAAM,gMACNjC,QAAQC,IAAIQ,GAGhB,OAAO,O,uCAKb,IAAIhI,EAAaF,KAAKuK,yBAEL,MAAdrK,IAIGF,KAAKiJ,SAASuB,cAActK,GAG5BwJ,MAAM,uBAEZ1J,KAAKC,MAAMwK,e,0CAKL,IAAIvK,EAAaF,KAAKuK,yBAEL,MAAdrK,IAIHF,KAAKiJ,SAASuB,cAActK,GAC5BwJ,MAAM,0B,0CAKFJ,OAAOoB,QAAQ,sDAGnB1K,KAAKiJ,SAAS0B,iBAAiB3K,KAAKqJ,MAAMnJ,WAAWI,WAAtB,WAC/BN,KAAKC,MAAMwK,e,6CAKjB,IAAIvK,EAAaF,KAAKuK,yBAEL,MAAdrK,GAGHF,KAAKiK,SAAS,CAAC,WAAc/J,M,8CAKpBF,KAAKgG,QAAQ3C,QAAU,EACtBqG,MAAM,iGAIV1J,KAAKiK,SAAS,CAAC,cAAgB,M,kDAK/B,GAA6B,KAA1BjK,KAAKqJ,MAAMe,WAAd,CAGA,IAAIQ,EAAM5K,KAAKqJ,MAAMe,WAEjBQ,EAAIC,cAAcvC,WAAW,aAAgBsC,EAAIC,cAAcvC,WAAW,aAC1EsC,EAAM,UAAYA,GAEtB,IAAIE,EAAIC,SAASC,cAAc,KAC/BF,EAAEG,OAAS,SACXH,EAAEI,IAAM,sBACRJ,EAAEK,KAAOP,EACTE,EAAEM,QAEFpL,KAAKiK,SAAS,CAAC,WAAcW,O,+BAI1B,IACLS,EACAC,EACAC,EAHI,OAKmB,QAAxBvL,KAAKC,MAAMmJ,UAEbiC,EACC,oCACC,kBAACG,EAAA,EAAD,CAAQ3K,QAAQ,OAAO4K,QAAUzL,KAAKC,MAAMwK,WAA5C,QAAsE,IACtE,kBAACe,EAAA,EAAD,CAAQ3K,QAAQ,OAAO4K,QAAS,SAACC,GAAQ,EAAKlC,yBAA9C,aAA2F,IAC3F,kBAACgC,EAAA,EAAD,CAAQ3K,QAAQ,UAAU4K,QAAS,SAACC,GAAQ,EAAKC,mBAAjD,QAGFL,EAAY,iBAEZC,EACC,kBAACzK,EAAA,EAAKC,MAAN,KACC,kBAACD,EAAA,EAAKE,MAAN,mBACA,kBAACF,EAAA,EAAKG,QAAN,CAAcC,KAAK,OAAO0K,YAAY,4BACrCxK,MAAOpB,KAAKqJ,MAAMjF,UAAWyH,SAAU,SAACH,GAAQ,EAAKzB,SAAS,CAAC,UAAayB,EAAET,OAAO7J,aAEvD,WAAxBpB,KAAKC,MAAMmJ,WAEpBiC,EACC,oCACC,kBAACG,EAAA,EAAD,CAAQ3K,QAAQ,OAAO4K,QAAUzL,KAAKC,MAAMwK,WAA5C,QAAsE,IACtE,kBAACe,EAAA,EAAD,CAAQ3K,QAAQ,SAAS4K,QAAS,SAACC,GAAQ,EAAKI,sBAAhD,UAAuF,IACvF,kBAACN,EAAA,EAAD,CAAQ3K,QAAQ,OAAO4K,QAAS,SAACC,GAAQ,EAAKlC,yBAA9C,aAA2F,IAC3F,kBAACgC,EAAA,EAAD,CAAQ3K,QAAQ,UAAU4K,QAAS,SAACC,GAAQ,EAAKK,sBAAjD,WAGFT,EAAY,oBAEZC,EACC,kBAACzK,EAAA,EAAKC,MAAN,KACC,kBAACD,EAAA,EAAKE,MAAN,mBACA,kBAACF,EAAA,EAAKG,QAAN,CAAcC,KAAK,OAAO0K,YAAY,4BAA4BzK,UAAQ,EACzEC,MAAOpB,KAAKqJ,MAAMjF,cAKtB,IAAI4H,EAAiC,qCAEN,aAAtBhM,KAAKqJ,MAAMpF,SACnB+H,EACC,kBAAClL,EAAA,EAAKC,MAAN,KACC,kBAACD,EAAA,EAAKE,MAAN,uCACA,kBAACF,EAAA,EAAKG,QAAN,CAAcC,KAAK,OAAO0K,YAAY,aACrCxK,MAAOpB,KAAKqJ,MAAMpG,KAAM4I,SAAU,SAACH,GAAQ,EAAKzB,SAAS,CAAC,KAAQyB,EAAET,OAAO7J,WAC5E,kBAACN,EAAA,EAAKmL,KAAN,CAAWC,UAAU,cAArB,oDAKG,IAAIC,EAAwBnM,KAAKgG,QAAQvF,KAAI,SAACsF,GAC1C,OAAO,kBAACqG,EAAA,EAAUC,KAAX,CAAgB1L,IAAKoF,EAAQuG,QAAM,EAACb,QAAS,SAACC,GAAD,OAAO,EAAKzB,SAAS,CAAE,OAAUlE,EAAQ,cAAgB,MAAWA,MAGlI,OACU,kBAACwG,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKC,GAAG,KACJ,4BAAKnB,GACL,kBAACxK,EAAA,EAAD,KACKyK,EACD,kBAACzK,EAAA,EAAKC,MAAN,KACI,kBAACD,EAAA,EAAKE,MAAN,iDACA,kBAAC0L,EAAA,EAAD,CAAYR,UAAU,QAClB,kBAACS,EAAA,EAAD,CAAaf,YAAY,SACrBxK,MAAOpB,KAAKqJ,MAAMgB,OAAQwB,SAAU,SAACH,GAAQ,EAAKzB,SAAS,CAAC,OAAUyB,EAAET,OAAO7J,WACnF,kBAACsL,EAAA,EAAWE,OAAZ,KACI,kBAACpB,EAAA,EAAD,CAAQ3K,QAAQ,eAAe4K,QAAS,SAACC,GAAQ,EAAKmB,0BAAtD,aAIZ,kBAACC,EAAA,EAAD,CAAOC,KAAM/M,KAAKqJ,MAAM2D,aAAcC,OAAQ,SAACvB,GAAQ,EAAKzB,SAAS,CAAC,cAAgB,MAClF,kBAAC6C,EAAA,EAAMI,OAAP,CAAcC,aAAW,GACrB,kBAACL,EAAA,EAAMM,MAAP,uBAEJ,kBAACN,EAAA,EAAMO,KAAP,KACI,kBAACjB,EAAA,EAAD,KACMD,KAId,kBAACrL,EAAA,EAAKC,MAAN,KACI,kBAACD,EAAA,EAAKE,MAAN,+BACA,kBAAC0L,EAAA,EAAD,CAAYR,UAAU,QAClB,kBAACpL,EAAA,EAAKG,QAAN,CAAcC,KAAK,OAAO0K,YAAY,8DAClCxK,MAAOpB,KAAKqJ,MAAMe,WAAYyB,SAAU,SAACH,GAAQ,EAAKzB,SAAS,CAAC,WAAcyB,EAAET,OAAO7J,WAC3F,kBAACsL,EAAA,EAAWE,OAAZ,KACI,kBAACpB,EAAA,EAAD,CAAQ3K,QAAQ,eAAe4K,QAAS,SAACC,GAAQ,EAAK4B,8BAAtD,WAIZ,kBAACxM,EAAA,EAAKC,MAAN,KACI,kBAACD,EAAA,EAAKE,MAAN,wBACA,kBAACF,EAAA,EAAKG,QAAN,CAAcC,KAAK,SAASqM,KAAK,MAAM3B,YAAY,SAC/CxK,MAAOpB,KAAKqJ,MAAMQ,eAAgBgC,SAAU,SAACH,GAAQ,EAAKzB,SAAS,CAAC,eAAkByB,EAAET,OAAO7J,YAEvG,kBAACN,EAAA,EAAKC,MAAN,KACI,kBAACD,EAAA,EAAKE,MAAN,sCACA,kBAACF,EAAA,EAAKG,QAAN,CAAcC,KAAK,SAASqM,KAAK,MAAM3B,YAAY,YAC/CxK,MAAOpB,KAAKqJ,MAAMU,kBAAmB8B,SAAU,SAACH,GAAQ,EAAKzB,SAAS,CAAC,kBAAqByB,EAAET,OAAO7J,YAE7G,kBAACN,EAAA,EAAKC,MAAN,KACI,kBAACD,EAAA,EAAKE,MAAN,eACA,kBAACF,EAAA,EAAKG,QAAN,CAAcuM,GAAG,SAASC,QAAM,EAC5BrM,MAAOpB,KAAKqJ,MAAMpF,OAAQ4H,SAAU,SAACH,GAAQ,EAAKzB,SAAS,CAAC,OAAUyB,EAAET,OAAO7J,UAC/E,4CACA,6CAGN4K,EACF,kBAAClL,EAAA,EAAKC,MAAN,KACI,kBAACD,EAAA,EAAKE,MAAN,yBACA,kBAACF,EAAA,EAAKG,QAAN,CAAcuM,GAAG,SAASC,QAAM,EAC5BrM,MAAOpB,KAAKqJ,MAAMtF,gBAAiB8H,SAAU,SAACH,GAAQ,EAAKzB,SAAS,CAAC,gBAAmByB,EAAET,OAAO7J,UACjG,yCACA,6CAGR,kBAACN,EAAA,EAAKC,MAAN,KACI,kBAACD,EAAA,EAAKE,MAAN,eACA,kBAACF,EAAA,EAAKG,QAAN,CAAcC,KAAK,SAAS0K,YAAY,iBACpCxK,MAAOpB,KAAKqJ,MAAMrF,OAAQ6H,SAAU,SAACH,GAAQ,EAAKzB,SAAS,CAAC,OAAUyB,EAAET,OAAO7J,aAG3F,uBAAGsM,MAAO,CAACC,UAAW,UACjBtC,IAGT,kBAACmB,EAAA,EAAD,CAAKC,GAAG,KACJ,kBAAC,EAAD,CAAmBvM,WAAYF,KAAKqJ,MAAMnJ,mB,GAvVjCwB,IAAMC,WCsPpBiM,E,kDAnPd,WAAY3N,GAAQ,IAAD,uBACZ,cAAMA,IAGDsF,aAAc,IAAI6B,GAAW+B,iBAClC,EAAKnD,QAAUtC,EAAWwF,WAAW,EAAK3D,aAC1C,IAAIsI,EAAQnK,EAAWoK,oCAAoC,EAAKvI,aANpD,MAST,2BAA4B8B,cAC3B,EAAKgC,MAAQ9B,KAAKK,MAAM0B,OAAOjC,aAAaQ,QAAQ,2BAExC,MAATgG,IACC,EAAKxE,MAAMjD,SAAWyH,EAAK,SAAatO,WACxC,EAAK8J,MAAMhD,OAASwH,EAAK,OAAWtO,aAGxC,EAAK8J,MAAQ,CACT,SAAsB,OAAVwE,EAAiBA,EAAK,SAAatO,WAAa,GAC5D,OAAoB,OAAVsO,EAAiBA,EAAK,OAAWtO,WAAa,GACxD,SAAY,aACZ,UAAa,YACb,gBAAmB,MACnB,OAAU,OAKlB,EAAKwO,QAAUrM,IAAMsM,YA5BT,E,gEAiCT,6BAA8B3G,cAC7BiC,OAAOC,SAAS,EAAGlC,aAAaQ,QAAQ,+B,+BAMzC,IAAD,OAEEoG,EAAgBjO,KAAKgG,QAAQvF,KAAI,SAACsF,GAClC,OAAO,4BAAQpF,IAAKoF,GAAUA,MAG9BmI,EAAuB,4BACvB,mCACA,mCACA,mCACA,mCACA,mCACA,mCACA,oCAGJ,GAAGlO,KAAKuF,YAAYlC,OAAS,EAAG,CAE5B,IAAImC,EAAe5D,EAAOyD,SAASrF,KAAKqJ,MAAMjD,UAC1CX,EAAa7D,EAAOyD,SAASrF,KAAKqJ,MAAMhD,QACxC8H,EAAsBzK,EAAW0K,wBAAwBpO,KAAKuF,YAAaC,EAAcC,GAG7F0I,EAAsBzK,EAAW2K,mCAAmCF,EAAqBnO,KAAKqJ,MAAMtF,iBAGpGoK,EAAsBzK,EAAW4K,0BAA0BH,EAAqBnO,KAAKqJ,MAAMtD,QAG3F,IAAIwI,EAAWvO,KAAKqJ,MAAMkF,SAE1BJ,EAAoBjI,MAAK,SAACsI,EAAaC,GACnC,GAAgB,eAAbF,EACC,OAAOC,EAAYlO,WAAZ,WAAuCmO,EAAYnO,WAAZ,WAElD,GAAgB,sBAAbiO,EACC,OAAOC,EAAYlO,WAAZ,iBAA6CmO,EAAYnO,WAAZ,iBAExD,GAAgB,kBAAbiO,EACC,OAAOC,EAAYlO,WAAZ,kBAA8CmO,EAAYnO,WAAZ,kBAEzD,GAAgB,kBAAbiO,EAA8B,CAC7B,IAAIG,EAAQF,EAAYG,uBACpBC,EAAQH,EAAYE,uBAExB,MAAwC,YAArCH,EAAYlO,WAAZ,QAAuF,YAArCmO,EAAYnO,WAAZ,OAC1C,EAE6B,YAArCkO,EAAYlO,WAAZ,QAAuF,aAArCmO,EAAYnO,WAAZ,OAC1C,EAE6B,aAArCkO,EAAYlO,WAAZ,QAAwF,YAArCmO,EAAYnO,WAAZ,QAC1C,EAEC,OAAVoO,GAA4B,OAAVE,EACV,EAEE,OAAVF,EACQ,EAEE,OAAVE,GACS,EAELF,EAAMpM,UAAUsM,GAG3B,MAAgB,kBAAbL,EACyC,YAArCC,EAAYlO,WAAZ,QAAuF,YAArCmO,EAAYnO,WAAZ,OAC1C,EAE6B,YAArCkO,EAAYlO,WAAZ,QAAuF,aAArCmO,EAAYnO,WAAZ,OAC1C,EAE6B,aAArCkO,EAAYlO,WAAZ,QAAwF,YAArCmO,EAAYnO,WAAZ,QAC1C,EAELkO,EAAY5I,wBAAwBtD,UAAUmM,EAAY7I,yBAG9D,KAIiB,eAAzB5F,KAAKqJ,MAAMwF,WACVV,EAAoBW,UAGxBZ,EAAuBC,EAAoB1N,KAAI,SAACP,GAC5C,IAAI6O,EAAiB7O,EAAW8O,kCAGhC,OAAO,wBAAIrO,IAAKT,EAAWI,WAAX,UAAoCmL,QAAS,SAACC,GAClDrE,aAAaC,QAAQ,2BAA4BgC,OAAO2F,SACxD,EAAKhP,MAAMiP,oBAAoBhP,KAEvC,4BAAI,gCAAUA,EAAWI,WAAX,YACd,4BAAMlB,EAAYoB,eAAeN,EAAWI,WAAX,mBACjC,6BACoD,IAA7CJ,EAAWI,WAAX,mBAAkDhB,QAAQ,GADjE,UAC6E,IACvEY,EAAWI,WAAX,iBAEN,4BAAMlB,EAAYoB,eAAeN,EAAWI,WAAX,iBAA4CJ,EAAWG,2BACxF,4BAAM0O,EAAc,YAAgBxP,YACpC,4BAAMH,EAAYoB,eAAeuO,EAAc,gBAC/C,4BAAMA,EAAc,aAAiBxP,gBAQvD,OAFM+J,OAAOjC,aAAaC,QAAQ,yBAA0BC,KAAKC,UAAUxH,KAAKqJ,QAG/E,yBAAK8F,IAAKnP,KAAK+N,SACd,kBAACxB,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,CAAKC,GAAG,MACP,2CACA,2BAAG,kBAACjB,EAAA,EAAD,CAAQ3K,QAAQ,UAAU4K,QAAUzL,KAAKC,MAAMmP,oBAA/C,qBAGL,kBAAC7C,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,CAAKC,GAAG,KACP,kBAAC3L,EAAA,EAAKC,MAAN,KACC,kBAACD,EAAA,EAAKmL,KAAN,CAAWC,UAAU,cAArB,aACA,kBAACpL,EAAA,EAAKG,QAAN,CAAcC,KAAK,OAAO0K,YAAY,aACbxK,MAAOpB,KAAKqJ,MAAMjD,SAAUyF,SAAU,SAACH,GAAQ,EAAKzB,SAAS,CAAC,SAAYyB,EAAET,OAAO7J,aAG9G,kBAACoL,EAAA,EAAD,CAAKC,GAAG,KACP,kBAAC3L,EAAA,EAAKC,MAAN,KACC,kBAACD,EAAA,EAAKmL,KAAN,CAAWC,UAAU,cAArB,WACA,kBAACpL,EAAA,EAAKG,QAAN,CAAcC,KAAK,OAAO0K,YAAY,aACbxK,MAAOpB,KAAKqJ,MAAMhD,OAAQwF,SAAU,SAACH,GAAQ,EAAKzB,SAAS,CAAC,OAAUyB,EAAET,OAAO7J,aAG1G,kBAACoL,EAAA,EAAD,CAAKC,GAAG,KACP,kBAAC3L,EAAA,EAAKC,MAAN,KACC,kBAACD,EAAA,EAAKmL,KAAN,CAAWC,UAAU,cAArB,aACA,kBAACpL,EAAA,EAAKG,QAAN,CAAcuM,GAAG,SAASC,QAAM,EACPrM,MAAOpB,KAAKqJ,MAAMkF,SAAU1C,SAAU,SAACH,GAAQ,EAAKzB,SAAS,CAAC,SAAYyB,EAAET,OAAO7J,UAC3G,8CACA,qDACA,iDACA,iDACA,oDAIH,kBAACoL,EAAA,EAAD,CAAKC,GAAG,KACP,kBAAC3L,EAAA,EAAKC,MAAN,KACC,kBAACD,EAAA,EAAKmL,KAAN,CAAWC,UAAU,cAArB,cACA,kBAACpL,EAAA,EAAKG,QAAN,CAAcuM,GAAG,SAASC,QAAM,EACPrM,MAAOpB,KAAKqJ,MAAMwF,UAAWhD,SAAU,SAACH,GAAQ,EAAKzB,SAAS,CAAC,UAAayB,EAAET,OAAO7J,UAC7G,6CACA,iDAIH,kBAACoL,EAAA,EAAD,CAAKC,GAAG,KACP,kBAAC3L,EAAA,EAAKC,MAAN,KACC,kBAACD,EAAA,EAAKmL,KAAN,CAAWC,UAAU,cAArB,oBACA,kBAACpL,EAAA,EAAKG,QAAN,CAAcuM,GAAG,SAASC,QAAM,EACPrM,MAAOpB,KAAKqJ,MAAMtF,gBAAiB8H,SAAU,SAACH,GAAQ,EAAKzB,SAAS,CAAC,gBAAmByB,EAAET,OAAO7J,UACzH,uCACA,2CACA,4CAIH,kBAACoL,EAAA,EAAD,CAAKC,GAAG,KACP,kBAAC3L,EAAA,EAAKC,MAAN,KACC,kBAACD,EAAA,EAAKmL,KAAN,CAAWC,UAAU,cAArB,UACA,kBAACpL,EAAA,EAAKG,QAAN,CAAcuM,GAAG,SAASC,QAAM,EACPrM,MAAOpB,KAAKqJ,MAAMtD,OAAQ8F,SAAU,SAACH,GAAQ,EAAKzB,SAAS,CAAC,OAAUyB,EAAET,OAAO7J,UACvG,uCAC0B6M,MAK9B,kBAAC1B,EAAA,EAAD,KACgB,kBAACC,EAAA,EAAD,CAAKC,GAAG,MACJ,kBAACpL,EAAA,EAAD,CAAOsC,GAAG,mBAAmBrC,YAAU,EAACC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACZ,QAAQ,QACnE,+BACI,4BACI,wBAAIqL,UAAU,gBAAd,cACA,wBAAIA,UAAU,gBAAd,qBACA,wBAAIA,UAAU,gBAAd,WACA,wBAAIA,UAAU,gBAAd,cACA,wBAAIA,UAAU,gBAAd,iBACA,wBAAIA,UAAU,gBAAd,mBACA,wBAAIA,UAAU,gBAAd,mBAGR,+BAASgC,W,GA7ONxM,IAAMC,WCkDtB0N,E,kDAlDd,WAAYpP,GAAQ,IAAD,8BAClB,cAAMA,IAGDoJ,MAAQ,CACZiG,oBAAqB,mBACrBpP,WAAY,MAKb,EAAKqP,0BAA4B,EAAKA,0BAA0BC,KAA/B,gBAXf,E,uEAgBlBnI,aAAaC,QAAQ,2BAA4B,GACjDtH,KAAKiK,SAAS,CAAEqF,oBAAqB,oBAAqBpP,WAAY,S,gDAI7CuP,GACzBzP,KAAKiK,SAAS,CAAEqF,oBAAqB,qBAAsBpP,WAAYuP,M,wCAKvEzP,KAAKiK,SAAS,CAAEqF,oBAAqB,uB,+BAI5B,IAAD,OASJI,EANe,CAClB,kBAAC,EAAD,CAAkBN,mBAAoB,SAAC1D,GAAQ,EAAKiE,4BAA8BT,oBAAsBlP,KAAKuP,4BAC7G,kBAAC,EAAD,CAAgBnG,SAAS,MAAMqB,UAAW,SAACiB,GAAQ,EAAKkE,qBACxD,kBAAC,EAAD,CAAgBxG,SAAS,SAASqB,UAAW,SAACiB,GAAQ,EAAKkE,mBAAqB1P,WAAYF,KAAKqJ,MAAMnJ,cAJjF,CAAC,mBAAoB,oBAAqB,sBAOjB+F,QAAQjG,KAAKqJ,MAAMiG,sBAEnE,OACC,oCACEI,O,GA/C8BhO,IAAMC,WCmF1BkO,E,kDA/Ed,WAAY5P,GAAQ,IAAD,8BAClB,cAAMA,IAEDgJ,SAAW,IAAI7B,EAHF,E,gEAQlB,IAAIe,EAAUnI,KAAKC,MAAMmI,WAAW0H,MAAQ,IAAM9P,KAAKC,MAAMmI,WAAW2H,MAAQ,IAAM/P,KAAKC,MAAMmI,WAAW4H,MAExGC,EAAelF,SAASC,cAAc,KAC1CiF,EAAaC,SAAW,SAAW/H,EAAU,IAAMvG,EAAO6C,MAAMlF,WAAa,QAC7E0Q,EAAa9E,KAAK,iCAAmCgF,mBAAmB5I,KAAKC,UAAUxH,KAAKiJ,SAASmH,aAAajI,KAClH8H,EAAa7E,U,wCAIIiF,GACjB,GAAI/G,OAAOoB,QAAQ,0EAAnB,CAGA,IAAI4F,EAAa,IAAIC,WACjBtH,EAAWjJ,KAAKiJ,SAChBb,EAAapI,KAAKC,MAAMmI,WAAW0H,MAAQ,IAAM9P,KAAKC,MAAMmI,WAAW2H,MAAQ,IAAM/P,KAAKC,MAAMmI,WAAW4H,MAE/GM,EAAWE,OAAS,WACnB,IACIvH,EAASwH,WAAWrI,EAAYb,KAAKK,MAAM0I,EAAW3L,SACxD2E,OAAOI,MAAM,sBAEbJ,OAAOI,MAAM,kBACb,MAAMxB,GACPT,QAAQC,IAAIQ,GACZoB,OAAOI,MAAM,mBAIf4G,EAAWI,WAAWL,M,yCAKlB/G,OAAOoB,QAAQ,+CAGnB1K,KAAKiJ,SAAS0H,QACdtJ,aAAasJ,QACbrH,OAAOI,MAAM,wB,+BAGJ,IAAD,OACR,OACC,kBAAC6C,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,CAAKC,GAAG,KACP,uCACA,mQAMA,sCACA,2BAAG,kBAACjB,EAAA,EAAD,CAAQ3K,QAAQ,UAAU4K,QAAS,SAACC,GAAQ,EAAKkF,sBAAjD,qBACH,sCACA,uHACA,kBAAC9P,EAAA,EAAK+P,KAAN,CAAWC,MAAM,kCAAkCrD,QAAM,EACxD5B,SAAU,SAACH,GAAQ,EAAKqF,kBAAkBrF,EAAET,OAAO+F,MAAM,OAC1D,6BAAM,8BAEP,kBAACxE,EAAA,EAAD,CAAKC,GAAG,KACP,qCACA,gFACA,2BAAG,kBAACjB,EAAA,EAAD,CAAQ3K,QAAQ,SAAS4K,QAAS,SAACC,GAAQ,EAAKuF,qBAAhD,wB,GA3EsBvP,IAAMC,W,wBC6IrBuP,E,uKA3ID,IAAD,OACD5Q,EAAaN,KAAKC,MAAMgI,IAAX,WAEjB,OACI,kBAACkJ,EAAA,EAAD,CAAMC,GAAG,OAAOC,KAAK,QAAQ3D,MAAO,CAAE4D,aAAc,SACpD,kBAACH,EAAA,EAAKjE,OAAN,KAAa,gCAAS5M,EAAU,SAAnB,OAAqCA,EAAU,SAC5D,kBAAC6Q,EAAA,EAAK9D,KAAN,KACI,kBAACvM,EAAA,EAAKC,MAAN,KACI,kBAACD,EAAA,EAAKE,MAAN,yBACA,kBAAC2L,EAAA,EAAD,CAAa4E,KAAK,KAAKpQ,UAAQ,EAACC,MAAOd,EAAU,mBAErD,kBAACQ,EAAA,EAAKC,MAAN,KACI,kBAACD,EAAA,EAAKE,MAAN,eACA,kBAAC2L,EAAA,EAAD,CAAa4E,KAAK,KAAKpQ,UAAQ,EAACC,MAAOd,EAAU,UAErD,kBAACQ,EAAA,EAAKC,MAAN,KACI,kBAACD,EAAA,EAAKE,MAAN,wCACA,kBAACwQ,EAAA,EAAD,CAAatF,UAAU,WAAWzH,IAAMnE,EAAU,YAAkBmR,IAAI,OACxE,kBAAC/E,EAAA,EAAD,CAAY6E,KAAK,KAAKrF,UAAU,QAC5B,kBAACS,EAAA,EAAD,CAAaxL,UAAQ,EAACC,MAAShC,EAAYoB,eAAeF,EAAU,gBAAsB,MAAQlB,EAAYoB,eAAeF,EAAU,sBACvI,kBAACoM,EAAA,EAAWE,OAAZ,KACI,kBAACF,EAAA,EAAWT,KAAZ,KAAmB3L,EAAU,YAA7B,QAIZ,kBAACQ,EAAA,EAAKC,MAAN,KACA,kBAACD,EAAA,EAAKE,MAAN,mBACI,kBAACwQ,EAAA,EAAD,CAAatF,UAAU,WAAWzH,IAAMnE,EAAU,yBAA+BmR,IAAMnR,EAAU,qBACjG,kBAACqM,EAAA,EAAD,CAAa4E,KAAK,KAAKpQ,UAAQ,EAACC,MAAQhC,EAAYoB,eAAeF,EAAU,0BAAgC,WAAalB,EAAYoB,eAAeF,EAAU,uBAEnK,kBAACQ,EAAA,EAAKC,MAAN,KACI,kBAACD,EAAA,EAAKE,MAAN,qBACA,kBAACwQ,EAAA,EAAD,CAAatF,UAAU,WAAWzH,IAAMnE,EAAU,qBAA2BmR,IAAMnR,EAAU,cAC7F,kBAACqM,EAAA,EAAD,CAAa4E,KAAK,KAAKpQ,UAAQ,EAACC,MAAQhC,EAAYoB,eAAeF,EAAU,sBAA4B,WAAalB,EAAYoB,eAAeF,EAAU,gBAE/J,kBAACQ,EAAA,EAAKC,MAAN,KACI,kBAACD,EAAA,EAAKE,MAAN,2BACA,kBAACwQ,EAAA,EAAD,CAAatF,UAAU,WAAWzH,IAAMnE,EAAU,kBAAwBmR,IAAMnR,EAAU,qBAC1F,kBAACqM,EAAA,EAAD,CAAa4E,KAAK,KAAKpQ,UAAQ,EAACC,MAAQd,EAAU,kBAAwB,WAAaA,EAAU,sBAErG,kBAACQ,EAAA,EAAKC,MAAN,KACI,kBAACD,EAAA,EAAKE,MAAN,oCACA,kBAACwQ,EAAA,EAAD,CAAatF,UAAU,WAAWzH,IAAmD,IAA5CnE,EAAU,qBAAV,IAAmDmR,IAAI,OAChG,kBAAC/E,EAAA,EAAD,CAAY6E,KAAK,KAAKrF,UAAU,QAC5B,kBAACQ,EAAA,EAAWgF,QAAZ,KACI,kBAAChF,EAAA,EAAWT,KAAZ,aAEJ,kBAACU,EAAA,EAAD,CAAaxL,UAAQ,EAACC,OAAqD,IAA5Cd,EAAU,qBAAV,KAAiDhB,QAAQ,GAAK,MAC7F,kBAACoN,EAAA,EAAWgF,QAAZ,KACI,kBAAChF,EAAA,EAAWT,KAAZ,cAEJ,kBAACU,EAAA,EAAD,CAAaxL,UAAQ,EAACC,OAAsD,IAA7Cd,EAAU,qBAAV,MAAkDhB,QAAQ,GAAK,MAC9F,kBAACoN,EAAA,EAAWgF,QAAZ,KACI,kBAAChF,EAAA,EAAWT,KAAZ,aAEJ,kBAACU,EAAA,EAAD,CAAaxL,UAAQ,EAACC,OAAqD,IAA5Cd,EAAU,qBAAV,KAAiDhB,QAAQ,GAAK,QAGrG,kBAACwB,EAAA,EAAKC,MAAN,KACI,kBAACD,EAAA,EAAKE,MAAN,uCACA,kBAACwQ,EAAA,EAAD,CAAatF,UAAU,WAAWzH,IAA6D,IAAvDnE,EAAU,gCAAV,IAA6DmR,IAAI,OACzG,kBAAC/E,EAAA,EAAD,CAAY6E,KAAK,KAAKrF,UAAU,QAC5B,kBAACQ,EAAA,EAAWgF,QAAZ,KACI,kBAAChF,EAAA,EAAWT,KAAZ,aAEJ,kBAACU,EAAA,EAAD,CAAaxL,UAAQ,EAACC,OAAgE,IAAvDd,EAAU,gCAAV,KAA4DhB,QAAQ,GAAK,MACxG,kBAACoN,EAAA,EAAWgF,QAAZ,KACI,kBAAChF,EAAA,EAAWT,KAAZ,cAEJ,kBAACU,EAAA,EAAD,CAAaxL,UAAQ,EAACC,OAAiE,IAAxDd,EAAU,gCAAV,MAA6DhB,QAAQ,GAAK,MACzG,kBAACoN,EAAA,EAAWgF,QAAZ,KACI,kBAAChF,EAAA,EAAWT,KAAZ,aAEJ,kBAACU,EAAA,EAAD,CAAaxL,UAAQ,EAACC,OAAgE,IAAvDd,EAAU,gCAAV,KAA4DhB,QAAQ,GAAK,QAGhH,kBAACwB,EAAA,EAAKC,MAAN,KACI,kBAACD,EAAA,EAAKE,MAAN,gCACA,kBAACwQ,EAAA,EAAD,CAAatF,UAAU,WAAWzH,IAAMnE,EAAU,YAAV,IAAmCmR,IAAI,OAC/E,kBAAC/E,EAAA,EAAD,CAAY6E,KAAK,KAAKrF,UAAU,QAC5B,kBAACQ,EAAA,EAAWgF,QAAZ,KACI,kBAAChF,EAAA,EAAWT,KAAZ,aAEJ,kBAACU,EAAA,EAAD,CAAaxL,UAAQ,EAACC,MAAQmC,SAASjD,EAAU,YAAV,OACvC,kBAACoM,EAAA,EAAWgF,QAAZ,KACI,kBAAChF,EAAA,EAAWT,KAAZ,cAEJ,kBAACU,EAAA,EAAD,CAAaxL,UAAQ,EAACC,MAAQd,EAAU,YAAV,OAC9B,kBAACoM,EAAA,EAAWgF,QAAZ,KACI,kBAAChF,EAAA,EAAWT,KAAZ,aAEJ,kBAACU,EAAA,EAAD,CAAaxL,UAAQ,EAACC,MAAQd,EAAU,YAAV,QAGtC,kBAACQ,EAAA,EAAKC,MAAN,KACI,kBAACD,EAAA,EAAKE,MAAN,mCACA,kBAACwQ,EAAA,EAAD,CAAatF,UAAU,WAAWzH,IAAMnE,EAAU,sBAAV,IAA6CmR,IAAI,OACzF,kBAAC/E,EAAA,EAAD,CAAY6E,KAAK,KAAKrF,UAAU,QAC5B,kBAACQ,EAAA,EAAWgF,QAAZ,KACI,kBAAChF,EAAA,EAAWT,KAAZ,aAEJ,kBAACU,EAAA,EAAD,CAAaxL,UAAQ,EAACC,MAAQmC,SAASjD,EAAU,sBAAV,OACvC,kBAACoM,EAAA,EAAWgF,QAAZ,KACI,kBAAChF,EAAA,EAAWT,KAAZ,cAEJ,kBAACU,EAAA,EAAD,CAAaxL,UAAQ,EAACC,MAAQd,EAAU,sBAAV,OAC9B,kBAACoM,EAAA,EAAWgF,QAAZ,KACI,kBAAChF,EAAA,EAAWT,KAAZ,aAEJ,kBAACU,EAAA,EAAD,CAAaxL,UAAQ,EAACC,MAAQd,EAAU,sBAAV,QAGtC,kBAACQ,EAAA,EAAKC,MAAN,KACI,kBAACD,EAAA,EAAKE,MAAN,qDACA,kBAACwQ,EAAA,EAAD,CAAatF,UAAU,WAAWzH,IAAMnE,EAAU,cAAV,IAAqCmR,IAAI,OACjF,kBAAC/E,EAAA,EAAD,CAAY6E,KAAK,KAAKrF,UAAU,QAC5B,kBAACQ,EAAA,EAAWgF,QAAZ,KACI,kBAAChF,EAAA,EAAWT,KAAZ,aAEJ,kBAACU,EAAA,EAAD,CAAaxL,UAAQ,EAACC,MAAQmC,SAASjD,EAAU,cAAV,OACvC,kBAACoM,EAAA,EAAWgF,QAAZ,KACI,kBAAChF,EAAA,EAAWT,KAAZ,cAEJ,kBAACU,EAAA,EAAD,CAAaxL,UAAQ,EAACC,MAAQd,EAAU,cAAV,OAC9B,kBAACoM,EAAA,EAAWgF,QAAZ,KACI,kBAAChF,EAAA,EAAWT,KAAZ,aAEJ,kBAACU,EAAA,EAAD,CAAaxL,UAAQ,EAACC,MAAQd,EAAU,cAAV,SAI1C,kBAAC6Q,EAAA,EAAKQ,OAAN,CAAajE,MAAO,CAAEC,UAAW,WAC7B,kBAACnC,EAAA,EAAD,CAAQC,QAAS,WAAQ,EAAKxL,MAAM2R,eAAe,EAAK3R,MAAM4R,aAA9D,gB,GAvIWnQ,IAAMC,WCkkBlBmQ,E,kDA1jBd,WAAY7R,GAAQ,IAAD,uBAClB,cAAMA,IAEDgJ,SAAW,IAAI7B,EAEpB,EAAK7B,YAAc,EAAK0D,SAASE,iBACjC,EAAKnD,QAAUtC,EAAWwF,WAAW,EAAK3D,aAG1C,IAAIsI,EAAQnK,EAAWoK,oCAAoC,EAAKvI,aAT9C,OAWlB,EAAK8D,MAAQ,CACZ,SAAsB,OAAVwE,EAAiBA,EAAK,SAAatO,WAAa,GAC5D,OAAoB,OAAVsO,EAAiBA,EAAK,OAAWtO,WAAa,GACxD,gBAAmB,MACnB,OAAU,MACV,6BAA+B,EAC/B,mBAAqB,EACrB,8BAAgC,EAChC,wBAA0B,EAC1B,KAAQ,EAAK0J,SAAS8I,WAGvB,EAAKC,qBAAuB,EAAKA,qBAAqBxC,KAA1B,gBAvBV,E,mEA4BlB,IAAIhK,EAAe5D,EAAOyD,SAASrF,KAAKqJ,MAAMjD,UAC1CX,EAAa7D,EAAOyD,SAASrF,KAAKqJ,MAAMhD,QAE5C,GAAmB,MAAhBb,GAAsC,MAAdC,GAAsBD,EAAalD,UAAUmD,GAAc,EACrF6D,OAAOI,MAAM,6BADd,CAKA,IAAIzB,EAAM,IAAI9B,EACbnG,KAAKqJ,MAAMjD,SACXpG,KAAKqJ,MAAMhD,OACXrG,KAAKqJ,MAAMtF,gBACX/D,KAAKqJ,MAAMtD,OACX/F,KAAKsG,eACLtG,KAAKuG,qBACLvG,KAAKwG,YACLxG,KAAKyG,mBACLzG,KAAK0G,yBACL1G,KAAK2G,kBACL3G,KAAK4G,YACL5G,KAAK6G,mBACL7G,KAAK8G,qBACL9G,KAAK+G,YACL/G,KAAKgH,gCACLhH,KAAKiH,sBACLjH,KAAKkH,eAGNlH,KAAKiJ,SAASgJ,OAAOhK,GACrBjI,KAAKiK,SAAS,CAAC,KAAQjK,KAAKiJ,SAAS8I,e,2CAIjBF,GACpB7R,KAAKiJ,SAASiJ,UAAUL,EAAY,GACpC7R,KAAKiK,SAAS,CAAC,KAAQjK,KAAKiJ,SAAS8I,c,+BAG5B,IAAD,OAEJ9D,EAAgBjO,KAAKgG,QAAQvF,KAAI,SAACsF,GAC5B,OAAO,4BAAQpF,IAAKoF,GAAUA,MAGpCP,EAAe5D,EAAOyD,SAASrF,KAAKqJ,MAAMjD,UAC1CX,EAAa7D,EAAOyD,SAASrF,KAAKqJ,MAAMhD,QAGxC7B,EAAc5C,EAAO6C,MACrB0N,EAAkB,EAElBC,EAAY,EACZC,EAAe,EAEfC,EAAkB,EAClBC,EAAoB,EACpBC,EAAwB,EAE5BxS,KAAKsG,eAAiB,EACtBtG,KAAKuG,qBAAuB,EAC5BvG,KAAKwG,YAAc,EACnBxG,KAAKyG,mBAAqB,EAC1BzG,KAAK0G,yBAA2B,EAChC1G,KAAK2G,kBAAoB,EACzB3G,KAAK4G,YAAc,EACnB5G,KAAK6G,mBAAqB,EAE1B7G,KAAK8G,qBAAuB,CAAE,IAAO,EAAG,IAAO,EAAG,KAAQ,GAC1D9G,KAAK+G,YAAc,CAAE,IAAO,EAAG,IAAO,EAAG,KAAQ,GACjD/G,KAAKgH,gCAAkC,CAAE,IAAO,EAAG,IAAO,EAAG,KAAQ,GACrEhH,KAAKiH,sBAAwB,CAAE,IAAO,EAAG,IAAO,EAAG,KAAQ,GAC3DjH,KAAKkH,cAAgB,CAAE,IAAO,EAAG,IAAO,EAAG,KAAQ,GAEnDlH,KAAKyS,yBAA2B,GAChCzS,KAAK0S,mBAAqB,GAE1B,IAAIvE,EAAsB,GAG1B,GAAmB,MAAhB3I,GAAsC,MAAdC,GAAsBD,EAAalD,UAAUmD,IAAe,EAAG,CAMzF,GALA0I,EAAsBzK,EAAW0K,wBAAwBpO,KAAKuF,YAAaC,EAAcC,GACzF0I,EAAsBzK,EAAW2K,mCAAmCF,EAAqBnO,KAAKqJ,MAAMtF,kBACpGoK,EAAsBzK,EAAW4K,0BAA0BH,EAAqBnO,KAAKqJ,MAAMtD,SAGpE1C,OAAS,EAAG,CAClC8K,EAAoBjI,MAAK,SAACsI,EAAaC,GACtC,OAAOD,EAAYlO,WAAZ,WAAuCmO,EAAYnO,WAAZ,cAM/C,IAFA,IAAIqS,EAAgB,EAEZC,EAAI,EAAGA,EAAIzE,EAAoB9K,OAAQuP,IAAK,CACnD,IAAIC,EAAW1E,EAAoByE,EAAI,GAAG1O,cAAc3B,YAAY4L,EAAoByE,GAAG1O,gBAElF,IAAN0O,GAAWC,EAAW7S,KAAKkH,cAAL,QACxBlH,KAAKkH,cAAL,KAA6B2L,IAErB,IAAND,GAAWC,EAAW7S,KAAKkH,cAAL,OACxBlH,KAAKkH,cAAL,IAA4B2L,GAE7BF,GAAiBE,EAIlB7S,KAAKkH,cAAL,IAA4ByL,EAAgBxE,EAAoB9K,OAMjE,IAHA,IAAIyP,EAAuB,EACvBC,EAAc,EAEVzP,EAAI,EAAGA,EAAI6K,EAAoB9K,OAAQC,IAAK,CACnD,IAAIpD,EAAaiO,EAAoB7K,GAErC,GAAuC,YAApCpD,EAAWI,WAAX,OAAH,CAOKJ,EAAWI,WAAX,qBAA8CN,KAAKyS,2BACvDzS,KAAKyS,yBAAyBvS,EAAWI,WAAX,mBAA8C,CAC3E,gBAAoBJ,EAAWC,2BAC/B,UAAa,IAIfH,KAAKyS,yBAAyBvS,EAAWI,WAAX,mBAA4C0S,YAGrE9S,EAAWI,WAAX,UAAmCN,KAAK0S,mBAG5C1S,KAAK0S,mBAAmBxS,EAAWI,WAAX,UAFxBN,KAAK0S,mBAAmBxS,EAAWI,WAAX,QAAmC,EAM5D,IAAIZ,EAAkBQ,EAAWC,4BAExB,IAANmD,GAAW5D,EAAkBM,KAAK8G,qBAAL,QAC/B9G,KAAK8G,qBAAL,KAAoCpH,IAE5B,IAAN4D,GAAW5D,EAAkBM,KAAK8G,qBAAL,OAC/B9G,KAAK8G,qBAAL,IAAmCpH,GAGpC,IAAIsE,EAAS9D,EAAWI,WAAX,QAEJ,IAANgD,GAAWU,EAAShE,KAAK+G,YAAL,QACtB/G,KAAK+G,YAAL,KAA2B/C,IAEnB,IAANV,GAAWU,EAAShE,KAAK+G,YAAL,OACtB/G,KAAK+G,YAAL,IAA0B/C,GAG3B,IAAIiP,EAAmB/S,EAAWgT,6BAEzB,IAAN5P,GAAW2P,EAAmBjT,KAAKiH,sBAAL,QAChCjH,KAAKiH,sBAAL,KAAqCgM,IAE7B,IAAN3P,GAAW2P,EAAmBjT,KAAKiH,sBAAL,OAChCjH,KAAKiH,sBAAL,IAAoCgM,GAErCH,GAAwBpT,EACxBqT,GAAe/O,EACfwO,GAAyBS,EAIzB,IAAIvO,EAAYxE,EAAWK,4BAE2C,IAAnEmE,EAAUA,EAAUrB,OAAS,GAA7B,KAAwCf,UAAUkC,IACpD2N,IAEEzN,EAAUA,EAAUrB,OAAS,GAA7B,KAAwCf,UAAUkC,IAAgB,GACpExE,KAAK2G,oBAI0C,YAA7CzG,EAAWI,WAAX,kBACFN,KAAKsG,gBAAkBpG,EAAWI,WAAX,kBAExB,IAAI,IAAI0H,EAAI,EAAGA,EAAItD,EAAUrB,OAAQ2E,IAAK,CACzC,IAAItH,EAAWgE,EAAUsD,GAEtBtH,EAAQ,KAAS4B,UAAUkD,IAAiB,GAAK9E,EAAQ,KAAS4B,UAAUmD,IAAe,IAC9C,IAA5C/E,EAAQ,KAAS4B,UAAUkC,KAC7B8N,IACAC,GAAqB7R,EAAQ,WAG9BV,KAAKyG,oBAAsB/F,EAAQ,UAGa,UAA7CR,EAAWI,WAAX,kBACFN,KAAKsG,gBAAkB5F,EAAQ,UAAgBA,EAAQ,mBAExDV,KAAKwG,aAAe9F,EAAQ,kBAEzBA,EAAQ,KAAS4B,UAAUkC,IAAgB,IAC7CxE,KAAKuG,sBAAwB7F,EAAQ,kBACrCV,KAAK0G,0BAA4BhG,EAAQ,kBAvF3C0R,IACAC,GAAgBnS,EAAWI,WAAX,iBA4FlBN,KAAK6G,mBAAqBsH,EAAoB9K,OAAS+O,EACvDpS,KAAK4G,cAAiB5G,KAAKyG,mBAAqBzG,KAAKsG,gBAAkBtG,KAAKsG,eAAkB,KAAKhH,QAAQ,GAExG0C,MAAMhC,KAAK4G,eACb5G,KAAK4G,YAAc,GAGjB5G,KAAK6G,mBAAqB,IAC5B7G,KAAK8G,qBAAL,IAAmCgM,EAAuB9S,KAAK6G,mBAC/D7G,KAAK+G,YAAL,IAA0BgM,EAAc/S,KAAK6G,mBAE7C7G,KAAKgH,gCAAL,IAAgDhH,KAAK8G,qBAAL,IAAmC,GAAQ9G,KAAK+G,YAAL,IAC3F/G,KAAKgH,gCAAL,KAAiDhH,KAAK8G,qBAAL,KAAoC,GAAQ9G,KAAK+G,YAAL,KAC7F/G,KAAKgH,gCAAL,IAAgDhH,KAAK8G,qBAAL,IAAmC,GAAQ9G,KAAK+G,YAAL,IAE3F/G,KAAKiH,sBAAL,IACAjH,KAAKmT,kCAAoCX,EAAwBxS,KAAK6G,oBAKxE,IAAIuM,EAAkC,qCAEnCpT,KAAK4G,YAAc,IACrBwM,EAAkC,kBAACxS,EAAA,EAAD,CAAOsL,UAAU,kBAAkBrL,QAAQ,OAAO4K,QAAS,SAACC,GAAQ,EAAKzB,SAAS,CAAC,6BAA+B,MAAlH,aAAsI,gCAAQ,6CAA9I,MAGnC,IAAIoJ,EAA8B,qCAE/BlB,EAAkB,IACpBkB,EAA8B,kBAACzS,EAAA,EAAD,CAAOC,QAAQ,WAAU,oDAAzB,aAAoE,gCAAUsR,EAAV,eAApE,2CAG/B,IAAImB,EAA6B,qCAE9BlB,EAAY,IACdkB,EAA6B,kBAAC1S,EAAA,EAAD,CAAOC,QAAQ,WAAf,YAAkC,gCAAUuR,EAAV,uBAAlC,2BAA2G,gCAAUhT,EAAYoB,eAAe6R,MAE9K,IAAIkB,EAA2B,qCAE5BjB,EAAkB,IACpBiB,EAA2B,kBAAC3S,EAAA,EAAD,CAAOC,QAAQ,WAAf,YAAkC,gCAAUyR,EAAV,cAAlC,iCAA8G,gCAAUlT,EAAYoB,eAAe+R,MAG/K,IAAIxK,EAAO,qCACPyL,EAAQ,EAYZ,OAVGxT,KAAKqJ,MAAMtB,KAAK1E,OAAS,IAC3B0E,EAAO/H,KAAKqJ,MAAMtB,KAAKtH,KAAI,SAACwH,GAG3B,OAFAuL,IAEO,kBAAChH,EAAA,EAAD,CAAKC,GAAG,IAAI9L,IAAK,OAAS6S,GAChC,kBAAC,EAAD,CAAc3B,UAAW2B,EAAOvL,IAAKA,EAAK2J,eAAgB,EAAKI,4BAMjE,oCACC,kBAACzF,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,CAAKC,GAAG,MACP,2CAGF,kBAACF,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,CAAKC,GAAG,MAAO2G,GACf,kBAAC5G,EAAA,EAAD,CAAKC,GAAG,MAAO4G,GACf,kBAAC7G,EAAA,EAAD,CAAKC,GAAG,MAAO6G,GACf,kBAAC9G,EAAA,EAAD,CAAKC,GAAG,MAAO8G,IAEhB,kBAAChH,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,CAAKC,GAAG,KACP,kBAAC3L,EAAA,EAAKC,MAAN,KACC,kBAACD,EAAA,EAAKmL,KAAN,CAAWC,UAAU,cAArB,aACA,kBAACpL,EAAA,EAAKG,QAAN,CAAcC,KAAK,OAAO0K,YAAY,aACbxK,MAAOpB,KAAKqJ,MAAMjD,SAAUyF,SAAU,SAACH,GAAQ,EAAKzB,SAAS,CAAC,SAAYyB,EAAET,OAAO7J,aAG9G,kBAACoL,EAAA,EAAD,CAAKC,GAAG,KACP,kBAAC3L,EAAA,EAAKC,MAAN,KACC,kBAACD,EAAA,EAAKmL,KAAN,CAAWC,UAAU,cAArB,WACA,kBAACpL,EAAA,EAAKG,QAAN,CAAcC,KAAK,OAAO0K,YAAY,aACbxK,MAAOpB,KAAKqJ,MAAMhD,OAAQwF,SAAU,SAACH,GAAQ,EAAKzB,SAAS,CAAC,OAAUyB,EAAET,OAAO7J,aAG1G,kBAACoL,EAAA,EAAD,CAAKC,GAAG,KACP,kBAAC3L,EAAA,EAAKC,MAAN,KACC,kBAACD,EAAA,EAAKmL,KAAN,CAAWC,UAAU,cAArB,oBACA,kBAACpL,EAAA,EAAKG,QAAN,CAAcuM,GAAG,SAASC,QAAM,EACPrM,MAAOpB,KAAKqJ,MAAMtF,gBAAiB8H,SAAU,SAACH,GAAQ,EAAKzB,SAAS,CAAC,gBAAmByB,EAAET,OAAO7J,UACzH,uCACA,2CACA,4CAIH,kBAACoL,EAAA,EAAD,CAAKC,GAAG,KACP,kBAAC3L,EAAA,EAAKC,MAAN,KACC,kBAACD,EAAA,EAAKmL,KAAN,CAAWC,UAAU,cAArB,UACA,kBAACpL,EAAA,EAAKG,QAAN,CAAcuM,GAAG,SAASC,QAAM,EACPrM,MAAOpB,KAAKqJ,MAAMtD,OAAQ8F,SAAU,SAACH,GAAQ,EAAKzB,SAAS,CAAC,OAAUyB,EAAET,OAAO7J,UACvG,uCAC0B6M,MAK9B,kBAAC1B,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,CAAKC,GAAG,KACP,kBAAC3L,EAAA,EAAKC,MAAN,KACC,kBAACD,EAAA,EAAKE,MAAN,wCACA,kBAACwQ,EAAA,EAAD,CAAatF,UAAU,WAAWzH,IAAMzE,KAAK4G,YAAc,EAAI5G,KAAK4G,YAAa,EAAK6K,IAAI,OAC1F,kBAAC/E,EAAA,EAAD,CAAYR,UAAU,QACrB,kBAACS,EAAA,EAAD,CAAaxL,UAAQ,EAACC,MAAQhC,EAAYoB,eAAeR,KAAKsG,gBAAkB,MAAQlH,EAAYoB,eAAeR,KAAKyG,sBACxH,kBAACiG,EAAA,EAAWE,OAAZ,KACC,kBAACF,EAAA,EAAWT,KAAZ,KAAmBjM,KAAK4G,YAAxB,QAIH,kBAAC9F,EAAA,EAAKC,MAAN,KACC,kBAACD,EAAA,EAAKE,MAAN,mBACA,kBAACwQ,EAAA,EAAD,CAAatF,UAAU,WAAWzH,IAAMzE,KAAK0G,yBAA2B+K,IAAMzR,KAAKyG,mBAAqB,EAAIzG,KAAKyG,mBAAqB,MACtI,kBAACkG,EAAA,EAAD,CAAaxL,UAAQ,EAACC,MAAQhC,EAAYoB,eAAeR,KAAK0G,0BAA4B,WAAatH,EAAYoB,eAAeR,KAAKyG,uBAExI,kBAAC3F,EAAA,EAAKC,MAAN,KACC,kBAACD,EAAA,EAAKE,MAAN,qBACA,kBAACwQ,EAAA,EAAD,CAAatF,UAAU,WAAWzH,IAAMzE,KAAKuG,qBAAuBkL,IAAMzR,KAAKwG,YAAc,EAAIxG,KAAKwG,YAAc,MACpH,kBAACmG,EAAA,EAAD,CAAaxL,UAAQ,EAACC,MAAQhC,EAAYoB,eAAeR,KAAKuG,sBAAwB,WAAanH,EAAYoB,eAAeR,KAAKwG,gBAEpI,kBAAC1F,EAAA,EAAKC,MAAN,KACC,kBAACD,EAAA,EAAKE,MAAN,2BACA,kBAACwQ,EAAA,EAAD,CAAatF,UAAU,WAAWzH,IAAMzE,KAAK2G,kBAAoB8K,IAAMzR,KAAK6G,mBAAqB,EAAI7G,KAAK6G,mBAAqB,MAC/H,kBAAC8F,EAAA,EAAD,CAAaxL,UAAQ,EAACC,MAAQpB,KAAK2G,kBAAoB,WAAa3G,KAAK6G,uBAG3E,kBAAC2F,EAAA,EAAD,CAAKC,GAAG,KACP,kBAAC3L,EAAA,EAAKC,MAAN,KACC,kBAACyK,EAAA,EAAD,CAAQC,QAAU,WAAQ,EAAKxB,SAAS,CAAC,8BAAgC,KAAWpJ,QAAQ,OAAO6M,MAAO,CAAE+F,QAAS,EAAGC,OAAQ,GAAKxH,UAAU,eAAc,gDAC7J,kBAACpL,EAAA,EAAKE,MAAN,oCACA,kBAACwQ,EAAA,EAAD,CAAatF,UAAU,WAAWzH,IAA0C,IAAnCzE,KAAK8G,qBAAL,IAA0C2K,IAAI,OACvF,kBAAC/E,EAAA,EAAD,CAAYR,UAAU,QACrB,kBAACQ,EAAA,EAAWgF,QAAZ,KACC,kBAAChF,EAAA,EAAWT,KAAZ,aAED,kBAACU,EAAA,EAAD,CAAaxL,UAAQ,EAACC,OAA4C,IAAnCpB,KAAK8G,qBAAL,KAAwCxH,QAAQ,GAAK,MACpF,kBAACoN,EAAA,EAAWgF,QAAZ,KACC,kBAAChF,EAAA,EAAWT,KAAZ,cAED,kBAACU,EAAA,EAAD,CAAaxL,UAAQ,EAACC,OAA6C,IAApCpB,KAAK8G,qBAAL,MAAyCxH,QAAQ,GAAK,MACrF,kBAACoN,EAAA,EAAWgF,QAAZ,KACC,kBAAChF,EAAA,EAAWT,KAAZ,aAED,kBAACU,EAAA,EAAD,CAAaxL,UAAQ,EAACC,OAA4C,IAAnCpB,KAAK8G,qBAAL,KAAwCxH,QAAQ,GAAK,QAGtF,kBAACwB,EAAA,EAAKC,MAAN,KACC,kBAACD,EAAA,EAAKE,MAAN,uCACA,kBAACwQ,EAAA,EAAD,CAAatF,UAAU,WAAWzH,IAAoD,IAA9CzE,KAAKgH,gCAAL,IAAoDyK,IAAI,OAChG,kBAAC/E,EAAA,EAAD,CAAYR,UAAU,QACrB,kBAACQ,EAAA,EAAWgF,QAAZ,KACC,kBAAChF,EAAA,EAAWT,KAAZ,aAED,kBAACU,EAAA,EAAD,CAAaxL,UAAQ,EAACC,OAAuD,IAA9CpB,KAAKgH,gCAAL,KAAmD1H,QAAQ,GAAK,MAC/F,kBAACoN,EAAA,EAAWgF,QAAZ,KACC,kBAAChF,EAAA,EAAWT,KAAZ,cAED,kBAACU,EAAA,EAAD,CAAaxL,UAAQ,EAACC,OAAwD,IAA/CpB,KAAKgH,gCAAL,MAAoD1H,QAAQ,GAAK,MAChG,kBAACoN,EAAA,EAAWgF,QAAZ,KACC,kBAAChF,EAAA,EAAWT,KAAZ,aAED,kBAACU,EAAA,EAAD,CAAaxL,UAAQ,EAACC,OAAuD,IAA9CpB,KAAKgH,gCAAL,KAAmD1H,QAAQ,GAAK,QAGjG,kBAACwB,EAAA,EAAKC,MAAN,KACA,kBAACyK,EAAA,EAAD,CAAQC,QAAU,WAAQ,EAAKxB,SAAS,CAAC,wBAA0B,KAAWpJ,QAAQ,OAAO6M,MAAO,CAAE+F,QAAS,EAAGC,OAAQ,GAAKxH,UAAU,eAAc,gDACtJ,kBAACpL,EAAA,EAAKE,MAAN,gCACA,kBAACwQ,EAAA,EAAD,CAAatF,UAAU,WAAWzH,IAAMzE,KAAK+G,YAAL,IAA0B0K,IAAI,OACtE,kBAAC/E,EAAA,EAAD,CAAYR,UAAU,QACrB,kBAACQ,EAAA,EAAWgF,QAAZ,KACC,kBAAChF,EAAA,EAAWT,KAAZ,aAED,kBAACU,EAAA,EAAD,CAAaxL,UAAQ,EAACC,MAAQmC,SAASvD,KAAK+G,YAAL,OACvC,kBAAC2F,EAAA,EAAWgF,QAAZ,KACC,kBAAChF,EAAA,EAAWT,KAAZ,cAED,kBAACU,EAAA,EAAD,CAAaxL,UAAQ,EAACC,MAAQpB,KAAK+G,YAAL,OAC9B,kBAAC2F,EAAA,EAAWgF,QAAZ,KACC,kBAAChF,EAAA,EAAWT,KAAZ,aAED,kBAACU,EAAA,EAAD,CAAaxL,UAAQ,EAACC,MAAQpB,KAAK+G,YAAL,QAGhC,kBAACjG,EAAA,EAAKC,MAAN,KACC,kBAACD,EAAA,EAAKE,MAAN,mCACA,kBAACwQ,EAAA,EAAD,CAAatF,UAAU,WAAWzH,IAAMzE,KAAKiH,sBAAL,IAAoCwK,IAAI,OAChF,kBAAC/E,EAAA,EAAD,CAAYR,UAAU,QACrB,kBAACQ,EAAA,EAAWgF,QAAZ,KACC,kBAAChF,EAAA,EAAWT,KAAZ,aAED,kBAACU,EAAA,EAAD,CAAaxL,UAAQ,EAACC,MAAQmC,SAASvD,KAAKiH,sBAAL,OACvC,kBAACyF,EAAA,EAAWgF,QAAZ,KACC,kBAAChF,EAAA,EAAWT,KAAZ,cAED,kBAACU,EAAA,EAAD,CAAaxL,UAAQ,EAACC,MAAQpB,KAAKiH,sBAAL,OAC9B,kBAACyF,EAAA,EAAWgF,QAAZ,KACC,kBAAChF,EAAA,EAAWT,KAAZ,aAED,kBAACU,EAAA,EAAD,CAAaxL,UAAQ,EAACC,MAAQpB,KAAKiH,sBAAL,SAIjC,kBAACuF,EAAA,EAAD,CAAKC,GAAG,KACP,kBAAC3L,EAAA,EAAKC,MAAN,KACC,kBAACD,EAAA,EAAKE,MAAN,qDACA,kBAACwQ,EAAA,EAAD,CAAatF,UAAU,WAAWzH,IAAMzE,KAAKkH,cAAL,IAA4BuK,IAAI,OACxE,kBAAC/E,EAAA,EAAD,CAAYR,UAAU,QACrB,kBAACQ,EAAA,EAAWgF,QAAZ,KACC,kBAAChF,EAAA,EAAWT,KAAZ,aAED,kBAACU,EAAA,EAAD,CAAaxL,UAAQ,EAACC,MAAQmC,SAASvD,KAAKkH,cAAL,OACvC,kBAACwF,EAAA,EAAWgF,QAAZ,KACC,kBAAChF,EAAA,EAAWT,KAAZ,cAED,kBAACU,EAAA,EAAD,CAAaxL,UAAQ,EAACC,MAAQpB,KAAKkH,cAAL,OAC9B,kBAACwF,EAAA,EAAWgF,QAAZ,KACC,kBAAChF,EAAA,EAAWT,KAAZ,aAED,kBAACU,EAAA,EAAD,CAAaxL,UAAQ,EAACC,MAAQpB,KAAKkH,cAAL,UAKlC,kBAACqF,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,CAAKC,GAAG,KAAKiB,MAAO,CAAEC,UAAW,SAAU2D,aAAc,SACxD,kBAACqC,EAAA,EAAD,CAAapC,KAAK,KAAKrF,UAAU,QAChC,kBAACV,EAAA,EAAD,CAAQC,QAAU,WAAO,EAAKmI,yBAA9B,cACA,kBAACpI,EAAA,EAAD,CAAQ3K,QAAQ,OAAO4K,QAAU,WAAQ,EAAKxB,SAAS,CAAC,mBAAqB,MAA7E,QAIH,kBAACsC,EAAA,EAAD,KACGxE,GAEH,kBAAC+E,EAAA,EAAD,CAAOC,KAAM/M,KAAKqJ,MAAMwK,6BAA8B5G,OAAQ,SAACvB,GAAQ,EAAKzB,SAAS,CAAC,8BAAgC,MACrH,kBAAC6C,EAAA,EAAMI,OAAP,CAAcC,aAAW,GACxB,kBAACL,EAAA,EAAMM,MAAP,oCAED,kBAACN,EAAA,EAAMO,KAAP,KACC,kBAAChM,EAAA,EAAD,CAAOC,YAAU,EAACC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACZ,QAAQ,QAC3B,+BACI,4BACI,wBAAIqL,UAAU,gBAAd,gBACA,wBAAIA,UAAU,gBAAd,cACA,wBAAIA,UAAU,gBAAd,eAGR,+BAEnB4H,OAAOC,KAAK/T,KAAKyS,0BAA0BvM,OAAOzF,KAAI,SAACsJ,GACtD,OAAO,4BACN,6BAA2B,IAApBA,GAAyBzK,QAAQ,GAAxC,KACA,6BAA6E,IAAtE,EAAKmT,yBAAyB1I,GAA9B,iBAA2EzK,QAAQ,GAA1F,KACA,4BAAO,EAAKmT,yBAAyB1I,GAA9B,mBAQd,kBAAC+C,EAAA,EAAD,CAAOC,KAAM/M,KAAKqJ,MAAM2K,uBAAwB/G,OAAQ,SAACvB,GAAQ,EAAKzB,SAAS,CAAC,wBAA0B,MACzG,kBAAC6C,EAAA,EAAMI,OAAP,KACC,kBAACJ,EAAA,EAAMM,MAAP,6BAED,kBAACN,EAAA,EAAMO,KAAP,KACA,kBAAChM,EAAA,EAAD,CAAOC,YAAU,EAACC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACZ,QAAQ,QAC1B,+BACI,4BACI,wBAAIqL,UAAU,gBAAd,UACA,wBAAIA,UAAU,gBAAd,eAGR,+BAEnB4H,OAAOC,KAAK/T,KAAK0S,oBAAoBxM,MAAK,SAAS4E,EAAGmJ,GAAK,OAAOnJ,EAAImJ,KAAKxT,KAAI,SAACuD,GAC/E,OAAO,4BACN,4BAAMA,EAAN,aACA,4BAAM,EAAK0O,mBAAmB1O,YAQrC,kBAAC8I,EAAA,EAAD,CAAOC,KAAM/M,KAAKqJ,MAAM6K,4BAA6BjH,OAAQ,SAACvB,GAAQ,EAAKzB,SAAS,CAAC,6BAA+B,MACnH,kBAAC6C,EAAA,EAAMI,OAAP,CAAcC,aAAW,GACxB,kBAACL,EAAA,EAAMM,MAAP,uBAED,kBAACN,EAAA,EAAMO,KAAP,KACC,8DACiC,0DAAwC,IADzE,oBAEkB,0GAFlB,IAE2G,IAF3G,yFAGwF,IACvF,iFAJD,qCAIkG,IAJlG,wIAKuI,IALvI,4DAMsE,6FANtE,IAMkJ,IANlJ,gEAO8D,mDAAyB,IAAzB,qCAP9D,yCAYF,kBAACP,EAAA,EAAD,CAAOC,KAAM/M,KAAKqJ,MAAM8K,kBAAmBlH,OAAQ,SAACvB,GAAQ,EAAKzB,SAAS,CAAC,mBAAqB,MAC/F,kBAAC6C,EAAA,EAAMI,OAAP,CAAcC,aAAW,GACxB,kBAACL,EAAA,EAAMM,MAAP,oBAED,kBAACN,EAAA,EAAMO,KAAP,KACC,8SAKA,2BACC,kK,GAnjB0B3L,IAAMC,WCoExByS,E,6KAtEP,IAAIC,EAAOtJ,SAASC,cAAc,KAClCqJ,EAAKlJ,KAAO,yCACZkJ,EAAKpJ,OAAS,SACdoJ,EAAKjJ,U,+BAIF,IAAD,OACR,OACU,oCACI,kBAACmB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKC,GAAG,KACJ,0DACA,mFAGA,2DACA,+lBAUA,yIAIA,oDACA,+MAIA,mDACA,8MAKJ,kBAACD,EAAA,EAAD,CAAKC,GAAG,KACJ,kFACA,wOAKA,0KAIA,kBAAC7L,EAAA,EAAD,CAAOC,QAAQ,QACX,kBAACD,EAAA,EAAM0T,KAAP,CAAYnJ,KAAK,mDAAmDF,OAAO,SAASC,IAAI,uBAAxF,sDAEJ,yFAEoB,uBAAGC,KAAK,gCAAR,yBAFpB,KAIA,2BACI,gCAAQ,kBAACK,EAAA,EAAD,CAAQ3K,QAAQ,UAAU4K,QAAS,SAACC,GAAD,OAAO,EAAK6I,iBAA/C,6B,GAjEP7S,IAAMC,WCoEpB6S,E,kDA1Dd,WAAYvU,GAAQ,IAAD,8BAClB,cAAMA,IAGDoJ,MAAQ,CACZ,eAAkB,YAClB,QAAW,CAAE,MAAS,EAAG,MAAS,EAAG,MAAS,KAN7B,E,4DAWHoL,GACfnL,OAAOC,SAAS,EAAG,GACnBlC,aAAaC,QAAQ,2BAA4B,GACjDtH,KAAKiK,SAAS,CAAE,eAAkBwK,M,0CAKlCC,Q,+BAIS,IAAD,OAEFC,EAAY,CAAE,YAAa,cAAe,UAAW,SACrDC,EAAiB,CAAE,kBAAC,EAAD,MAAwB,kBAAC,EAAD,MAA0B,kBAAC,EAAD,CAAiBxM,WAAYpI,KAAKqJ,MAAMlB,UAAa,kBAAC,EAAD,OAG1H0M,EAAeF,EAAUlU,KAAI,SAACqU,GACnC,OAAGA,IAAa,EAAKzL,MAAM0L,eACnB,kBAACC,EAAA,EAAIV,KAAL,CAAUW,SAAUH,EAAUnU,IAAKmU,EAAUI,QAAM,EAACzJ,QAAS,SAACC,GAAD,OAAO,EAAKyJ,gBAAgBL,KAAYA,GAEtG,kBAACE,EAAA,EAAIV,KAAL,CAAUW,SAAUH,EAAUnU,IAAKmU,EAAUrJ,QAAS,SAACC,GAAD,OAAO,EAAKyJ,gBAAgBL,KAAYA,MAIlGM,EAAsBR,EAAeD,EAAU1O,QAAQjG,KAAKqJ,MAAM0L,iBAEtE,OACC,oCACC,kBAACM,EAAA,EAAD,CAAQC,kBAAgB,EAAClE,GAAG,OAAOvQ,QAAQ,OAAO0U,OAAO,KAAKC,MAAM,OACpE,kBAACH,EAAA,EAAOI,MAAR,CAActK,KAAK,SAAQ,oDAAiC,6BAAMnL,KAAKqJ,MAAMlB,QAAQ2H,MAAzB,IAAiC9P,KAAKqJ,MAAMlB,QAAQ4H,MAApD,IAA4D/P,KAAKqJ,MAAMlB,QAAQ6H,QAC1I,kBAACqF,EAAA,EAAOK,OAAR,CAAeC,gBAAc,qBAC7B,kBAACN,EAAA,EAAOO,SAAR,CAAiBjS,GAAG,oBACnB,kBAACqR,EAAA,EAAD,CAAK9I,UAAU,WACZ2I,KAIL,kBAACgB,EAAA,EAAD,CAAWC,OAAK,GACdV,Q,GAtDY1T,IAAMC,WCCJoU,QACW,cAA7BzM,OAAO0M,SAASC,UAEe,UAA7B3M,OAAO0M,SAASC,UAEhB3M,OAAO0M,SAASC,SAASC,MACvB,2DCbNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFtL,SAASuL,eAAe,SD0HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLrP,QAAQqP,MAAMA,EAAMC,c","file":"static/js/main.27297f3a.chunk.js","sourcesContent":["class NumberUtils {\r\n    // Convery a numer with commas and a peso sign\r\n    static formatCurrency(x) {\r\n        return \"₱\" + x.toFixed(2).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n    }\r\n}\r\n\r\nexport default NumberUtils;\r\n","import React from \"react\";\r\nimport { Form, Table, Alert  } from \"react-bootstrap\";\r\nimport NumberUtils from \"../Entities/NumberUtils\";\r\n\r\n// Investment details will show the effective interest rates and repayment schedules\r\nclass InvestmentDetails extends React.Component {\r\n\r\n\t// Display the calculated details of an investment\r\n\trender() {\r\n        let netInterestRate = \"...\";\r\n        let netGainRate = \"...\";\r\n        let netGainAmount = \"...\";\r\n        let netTotalPayoutAmount = \"...\";\r\n        let paymentSchedules = <tr><td>...</td><td>...</td><td>...</td></tr>\r\n        let onHoldNotice = <></>\r\n\r\n        // If an investment is provided then display the details\r\n        if(this.props.investment !== null) {            \r\n            netInterestRate = (this.props.investment.calculateNetInterestRate() * 100).toFixed(2) + \"%\";\r\n            netGainRate = (this.props.investment.calculateTenureInterestRate() * 100).toFixed(2) + \"%\";\r\n            netGainAmount = this.props.investment.calculateNetGainAmount();\r\n            netTotalPayoutAmount = this.props.investment.properties[\"investmentAmount\"] + netGainAmount;\r\n            paymentSchedules = this.props.investment.generateRepaymentSchedule();\r\n\r\n            netGainAmount = NumberUtils.formatCurrency(netGainAmount);\r\n            netTotalPayoutAmount = NumberUtils.formatCurrency(netTotalPayoutAmount);\r\n\r\n            paymentSchedules = paymentSchedules.map((schedule) => {\r\n                return <tr key={schedule[\"date\"].toString()}>\r\n                    <td>{ schedule[\"date\"].toString() }</td>\r\n                    <td>{ NumberUtils.formatCurrency(schedule[\"netInterestPayout\"]) }</td>\r\n                    <td>{ NumberUtils.formatCurrency(schedule[\"netPayout\"]) }</td>\r\n                </tr>\r\n            })\r\n\r\n            // Notice for on hold project\r\n            if(this.props.investment.properties[\"status\"] === \"On Hold\") {\r\n                onHoldNotice = <Alert variant=\"warning\">This project is <strong>On Hold</strong> and the <strong>repayment dates are just samples dates</strong>. </Alert>\r\n            }\r\n        }\r\n\r\n\t\treturn(\r\n\t\t\t<>\r\n\t\t\t\t<h2>Investment Details</h2>\r\n                <Form>\r\n                    <Form.Group>\r\n                        <Form.Label>Net Interest Rate per annum</Form.Label>\r\n                        <Form.Control type=\"text\" readOnly value={netInterestRate} />\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Label>Net Gain Rate after Tenure</Form.Label>\r\n                        <Form.Control type=\"text\" readOnly value={netGainRate} />\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Label>Net Gain Amount after Tenure</Form.Label>\r\n                        <Form.Control type=\"text\" readOnly value={netGainAmount} />\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Label>Total Net Payout after Tenure</Form.Label>\r\n                        <Form.Control type=\"text\" readOnly value={netTotalPayoutAmount} />\r\n                    </Form.Group>\r\n                </Form>\r\n                { onHoldNotice }\r\n                <Table responsive striped bordered hover variant=\"dark\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Payment Date</th>                        \r\n                            <th>Net Interest</th>\r\n                            <th>Net Payout</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>{ paymentSchedules }</tbody>\r\n                </Table>\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default InvestmentDetails;\r\n","// Date library\r\nclass MyDate {\r\n\r\n    // Create a date\r\n    constructor(year, month, day) {\r\n        this.properties = {\r\n            \"year\": year,\r\n            \"month\": month,\r\n            \"day\": day\r\n        };    \r\n\r\n        // Validate the date\r\n        if(isNaN(year) || isNaN(month) || isNaN(day))\r\n            throw new Error(\"Year, month, and/or day should be a number.\");\r\n        \r\n        // Validate the year\r\n        if(year < 1900)\r\n            throw new Error(\"Year cannot go below 1900.\");\r\n\r\n        // Validate the month\r\n        if(month < 1 || month > 12)\r\n            throw new Error(\"Month should be 1 to 12\");\r\n\r\n        // Validate the day\r\n        var daysEachMonth = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\n\r\n        if(MyDate.isLeapYear(year))\r\n            daysEachMonth[1] = 29;\r\n\r\n        if(day < 1 || day > daysEachMonth[month - 1])\r\n            throw new Error(\"Invalid day in month range.\");\r\n    }\r\n\r\n    // Compare if this date goes before, equal or after the other date\r\n    compareTo(other) {\r\n        if(this.properties[\"year\"] > other.properties[\"year\"])\r\n            return 1;\r\n        \r\n        if(this.properties[\"year\"] < other.properties[\"year\"])\r\n            return -1;\r\n\r\n        if(this.properties[\"month\"] > other.properties[\"month\"])\r\n            return 1;\r\n        \r\n        if(this.properties[\"month\"] < other.properties[\"month\"])\r\n            return -1;\r\n\r\n        if(this.properties[\"day\"] > other.properties[\"day\"])\r\n            return 1;\r\n\r\n        if(this.properties[\"day\"] < other.properties[\"day\"])\r\n            return -1;\r\n\r\n        return 0;\r\n    }\r\n\r\n    // Return the date as yyyy-mm-dd format\r\n    toString() {\r\n        var month = this.properties[\"month\"];\r\n        var day = this.properties[\"day\"];\r\n\r\n        if(month < 10)\r\n            month = \"0\" + month;\r\n\r\n        if(day < 10)\r\n            day = \"0\" + day;\r\n\r\n        return this.properties[\"year\"] + \"-\" \r\n            + month + \"-\" \r\n            + day;\r\n    }\r\n\r\n    // Calculate how many days between this date and the other date\r\n    daysBetween(otherDate) {\r\n        if(this.compareTo(otherDate) > 0)\r\n            return otherDate.daysBetween(this);\r\n\r\n        var daysEachMonth = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\n\r\n        var currentDay = this.properties[\"day\"];\r\n        var currentMonth = this.properties[\"month\"];\r\n        var currentYear = this.properties[\"year\"];\r\n        var daysPassed = 0;\r\n\r\n        // Update month for february if leap year\r\n        if(MyDate.isLeapYear(currentYear))\r\n            daysEachMonth[1] = 29;\r\n\r\n        while(currentYear !== otherDate.properties[\"year\"]\r\n                || currentMonth !== otherDate.properties[\"month\"]\r\n                || currentDay !== otherDate.properties[\"day\"]) {\r\n            currentDay++;\r\n            daysPassed++;\r\n\r\n            if(currentDay > daysEachMonth[currentMonth - 1]) {\r\n                // Move to the next month\r\n                currentDay = 1;\r\n                currentMonth++;\r\n\r\n                if(currentMonth > 12) {\r\n                    // Move to the next year\r\n                    currentMonth = 1;\r\n                    currentYear++;\r\n\r\n                    // Check if leap year, update the month for february\r\n                    if(MyDate.isLeapYear(currentYear))\r\n                        daysEachMonth[1] = 29;\r\n                    else\r\n                        daysEachMonth[1] = 28;\r\n                }\r\n            }\r\n        }\r\n\r\n        return daysPassed;\r\n    }\r\n\r\n    // Get the date before a month\r\n    subtractMonth() {\r\n        var year = this.properties[\"year\"];\r\n        var month = this.properties[\"month\"] - 1;\r\n        var day = this.properties[\"day\"];\r\n\r\n        if(month < 1) {\r\n            month = 12;\r\n            year--;\r\n        }\r\n\r\n        return new MyDate(year, month, day);\r\n    }\r\n\r\n    // Add a month, this is special. Each month consists of different\r\n    // days but SeedIn never releases payments that ends in days where\r\n    // it is 31 and it is 29\r\n    addMonth() {\r\n        // Set the days for each month    \r\n        var year = this.properties[\"year\"];\r\n        var month = this.properties[\"month\"] + 1;\r\n        var day = this.properties[\"day\"];\r\n\r\n        if(month > 12) {\r\n            year++;\r\n            month = 1;\r\n        }\r\n\r\n        return new MyDate(year, month, day);\r\n    }\r\n\r\n    // Return the proeprties of the date as a JSON\r\n    toJson() {\r\n        return {\r\n            \"year\": this.properties[\"year\"],\r\n            \"month\": this.properties[\"month\"],\r\n            \"day\": this.properties[\"day\"]\r\n        }\r\n    }\r\n\r\n    // Get the date now\r\n    static now() {\r\n        var jsDate = new Date();\r\n        return new MyDate(jsDate.getFullYear(), jsDate.getMonth() + 1, jsDate.getDate());\r\n    }\r\n\r\n    // Create a copy of the date as a new object\r\n    static copy(date) {\r\n        return new MyDate(date.properties[\"year\"], date.properties[\"month\"], date.properties[\"day\"]);\r\n    }\r\n\r\n    // Attempt to create a date object out of the string date\r\n    // Expects that the date is in yyyy-mm-dd format\r\n    // Returns null if the date is invalid\r\n    static toMyDate(strDate) {\r\n        // Validate the format\r\n        this.tokens = strDate.split(\"-\");\r\n\r\n        if(this.tokens.length !== 3)\r\n            return null;\r\n\r\n        // Check that everything else is a number\r\n        for(var i = 0; i < this.tokens.length; i++)\r\n            if(isNaN(this.tokens[i]))\r\n                return null;\r\n\r\n        var year = parseInt(this.tokens[0]);\r\n        var month = parseInt(this.tokens[1]);\r\n        var day = parseInt(this.tokens[2]);\r\n\r\n        // Validate the year\r\n        if(year < 1900 || isNaN(year) || isNaN(month) || isNaN(day))\r\n            return null;\r\n\r\n        // Validate the month, should be 1 to 12\r\n        if(month < 1 || month > 12)\r\n            return null;\r\n\r\n        // Validate the day, it should be within the month's day\r\n        var daysInMonths = [31,28,31,30,31,30,31,31,30,31,30,31];\r\n\r\n        // February is 29 days during leap year\r\n        if((year % 100 === 0) ? (year % 400 === 0) : (year % 4 === 0))\r\n            daysInMonths[1] = 29;\r\n\r\n        if(day < 1 || day > daysInMonths[month - 1])\r\n            return null;\r\n        \r\n        // We're good\r\n        return new MyDate(year, month, day);\r\n    }\r\n\r\n    // Convert the JSON to a date object\r\n    static jsonToObject(json) {\r\n        return new MyDate(\r\n            json[\"year\"],\r\n            json[\"month\"],\r\n            json[\"day\"]\r\n        );\r\n    }\r\n\r\n    // Utility function to check if leap year\r\n    static isLeapYear(year) {\r\n        return year % 100 === 0 ? year % 400 === 0 : year % 4 === 0;\r\n    }\r\n}\r\n\r\nexport default MyDate;\r\n","import MyDate from \"./MyDate\"\r\n\r\nclass Investment {\r\n\r\n    // Create a new investment object\r\n    constructor(id, amount, interestRate, firstPayDate, repaymentMethod, tenure, status) {\r\n        this.properties = {\r\n            \"projectId\": id,\r\n            \"investmentAmount\": amount,\r\n            \"grossInterestRate\": interestRate,\r\n            \"date\": firstPayDate, \r\n            \"repaymentMethod\": repaymentMethod,\r\n            \"tenure\": tenure,\r\n            \"projectUrl\": \"\",\r\n            \"issuer\": \"\",\r\n            \"status\": status\r\n        };\r\n\r\n        // This will throw an exception if the date is invalid\r\n        if(this.getOpenDate().compareTo(firstPayDate) > 0)\r\n            throw new Error(\"Open date goes after the first pay date.\");\r\n    }\r\n\r\n    // Return the proeprties of the date as a JSON\r\n    toJson() {\r\n        return {\r\n            \"projectId\": this.properties[\"projectId\"],\r\n            \"investmentAmount\": this.properties[\"investmentAmount\"],\r\n            \"grossInterestRate\": this.properties[\"grossInterestRate\"],\r\n            \"date\": this.properties[\"date\"].toJson(),\r\n            \"repaymentMethod\": this.properties[\"repaymentMethod\"],\r\n            \"tenure\": this.properties[\"tenure\"],\r\n            \"projectUrl\": this.properties[\"projectUrl\"],\r\n            \"issuer\": this.properties[\"issuer\"],\r\n            \"status\": this.properties[\"status\"]\r\n        };\r\n    }\r\n\r\n    // Extract the date the investment was opened\r\n    getOpenDate() {\r\n        var projectId = this.properties[\"projectId\"];\r\n\r\n        var year = parseInt(projectId[0] + \"\" + projectId[1] + \"\" + projectId[2] + \"\" + projectId[3]);\r\n        var month = parseInt(projectId[4] + \"\" + projectId[5]);\r\n        var day = parseInt(projectId[6] + \"\" + projectId[7]);\r\n\r\n        return new MyDate(year, month, day);\r\n    }\r\n\r\n    // Calculate how many days it took for to subscribe before the issuer get the loan\r\n    // Not applicable if the investment's current status is OnHold\r\n    calculateSubscriptionDays() {\r\n        if(this.properties[\"status\"] === \"On Hold\")\r\n            throw new Error(\"Project \" + this.properties[\"projectId\"] + \" is On Hold\");\r\n        \r\n        // Project has a maximum subscription days of 30... so the first month of payment is\r\n        // the basis. We go back a month.\r\n        var endDate = this.properties[\"date\"].subtractMonth();\r\n\r\n        // The project ID is the indicator on when the project opened, in the format of YYYYMMDDhhmm\r\n        // Remove the year, remove the month\r\n        var openDate = this.getOpenDate();\r\n        return openDate.daysBetween(endDate);\r\n    }\r\n\r\n    // Calculate the net interest rate per annum\r\n    calculateNetInterestRate() {\r\n        var feeRate = 0.30;\r\n        var netInterestRate = this.properties[\"grossInterestRate\"] * (1 - feeRate);\r\n        return netInterestRate;\r\n    }\r\n\r\n    // Calculate the interest rate within the tenure only\r\n    calculateTenureInterestRate() {\r\n        var netInterestRate = this.calculateNetInterestRate();\r\n        var tenureInterestRate = (netInterestRate / 12.0) * this.properties[\"tenure\"];\r\n        return tenureInterestRate;\r\n    }\r\n\r\n    // Calculate the gain amount within the tenure\r\n    calculateNetGainAmount() {\r\n        var netGainAmount = this.calculateTenureInterestRate() * this.properties[\"investmentAmount\"];\r\n        return netGainAmount;\r\n    }\r\n\r\n    // How much is the interest payout per month\r\n    calculateMonthlyNetInterestPayoutAmount() {\r\n        var monthlyInterestRate = this.calculateNetInterestRate() / 12;\r\n        return this.properties[\"investmentAmount\"] * monthlyInterestRate;\r\n    }\r\n\r\n    // How much of the capital is returned per month\r\n    calculateMonthlyCapitalPayoutAmount() {\r\n        if(this.properties[\"repaymentMethod\"] === \"Equal\")\r\n            return this.properties[\"investmentAmount\"] / this.properties[\"tenure\"];\r\n        \r\n        return 0;\r\n    }\r\n\r\n    // Return the next paydate\r\n    // Function is separated to save power\r\n    calculateNextPayDate() {\r\n        var currentDate = MyDate.now();\r\n        var schedules = this.generateRepaymentSchedule();\r\n\r\n        if(currentDate.compareTo(schedules[schedules.length - 1][\"date\"]) > 0)\r\n            return null;\r\n        \r\n        // Find the month\r\n        for(var i = 0; i < schedules.length; i++)\r\n            if(currentDate.compareTo(schedules[i][\"date\"]) <= 0)\r\n                return schedules[i][\"date\"];\r\n\r\n        return null;\r\n    }\r\n\r\n    // Return the maturity date\r\n    // Function is separated to save power\r\n    calculateMaturityDate() {\r\n        var schedules = this.generateRepaymentSchedule();\r\n        return schedules[schedules.length - 1][\"date\"];\r\n    }\r\n\r\n    // Calculate the next payout date, how much, and when it will mature\r\n    calculateNextPayAndMaturityDate() {        \r\n        if(this.properties[\"status\"] === \"On Hold\") {\r\n            return {\r\n                \"maturityDate\": \"On Hold\",\r\n                \"nextPayDate\": \"On Hold\",\r\n                \"nextPayAmount\": 0\r\n            }            \r\n        }\r\n\r\n        var currentDate = MyDate.now();\r\n        var schedules = this.generateRepaymentSchedule();\r\n\r\n        var result = {\r\n            \"maturityDate\": schedules[schedules.length - 1][\"date\"],\r\n            \"nextPayDate\": \"Completed\",\r\n            \"nextPayAmount\": 0\r\n        };\r\n\r\n        if(currentDate.compareTo(schedules[schedules.length - 1][\"date\"]) <= 0) {\r\n            // Find the month and amount\r\n            for(var i = 0; i < schedules.length; i++) {\r\n                if(currentDate.compareTo(schedules[i][\"date\"]) <= 0) {\r\n                    // Found it\r\n                    result[\"nextPayDate\"] = schedules[i][\"date\"];\r\n                    result[\"nextPayAmount\"] = schedules[i][\"netPayout\"];\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        \r\n        return result;\r\n    }\r\n\r\n    // Generate the repayment schedule based on repayment method\r\n    generateRepaymentSchedule() {\r\n        var schedules = [];\r\n        var monthlyNetInterestPayoutAmount = this.calculateMonthlyNetInterestPayoutAmount();\r\n        var monthlyCapitalAmount = this.calculateMonthlyCapitalPayoutAmount();\r\n        var currentDate = MyDate.copy(this.properties[\"date\"]);\r\n\r\n        for(var i = 0; i < this.properties[\"tenure\"]; i++) {\r\n            var netPayout =  monthlyNetInterestPayoutAmount + monthlyCapitalAmount;\r\n            \r\n            // Balloon will have all the capital amount on the last month\r\n            if(i + 1 === this.properties[\"tenure\"] && this.properties[\"repaymentMethod\"] === \"Balloon\")                \r\n                netPayout += this.properties[\"investmentAmount\"];\r\n            \r\n            var schedule = {\r\n                \"date\": currentDate,\r\n                \"netInterestPayout\": monthlyNetInterestPayoutAmount,\r\n                \"netPayout\": netPayout\r\n            }\r\n\r\n            schedules.push(schedule);\r\n            currentDate = currentDate.addMonth();\r\n        }\r\n\r\n        return schedules;\r\n    }\r\n\r\n    // Project ID is valid if it is not empty and it is unique\r\n    static validateProjectId(projectId) {\r\n        this.validationResult = { \"status\": true };\r\n\r\n        if(projectId === \"\") {\r\n            this.validationResult[\"status\"] = false;\r\n            this.validationResult[\"message\"] = \"Project ID is required.\";\r\n        }\r\n\r\n        return this.validationResult;\r\n    }\r\n\r\n    // Amount should be a numeric value greater than 0\r\n    static validateInvestedAmount(amount) {\r\n        this.validationResult = { \"status\": true };\r\n\r\n        if(amount === \"\") {\r\n            this.validationResult[\"status\"] = false;\r\n            this.validationResult[\"message\"] = \"Invested amount is required.\";\r\n        } else if(isNaN(amount)) {\r\n            this.validationResult[\"status\"] = false;\r\n            this.validationResult[\"message\"] = \"Amount should be a numeric value.\";\r\n        } else if(amount <= 0) {\r\n            this.validationResult[\"status\"] = false;\r\n            this.validationResult[\"message\"] = \"Amount should be a non-zero positive value.\";\r\n        }\r\n\r\n        return this.validationResult;\r\n    }\r\n\r\n    // Interest rate should be numeric between 1 and 20\r\n    static validateGrossInterestRate(interestRate) {\r\n        this.validationResult = { \"status\": true };\r\n\r\n        if(interestRate === \"\") {\r\n            this.validationResult[\"status\"] = false;\r\n            this.validationResult[\"message\"] = \"Gross interest rate amount is required.\";\r\n        } else if(isNaN(interestRate)) {\r\n            this.validationResult[\"status\"] = false;\r\n            this.validationResult[\"message\"] = \"Gross interest rate should be a numeric value.\";\r\n        } else if(interestRate < 1 || interestRate > 20) {\r\n            this.validationResult[\"status\"] = false;\r\n            this.validationResult[\"message\"] = \"Gross interest rate should be between 1% and 20% only.\";\r\n        }\r\n\r\n        return this.validationResult;\r\n    }\r\n\r\n    // Check that the date is in the format yyyy-mm-dd\r\n    static validateDate(date) {\r\n        date = MyDate.toMyDate(date);\r\n        this.validationResult = { \"status\": true };\r\n\r\n        if(date === null) {\r\n            this.validationResult[\"status\"] = false;\r\n            this.validationResult[\"message\"] = \"Invalid date.\";\r\n        }\r\n\r\n        return this.validationResult;\r\n    }\r\n\r\n    // Check that tenure is a number between 1 and 12\r\n    static validateTenure(tenure) {\r\n        this.validationResult = { \"status\": true };\r\n\r\n        if(tenure === \"\") {\r\n            this.validationResult[\"status\"] = false;\r\n            this.validationResult[\"message\"] = \"Tenure is required.\";\r\n        } else if(isNaN(tenure)) {\r\n            this.validationResult[\"status\"] = false;\r\n            this.validationResult[\"message\"] = \"Tenure should be a numeric value.\";\r\n        } else if(tenure < 1 || tenure > 12) {\r\n            this.validationResult[\"status\"] = false;\r\n            this.validationResult[\"message\"] = \"Tenure should be between 1 and 12 months only.\";\r\n        }\r\n\r\n        return this.validationResult;\r\n    }\r\n\r\n    // Convert the Json as an investment object\r\n    static jsonToObject(json) {\r\n        // Migratory code because we just added status\r\n        if(!(\"status\" in json))\r\n            json[\"status\"] = \"Invested\";\r\n        \r\n        var investment = new Investment(\r\n            json[\"projectId\"],\r\n            json[\"investmentAmount\"],\r\n            json[\"grossInterestRate\"],\r\n            MyDate.jsonToObject(json[\"date\"]),\r\n            json[\"repaymentMethod\"],\r\n            json[\"tenure\"],\r\n            json[\"status\"]\r\n        );\r\n\r\n        investment.properties[\"projectUrl\"] = json[\"projectUrl\"];\r\n        investment.properties[\"issuer\"] = json[\"issuer\"];\r\n\r\n        return investment;\r\n    }\r\n\r\n    // Find the dates of investment earliest and latest (first payout schedule up to the very last payout schedule)\r\n    static getEarliestAndLatestInvestmentDates(investments) {\r\n        if (investments.length === 0)\r\n            return null;\r\n\r\n        var earliestDate = null;\r\n        var latestDate = null;\r\n\r\n        for(var i = 0; i < investments.length; i++) {\r\n            var investment = investments[i];\r\n            var openDate = investment.getOpenDate();\r\n            var lastPayDate = investment.calculateMaturityDate();\r\n            \r\n            if(earliestDate === null || openDate.compareTo(earliestDate) < 0)\r\n                earliestDate = openDate;\r\n\r\n            if(latestDate === null || lastPayDate.compareTo(latestDate) > 0)\r\n                latestDate = lastPayDate;\r\n        }\r\n\r\n        return {\r\n            \"earliest\": earliestDate,\r\n            \"latest\": latestDate\r\n        }\r\n    }\r\n    \r\n    // Return all investments that lies on the given start and end date\r\n    static filterInvestmentsByDate(investments, startDate, endDate) {        \r\n        return investments.filter(function(investment) {\r\n            return investment.calculateMaturityDate().compareTo(startDate) >= 0\r\n                && investment.getOpenDate().compareTo(endDate) <= 0;               \r\n        });\r\n    }\r\n\r\n    // Return all investment that matches the repayment method\r\n    static filterInvestmentsByRepaymentMethod(investments, repaymentMethod) {\r\n        return investments.filter(function(investment) {\r\n            return repaymentMethod === \"All\" \r\n                || repaymentMethod === investment.properties[\"repaymentMethod\"];\r\n        });\r\n    }\r\n\r\n    // Return all investment that matches the issuer\r\n    static filterInvestmentsByIssuer(investments, issuer) {\r\n        return investments.filter(function(investment) {\r\n            return issuer === \"All\"\r\n                || issuer === investment.properties[\"issuer\"];\r\n        });\r\n    }\r\n\r\n    // Get all unique issuers from the list of investments\r\n    static getIssuers(investments) {\r\n        var issuers = [];\r\n\r\n        for(var i = 0; i < investments.length; i++) {\r\n            var investment = investments[i];\r\n\r\n            if(\"issuer\" in investment.properties && investment.properties[\"issuer\"] !== \"\") {\r\n                var issuer = investment.properties[\"issuer\"];\r\n                \r\n                if(issuers.indexOf(issuer) <= -1)\r\n                    issuers.push(issuer);\r\n            }\r\n        }\r\n\r\n        issuers.sort();\r\n        return issuers;\r\n    }\r\n}\r\n\r\nexport default Investment;\r\n","class Pin {\r\n\r\n    // Create a new pin\r\n    constructor(fromDate, \r\n        toDate, \r\n        repaymentMethod, \r\n        issuer, \r\n        amountInvested,\r\n        completedNetEarnings, \r\n        netEarnings, \r\n        projectedNetAmount, \r\n        completedNetPayoutAmount,\r\n        completedProjects, \r\n        gainPercent, \r\n        numOngoingProjects,\r\n\t\tnetInterestRateStats,\r\n\t\ttenureStats,\r\n\t\tnetInterestRateAfterTenureStats,\r\n\t\tsubscriptionDaysStats,\r\n\t\tidleDaysStats) {\r\n        \r\n        this.properties = {\r\n            \"fromDate\": fromDate,\r\n\t\t\t\"toDate\": toDate,\r\n\t\t\t\"repaymentMethod\": repaymentMethod,\r\n\t\t\t\"issuer\": issuer,\r\n\t\t\t\"amountInvested\": amountInvested,\r\n\t\t\t\"completedNetEarnings\": completedNetEarnings,\r\n\t\t\t\"netEarnings\": netEarnings,\r\n\t\t\t\"projectedNetAmount\": projectedNetAmount,\r\n\t\t\t\"completedNetPayoutAmount\": completedNetPayoutAmount,\r\n\t\t\t\"completedProjects\": completedProjects,\r\n\t\t\t\"gainPercent\": gainPercent,\r\n\t\t\t\"numOngoingProjects\": numOngoingProjects,\r\n\t\t\t\"netInterestRateStats\": netInterestRateStats,\r\n\t\t\t\"tenureStats\": tenureStats,\r\n\t\t\t\"netInterestRateAfterTenureStats\": netInterestRateAfterTenureStats,\r\n\t\t\t\"subscriptionDaysStats\": subscriptionDaysStats,\r\n\t\t\t\"idleDaysStats\": idleDaysStats\r\n\t\t}\r\n\t\t\r\n\t\t// If any of the properties are undefined then throw an exception\r\n\t\tfor(var key in this.properties)\r\n\t\t\tif(this.properties[key] === undefined)\r\n\t\t\t\tthrow new Error(key + \" is undefined\");\r\n    }\r\n\r\n    // Return the properties as a JSON\r\n    toJson() {\r\n        return {\r\n            \"fromDate\": this.properties[\"fromDate\"],\r\n\t\t\t\"toDate\": this.properties[\"toDate\"],\r\n\t\t\t\"repaymentMethod\": this.properties[\"repaymentMethod\"],\r\n\t\t\t\"issuer\": this.properties[\"issuer\"],\r\n\t\t\t\"amountInvested\": this.properties[\"amountInvested\"],\r\n\t\t\t\"completedNetEarnings\": this.properties[\"completedNetEarnings\"],\r\n\t\t\t\"netEarnings\": this.properties[\"netEarnings\"],\r\n\t\t\t\"projectedNetAmount\": this.properties[\"projectedNetAmount\"],\r\n\t\t\t\"completedNetPayoutAmount\": this.properties[\"completedNetPayoutAmount\"],\r\n\t\t\t\"completedProjects\": this.properties[\"completedProjects\"],\r\n\t\t\t\"gainPercent\": this.properties[\"gainPercent\"],\r\n\t\t\t\"numOngoingProjects\": this.properties[\"numOngoingProjects\"],\r\n\t\t\t\"netInterestRateStats\": this.properties[\"netInterestRateStats\"],\r\n\t\t\t\"tenureStats\": this.properties[\"tenureStats\"],\r\n\t\t\t\"netInterestRateAfterTenureStats\": this.properties[\"netInterestRateAfterTenureStats\"],\r\n\t\t\t\"subscriptionDaysStats\": this.properties[\"subscriptionDaysStats\"],\r\n\t\t\t\"idleDaysStats\": this.properties[\"idleDaysStats\"]\r\n        }\r\n    }\r\n\r\n    // Convert the json as a pin object\r\n    static jsonToObject(json) {\r\n        var pin = new Pin(\r\n            json[\"fromDate\"],\r\n\t\t\tjson[\"toDate\"],\r\n\t\t\tjson[\"repaymentMethod\"],\r\n\t\t\tjson[\"issuer\"],\r\n\t\t\tjson[\"amountInvested\"],\r\n\t\t\tjson[\"completedNetEarnings\"],\r\n\t\t\tjson[\"netEarnings\"],\r\n\t\t\tjson[\"projectedNetAmount\"],\r\n\t\t\tjson[\"completedNetPayoutAmount\"],\r\n\t\t\tjson[\"completedProjects\"],\r\n\t\t\tjson[\"gainPercent\"],\r\n\t\t\tjson[\"numOngoingProjects\"],\r\n\t\t\tjson[\"netInterestRateStats\"],\r\n\t\t\tjson[\"tenureStats\"],\r\n\t\t\tjson[\"netInterestRateAfterTenureStats\"],\r\n\t\t\tjson[\"subscriptionDaysStats\"],\r\n\t\t\tjson[\"idleDaysStats\"]\r\n        );\r\n\r\n        return pin;\r\n    }\r\n}\r\n\r\nexport default Pin;\r\n","import Investment from \"./Investment\";\r\nimport Pin from \"./Pin\";\r\n\r\n// Our database just uses the local storage\r\nclass Database\r\n{\r\n    // Initialize the data\r\n    constructor() {\r\n        if(!(\"investments\" in localStorage)) {\r\n            localStorage.setItem(\"investments\", JSON.stringify({}));\r\n            console.log(\"New investments storage created.\");\r\n        }\r\n\r\n        if(!(\"pins\" in localStorage)) {\r\n            localStorage.setItem(\"pins\", JSON.stringify([]));\r\n            console.log(\"New pins storage created.\");\r\n        }\r\n\r\n        // Parse back the investments as an investment object\r\n        var investmentsJson = JSON.parse(localStorage.getItem(\"investments\"));\r\n\r\n        this.investments = {};\r\n\r\n        for(var i = 0; i < investmentsJson.length; i++) {\r\n            var investment = Investment.jsonToObject(investmentsJson[i])\r\n            this.investments[investment.properties[\"projectId\"]] = investment;\r\n        }\r\n\r\n        // Parse the pins back as an object\r\n        var pinsJson = JSON.parse(localStorage.getItem(\"pins\"));\r\n        this.pins = [];\r\n\r\n        for(var j = 0; j < pinsJson.length; j++) {\r\n            try {\r\n                var pin = Pin.jsonToObject(pinsJson[j]);\r\n                this.pins.push(pin);\r\n            } catch(err) {\r\n                // We can fail silently a pin if it cannot be parsed. It's okay because PINs are not critical data\r\n                console.log(err);         \r\n                this.pins = [];       \r\n            }\r\n        }\r\n    }\r\n\r\n    // Export it as json\r\n    exportAsJson(version) {\r\n        var investmentsJson = [];\r\n\r\n        // Serialize everything as a json object\r\n        for(var projectId in this.investments)\r\n            investmentsJson.push(this.investments[projectId].toJson());\r\n\r\n        // Write to the storage\r\n        localStorage.setItem(\"investments\", JSON.stringify(investmentsJson));\r\n\r\n        var pinsJson = [];\r\n\r\n        for(var i = 0; i < this.pins.length; i++)\r\n            pinsJson.push(this.pins[i].toJson());\r\n        \r\n        return { \r\n            \"version\": version,\r\n            \"investments\": investmentsJson,\r\n            \"pins\": pinsJson\r\n        };\r\n    }\r\n\r\n    // Convert the JSON to investment objects\r\n    importJson(appVersion, toImportJson) {        \r\n        if(!(\"version\" in toImportJson))\r\n            // Attempt to migrate from 1.0\r\n            return this.importJsonVersion_1_0_0(toImportJson);\r\n\r\n        // For those that has a version, we can start import as it is\r\n        if(toImportJson[\"version\"].startsWith(\"1.2.\"))\r\n            return this.importJsonVersion_1_2(toImportJson);\r\n\r\n        return false;\r\n    }\r\n\r\n    // Try to import from version 1.2\r\n    importJsonVersion_1_2(toImportJson) {\r\n        if(!(\"investments\" in toImportJson) || !(\"pins\" in toImportJson))\r\n            return false;\r\n\r\n        // Look for the investments key, put it as investment objects\r\n        var tempInvestments = {};\r\n        var investmentsJson = toImportJson[\"investments\"];\r\n\r\n        for(var i = 0; i < investmentsJson.length; i++) {\r\n            try {\r\n                var investment = Investment.jsonToObject(investmentsJson[i]);\r\n                tempInvestments[investment.properties[\"projectId\"]] = investment;\r\n            } catch(err) {\r\n                console.log(err);\r\n                return false;\r\n            }\r\n        }\r\n\r\n        this.investments = tempInvestments;\r\n\r\n        // Look for the pins key, they will remain as json object\r\n        var tempPins = [];\r\n        var pinsJson = toImportJson[\"pins\"];\r\n\r\n        for(var j = 0; j < pinsJson.length; j++) {\r\n            try {\r\n                var pin = Pin.jsonToObject(pinsJson[j]);\r\n                tempPins.push(pin);\r\n            } catch(err) {\r\n                console.log(err);\r\n            }\r\n        }\r\n\r\n        this.pins = tempPins;\r\n\r\n        this.persist();\r\n        return true;\r\n    }\r\n\r\n    // Try to import from version 1.0.0\r\n    importJsonVersion_1_0_0(toImportJson) {\r\n        var tempInvestments = {};\r\n\r\n        for(var i = 0; i < toImportJson.length; i++) {\r\n            try {\r\n                var investment = Investment.jsonToObject(toImportJson[i]);\r\n                tempInvestments[investment.properties[\"projectId\"]] = investment;\r\n            } catch(err) {\r\n                console.log(err);\r\n                return false;\r\n            }\r\n        }\r\n\r\n        // If all goes fine we're done\r\n        this.investments = tempInvestments;\r\n        this.persist();\r\n        return true;\r\n    }\r\n\r\n    // Find the investment that holds the given ID, return null if none\r\n    findInvestment(projectId) {\r\n        if(!(projectId in this.investments))\r\n            return null;\r\n\r\n        return this.investments[projectId];\r\n    }\r\n\r\n    // Delete an investment\r\n    deleteInvestment(projectId) {\r\n        delete this.investments[projectId];\r\n        this.persist();\r\n    }\r\n\r\n    // Add a new investment, assumes that the investment has been well validated\r\n    addInvestment(investment) {\r\n        this.investments[investment.properties[\"projectId\"]] = investment;        \r\n        this.persist();\r\n    }\r\n\r\n    // Return the investments as a list\r\n    getInvestments() {\r\n        var investmentsList = [];\r\n\r\n        for(var projectId in this.investments)\r\n            investmentsList.push(this.investments[projectId]);\r\n\r\n        return investmentsList;\r\n    }\r\n\r\n    // Add a new pin\r\n    addPin(pin) {\r\n        this.pins.push(pin);\r\n        this.persist();\r\n    }\r\n\r\n    // Delete a pin\r\n    deletePin(index) {\r\n        this.pins.splice(index, 1);\r\n        this.persist();\r\n    }\r\n\r\n    // Return the pins as a copy of the list\r\n    getPins() {\r\n        return this.pins.slice();\r\n    }\r\n\r\n    // Write the investments to the local storage\r\n    persist() {        \r\n        var investmentsJson = [];\r\n\r\n        // Serialize everything as a json object\r\n        for(var projectId in this.investments)\r\n            investmentsJson.push(this.investments[projectId].toJson());\r\n\r\n        // Write to the storage\r\n        localStorage.setItem(\"investments\", JSON.stringify(investmentsJson));\r\n\r\n        var pinsJson = [];\r\n\r\n        for(var i = 0; i < this.pins.length; i++)\r\n            pinsJson.push(this.pins[i].toJson());\r\n\r\n        localStorage.setItem(\"pins\", JSON.stringify(pinsJson));\r\n    }\r\n\r\n    // Delete everything from the database\r\n    clear() {\r\n        this.investments = {};\r\n        this.pins = [];\r\n        this.persist();\r\n    }\r\n}\r\n\r\nexport default Database;\r\n","import React from \"react\";\r\nimport { Button,  Row, Col, Form, InputGroup, FormControl, Modal, ListGroup } from \"react-bootstrap\";\r\nimport InvestmentDetails from \"./InvestmentDetails\"\r\nimport Investment from \"../Entities/Investment\"\r\nimport MyDate from \"../Entities/MyDate\"\r\nimport Database from \"../Entities/Database\"\r\n\r\n// Form for adding, calculating, deleting or updating an investment\r\nclass InvestmentForm extends React.Component {\r\n\r\n\t// Initialize the investment form\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n        this.database = new Database();\r\n        this.issuers = Investment.getIssuers(this.database.getInvestments());\r\n\r\n        // Initialize the attributes to be accepted by this form\r\n        if(props.formMode === \"add\") {\r\n            this.state = {\r\n                \"projectId\": \"\",\r\n                \"loanee\": \"\",\r\n                \"projectUrl\": \"\",\r\n                \"investedAmount\": \"\",\r\n                \"grossInterestRate\": \"\",\r\n                \"status\": \"Invested\",\r\n                \"tenure\": \"\",\r\n                \"repaymentMethod\": \"Equal\",\r\n                \"date\": \"\",\r\n                \"investment\": null,\r\n                \"chooseIssuer\": false\r\n            };\r\n        } else {\r\n            // In update mode we pre-populate the fields\r\n            this.state = {\r\n                \"projectId\": props.investment.properties[\"projectId\"],\r\n                \"loanee\": props.investment.properties[\"issuer\"],\r\n                \"projectUrl\": props.investment.properties[\"projectUrl\"],\r\n                \"investedAmount\": props.investment.properties[\"investmentAmount\"].toFixed(2),\r\n                \"grossInterestRate\": (props.investment.properties[\"grossInterestRate\"] * 100).toFixed(2),\r\n                \"status\": props.investment.properties[\"status\"],\r\n                \"tenure\": props.investment.properties[\"tenure\"],\r\n                \"repaymentMethod\": props.investment.properties[\"repaymentMethod\"],\r\n                \"date\": props.investment.properties[\"date\"].toString(),\r\n                \"investment\": props.investment,\r\n                \"chooseIssuer\": false\r\n            }\r\n        }\r\n    }\r\n    \r\n    // Called after the form has been loaded, if the state is in, \"update\" mode\r\n    // we will calculate the investment details\r\n    componentDidMount() {\r\n        window.scrollTo(0, 0);\r\n\r\n        if(this.props.formMode === \"update\")\r\n            this.handleCalculateClick();\r\n    }\r\n\r\n\t// Validate and tranform input into an investment object\r\n\tcreateInvestmentObject() {\r\n\t\t// Validate the project ID\r\n        var validationResult = Investment.validateProjectId(this.state.projectId);\r\n\r\n        if(!validationResult[\"status\"]) {\r\n            alert(validationResult[\"message\"]);\r\n            return null;\r\n        }\r\n        \r\n        if(this.props.formMode === \"add\") {\r\n            if(this.database.findInvestment(this.state.projectId) != null) {\r\n                alert(\"Another project has this ID already.\");\r\n                return null;\r\n            }\r\n        }\r\n\t\t\r\n\t\t// Validate the invested amount\r\n        validationResult = Investment.validateInvestedAmount(this.state.investedAmount);\r\n\r\n        if(!validationResult[\"status\"]) {\r\n            alert(validationResult[\"message\"]);\r\n            return null;\r\n\t\t}\r\n\t\t\r\n\t\t// Validate the gross interest rate\r\n        validationResult = Investment.validateGrossInterestRate(this.state.grossInterestRate);\r\n\r\n        if(!validationResult[\"status\"]) {\r\n            alert(validationResult[\"message\"]);\r\n            return null;\r\n\t\t}\r\n\t\t\r\n        // Validate the date only if it is not on hold\r\n        var date = this.state.date;\r\n\r\n        if(this.state.status === \"Invested\") {\r\n            validationResult = Investment.validateDate(date);\r\n\r\n            if(!validationResult[\"status\"]) {\r\n                alert(validationResult[\"message\"]);\r\n                return null;\r\n            }\r\n        } else if(this.state.status === \"On Hold\") {\r\n            date = MyDate.now().toString()\r\n            this.setState({ \"date\": date });\r\n\t\t}\r\n\t\t\r\n\t\t// Repayment method needs no validation...\r\n\r\n\t\t// Validate tenure\r\n        validationResult = Investment.validateTenure(this.state.tenure);\r\n\r\n        if(!validationResult[\"status\"]) {\r\n            alert(validationResult[\"message\"]);\r\n            return null;\r\n\t\t}\r\n\t\t\r\n        // Calculate the net interest rate\r\n        try {\r\n            var investment = new Investment(\r\n                this.state.projectId, \r\n                parseFloat(this.state.investedAmount), \r\n                parseFloat(this.state.grossInterestRate) / 100.0,  \r\n                MyDate.toMyDate(date), \r\n                this.state.repaymentMethod,\r\n                parseInt(this.state.tenure),\r\n                this.state.status);\r\n\r\n            investment.properties[\"projectUrl\"] = this.state.projectUrl;\r\n            investment.properties[\"issuer\"] = this.state.loanee.toUpperCase();\r\n            \r\n            return investment;\r\n        } catch(err) {\r\n            alert(\"The project ID is invalid, make sure it follows SeedIn's format because it represents the opening date. If this project is invested, make sure the first pay date is after the opening date.\");\r\n            console.log(err);\r\n        }\r\n\r\n        return null;\r\n\t}\r\n\r\n\t// Validate and add a new investment\r\n\thandleAddClick() {\r\n\t\tvar investment = this.createInvestmentObject();\r\n\r\n\t\tif(investment == null)\r\n            return;\r\n            \r\n        // Do add\r\n        this.database.addInvestment(investment);\r\n        \r\n        // After successful validation and add , we go back to the list of investments\r\n        alert(\"Investment created.\");\r\n\r\n\t\tthis.props.backClick();\r\n    }\r\n    \r\n    // Validate and update an existing invetment\r\n    handleUpdateClick() {\r\n        var investment = this.createInvestmentObject();\r\n\r\n        if(investment == null)\r\n            return;\r\n\r\n        // Do update\r\n        this.database.addInvestment(investment);\r\n        alert(\"Investment updated.\");\r\n    }\r\n\r\n    // Delete an existing investment\r\n    handleDeleteClick() {\r\n        if(!window.confirm(\"Are you sure you want to delete this investment?\"))\r\n            return;\r\n        \r\n        this.database.deleteInvestment(this.state.investment.properties[\"projectId\"]);\r\n        this.props.backClick();\r\n    }\r\n\r\n\t// Calculate the net interest rates and the repayment schedules\r\n\thandleCalculateClick() {\r\n\t\tvar investment = this.createInvestmentObject();\r\n\r\n\t\tif(investment == null)\r\n\t\t\treturn;\r\n\r\n\t\tthis.setState({\"investment\": investment});\r\n    }\r\n\r\n    // Show the modal for issuers\r\n    handleShowIssuerClick() {\r\n        if(this.issuers.length <= 0) {\r\n            alert(\"There are no available issuers. Manually enter the issuer name and we'll remember it for you.\");\r\n            return;\r\n        }\r\n\r\n        this.setState({\"chooseIssuer\": true });\r\n    }\r\n\r\n    // Open the link URL web page\r\n    handleOpenProjectUrlClick() {\r\n        if(this.state.projectUrl === \"\")\r\n            return;\r\n\r\n        var url = this.state.projectUrl;\r\n\r\n        if(!url.toLowerCase().startsWith(\"https://\") && !url.toLowerCase().startsWith(\"http://\"))\r\n            url = \"http://\" + url;\r\n            \r\n        var a = document.createElement(\"a\");\r\n        a.target = \"_blank\";\r\n        a.rel = \"noopener noreferrer\";\r\n        a.href = url;\r\n        a.click();\r\n\r\n        this.setState({\"projectUrl\": url});\r\n    }\r\n    \r\n\t// Render the investment form depending on the mode assigned\r\n\trender() {\r\n\t\tlet controls;\r\n\t\tlet formTitle;\r\n\t\tlet projectIdInputControl;\r\n\r\n\t\tif(this.props.formMode === \"add\") {\r\n\t\t\t// Controls when adding a new investment\r\n\t\t\tcontrols = \r\n\t\t\t\t<>\r\n\t\t\t\t\t<Button variant=\"dark\" onClick={ this.props.backClick }>Back</Button>{\" \"}\r\n\t\t\t\t\t<Button variant=\"info\" onClick={(e) => { this.handleCalculateClick() }}>Calculate</Button>{\" \"}\r\n\t\t\t\t\t<Button variant=\"primary\" onClick={(e) => { this.handleAddClick() }}>Add</Button>\r\n\t\t\t\t</>\r\n\t\t\t\r\n\t\t\tformTitle = \"Add Investment\";\r\n\r\n\t\t\tprojectIdInputControl = \r\n\t\t\t\t<Form.Group>\r\n\t\t\t\t\t<Form.Label>Project ID</Form.Label>\r\n\t\t\t\t\t<Form.Control type=\"text\" placeholder=\"Unique ID given by SeedIn\" \r\n\t\t\t\t\t\tvalue={this.state.projectId} onChange={(e) => { this.setState({\"projectId\": e.target.value}) }} />\r\n\t\t\t\t</Form.Group>\r\n\t\t} else if(this.props.formMode === \"update\") {\r\n\t\t\t// Constrols when updating a form the project ID is unique\r\n\t\t\tcontrols =\r\n\t\t\t\t<>\r\n\t\t\t\t\t<Button variant=\"dark\" onClick={ this.props.backClick }>Back</Button>{\" \"}\r\n\t\t\t\t\t<Button variant=\"danger\" onClick={(e) => { this.handleDeleteClick() }}>Delete</Button>{\" \"}\r\n\t\t\t\t\t<Button variant=\"info\" onClick={(e) => { this.handleCalculateClick() }}>Calculate</Button>{\" \"}\r\n\t\t\t\t\t<Button variant=\"primary\" onClick={(e) => { this.handleUpdateClick() }}>Update</Button>\r\n\t\t\t\t</>\r\n\t\t\t\r\n\t\t\tformTitle = \"Update Investment\";\r\n\r\n\t\t\tprojectIdInputControl = \r\n\t\t\t\t<Form.Group>\r\n\t\t\t\t\t<Form.Label>Project ID</Form.Label>\r\n\t\t\t\t\t<Form.Control type=\"text\" placeholder=\"Unique ID given by SeedIn\" readOnly\r\n\t\t\t\t\t\tvalue={this.state.projectId} />\r\n\t\t\t\t</Form.Group>\r\n\t\t}\r\n\r\n\t\t// First date of repayment appears only when the status of investment is \"invested\"\r\n\t\tlet firstDateOfPaymentInputControl = <></>\r\n\r\n        if(this.state.status === \"Invested\") {\r\n\t\t\tfirstDateOfPaymentInputControl = \r\n\t\t\t\t<Form.Group>\r\n\t\t\t\t\t<Form.Label>First Date of Payment Schedule</Form.Label>\r\n\t\t\t\t\t<Form.Control type=\"date\" placeholder=\"yyyy-mm-dd\"\r\n\t\t\t\t\t\tvalue={this.state.date} onChange={(e) => { this.setState({\"date\": e.target.value}) }} />\r\n\t\t\t\t\t<Form.Text className=\"text-muted\">Please check your SeedIn account for the date.</Form.Text>\r\n\t\t\t\t</Form.Group>\r\n        }\r\n\r\n        // Initialize all issuers to the modal\r\n        let issuersListGroupItems = this.issuers.map((issuer) => {\r\n            return <ListGroup.Item key={issuer} action onClick={(e) => this.setState({ \"loanee\": issuer, \"chooseIssuer\": false })}>{issuer}</ListGroup.Item>\r\n        });\r\n\r\n\t\treturn (\r\n            <Row>\r\n                <Col md=\"6\">\r\n                    <h2>{formTitle}</h2>\r\n                    <Form>\r\n                        {projectIdInputControl}\r\n                        <Form.Group>\r\n                            <Form.Label>Borrower Name (optional but recommended)</Form.Label>\r\n                            <InputGroup className=\"mb-3\">\r\n                                <FormControl placeholder=\"Issuer\" \r\n                                    value={this.state.loanee} onChange={(e) => { this.setState({\"loanee\": e.target.value}) }} />\r\n                                <InputGroup.Append>\r\n                                    <Button variant=\"outline-dark\" onClick={(e) => { this.handleShowIssuerClick() }}>Choose</Button>\r\n                                </InputGroup.Append>\r\n                            </InputGroup>\r\n                        </Form.Group>\r\n                        <Modal show={this.state.chooseIssuer} onHide={(e) => { this.setState({\"chooseIssuer\": false }) }}>\r\n                            <Modal.Header closeButton>\r\n                                <Modal.Title>Choose Issuer</Modal.Title>                                \r\n                            </Modal.Header>\r\n                            <Modal.Body>\r\n                                <ListGroup>\r\n                                    { issuersListGroupItems }\r\n                                </ListGroup>\r\n                            </Modal.Body>\r\n                        </Modal>\r\n                        <Form.Group>\r\n                            <Form.Label>Project URL (optional)</Form.Label>\r\n                            <InputGroup className=\"mb-3\">\r\n                                <Form.Control type=\"text\" placeholder=\"Go to SeedIn, open the project, copy URL and paste it here.\" \r\n                                    value={this.state.projectUrl} onChange={(e) => { this.setState({\"projectUrl\": e.target.value}) }} />\r\n                                <InputGroup.Append>\r\n                                    <Button variant=\"outline-dark\" onClick={(e) => { this.handleOpenProjectUrlClick() }}>View</Button>\r\n                                </InputGroup.Append>                                \r\n                            </InputGroup>\r\n                        </Form.Group>\r\n                        <Form.Group>\r\n                            <Form.Label>Invested Amount</Form.Label>\r\n                            <Form.Control type=\"number\" step=\"any\" placeholder=\"₱\"\r\n                                value={this.state.investedAmount} onChange={(e) => { this.setState({\"investedAmount\": e.target.value}) }} />\r\n                        </Form.Group>\r\n                        <Form.Group>\r\n                            <Form.Label>Gross Interest Rate per annum</Form.Label>\r\n                            <Form.Control type=\"number\" step=\"any\" placeholder=\"1% to 20%\"\r\n                                value={this.state.grossInterestRate} onChange={(e) => { this.setState({\"grossInterestRate\": e.target.value}) }} />\r\n                        </Form.Group>\r\n                        <Form.Group>\r\n                            <Form.Label>Status</Form.Label>\r\n                            <Form.Control as=\"select\" custom\r\n                                value={this.state.status} onChange={(e) => { this.setState({\"status\": e.target.value}) }}>\r\n                                <option>Invested</option>\r\n                                <option>On Hold</option>\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                        { firstDateOfPaymentInputControl }\r\n                        <Form.Group>\r\n                            <Form.Label>Repayment Method</Form.Label>\r\n                            <Form.Control as=\"select\" custom\r\n                                value={this.state.repaymentMethod} onChange={(e) => { this.setState({\"repaymentMethod\": e.target.value}) }}>\r\n                                <option>Equal</option>\r\n                                <option>Balloon</option>\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group>\r\n                            <Form.Label>Tenure</Form.Label>\r\n                            <Form.Control type=\"number\" placeholder=\"1 to 12 months\" \r\n                                value={this.state.tenure} onChange={(e) => { this.setState({\"tenure\": e.target.value}) }}/>\r\n                        </Form.Group>\r\n                    </Form>\r\n                    <p style={{textAlign: \"right\"}}>\r\n                        {controls}\r\n                    </p>\r\n                </Col>\r\n                <Col md=\"6\">\r\n                    <InvestmentDetails investment={this.state.investment} />\r\n                </Col>\r\n            </Row>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default InvestmentForm;\r\n","import React from \"react\";\r\nimport { Button, Table, Row, Col, Form } from \"react-bootstrap\";\r\nimport Database from \"../Entities/Database\";\r\nimport Investment from \"../Entities/Investment\";\r\nimport MyDate from \"../Entities/MyDate\";\r\nimport NumberUtils from \"../Entities/NumberUtils\";\r\n\r\n// Displays the list of investments and the filtering features\r\nclass InvestmentsTable extends React.Component {\r\n\r\n\t// Initialize the investments list\r\n\tconstructor(props) {\r\n        super(props);\r\n\r\n        // Prepopulate the initial filtering and sorting\r\n        this.investments = new Database().getInvestments();\r\n        this.issuers = Investment.getIssuers(this.investments);\r\n        var dates = Investment.getEarliestAndLatestInvestmentDates(this.investments);\r\n\r\n        // Set the filtering attributes\r\n        if(\"investmentsTable.state\" in localStorage) {\r\n            this.state = JSON.parse(window.localStorage.getItem(\"investmentsTable.state\"));\r\n\r\n            if(dates != null) {\r\n                this.state.fromDate = dates[\"earliest\"].toString();\r\n                this.state.toDate = dates[\"latest\"].toString();\r\n            }\r\n        } else {\r\n            this.state = {\r\n                \"fromDate\": dates !== null ? dates[\"earliest\"].toString() : \"\",\r\n                \"toDate\": dates !== null ? dates[\"latest\"].toString() : \"\",\r\n                \"sortedBy\": \"Project ID\",\r\n                \"sortOrder\": \"Ascending\",\r\n                \"repaymentMethod\": \"All\",\r\n                \"issuer\": \"All\"\r\n            }\r\n        };\r\n\r\n        // Used for restoring scroll\r\n        this.listRef = React.createRef();\r\n    }\r\n\r\n    // Restore the scroll\r\n    componentDidMount() {\r\n        if(\"investmentsTable.scrollY\" in localStorage) {\r\n            window.scrollTo(0, localStorage.getItem(\"investmentsTable.scrollY\"));\r\n        }\r\n    }\r\n\r\n\t// Through the investments list is the only way to trigger an add investment and update investment\r\n\t// however the handling of the changing of component is on the InvestmentsContainer\r\n\trender() {\r\n        // Load the issuers into the drop down\r\n        let issuerOptions = this.issuers.map((issuer) => {\r\n            return <option key={issuer}>{ issuer }</option>\r\n        });\r\n\r\n        let investmentsTableRows = <tr>\r\n            <td>...</td>\r\n            <td>...</td>\r\n            <td>...</td>\r\n            <td>...</td>\r\n            <td>...</td>\r\n            <td>...</td>\r\n            <td>...</td>\r\n        </tr>;\r\n\r\n        if(this.investments.length > 0) {\r\n            // Filter by date\r\n            var earliestDate = MyDate.toMyDate(this.state.fromDate);\r\n            var latestDate = MyDate.toMyDate(this.state.toDate);            \r\n            var filteredInvestments = Investment.filterInvestmentsByDate(this.investments, earliestDate, latestDate);\r\n\r\n            // Filter by repayment method\r\n            filteredInvestments = Investment.filterInvestmentsByRepaymentMethod(filteredInvestments, this.state.repaymentMethod);\r\n\r\n            // Filter by issuer\r\n            filteredInvestments = Investment.filterInvestmentsByIssuer(filteredInvestments, this.state.issuer);\r\n\r\n            // Do sorting\r\n            var sortedBy = this.state.sortedBy;\r\n            \r\n            filteredInvestments.sort((investmentA, investmentB) => {\r\n                if(sortedBy === \"Project ID\")\r\n                    return investmentA.properties[\"propertyId\"] - investmentB.properties[\"propertyId\"];\r\n                \r\n                if(sortedBy === \"Investment Amount\")\r\n                    return investmentA.properties[\"investmentAmount\"] - investmentB.properties[\"investmentAmount\"];\r\n                \r\n                if(sortedBy === \"Interest Rate\")\r\n                    return investmentA.properties[\"grossInterestRate\"] - investmentB.properties[\"grossInterestRate\"];\r\n            \r\n                if(sortedBy === \"Next Pay Date\") {\r\n                    var dateA = investmentA.calculateNextPayDate(); \r\n                    var dateB = investmentB.calculateNextPayDate();\r\n\r\n                    if(investmentA.properties[\"status\"] === \"On Hold\" && investmentB.properties[\"status\"] === \"On Hold\")\r\n                        return 0;\r\n                    \r\n                    if(investmentA.properties[\"status\"] === \"On Hold\" && investmentB.properties[\"status\"] === \"Invested\")\r\n                        return 1;\r\n\r\n                    if(investmentA.properties[\"status\"] === \"Invested\" && investmentB.properties[\"status\"] === \"On Hold\")\r\n                        return -1;\r\n\r\n                    if(dateA === null && dateB === null)\r\n                        return 0;\r\n                    \r\n                    if(dateA === null)\r\n                        return 1;\r\n                    \r\n                    if(dateB === null)\r\n                        return -1;\r\n                        \r\n                    return dateA.compareTo(dateB);\r\n                }\r\n\r\n                if(sortedBy === \"Maturity Date\") {\r\n                    if(investmentA.properties[\"status\"] === \"On Hold\" && investmentB.properties[\"status\"] === \"On Hold\")\r\n                        return 0;\r\n                    \r\n                    if(investmentA.properties[\"status\"] === \"On Hold\" && investmentB.properties[\"status\"] === \"Invested\")\r\n                        return 1;\r\n\r\n                    if(investmentA.properties[\"status\"] === \"Invested\" && investmentB.properties[\"status\"] === \"On Hold\")\r\n                        return -1;\r\n\r\n                    return investmentA.calculateMaturityDate().compareTo(investmentB.calculateMaturityDate());\r\n                }\r\n\r\n                return 0;\r\n            });\r\n\r\n            // Reverse if descending\r\n            if(this.state.sortOrder === \"Descending\")\r\n                filteredInvestments.reverse();\r\n            \r\n            // Put it as an output\r\n            investmentsTableRows = filteredInvestments.map((investment) => {\r\n                var payDateDetails = investment.calculateNextPayAndMaturityDate();\r\n\r\n                // When a row is clicked, we save the scroll so we can store later on\r\n                return <tr key={investment.properties[\"projectId\"]} onClick={(e) => { \r\n                            localStorage.setItem(\"investmentsTable.scrollY\", window.scrollY);\r\n                            this.props.openInvestmentClick(investment) \r\n                        }}>\r\n                    <td><strong>{ investment.properties[\"projectId\"] }</strong></td>\r\n                    <td>{ NumberUtils.formatCurrency(investment.properties[\"investmentAmount\"]) }</td>\r\n                    <td>\r\n                        { (investment.properties[\"grossInterestRate\"] * 100).toFixed(2) }% p.a. {' '}\r\n                        { investment.properties[\"repaymentMethod\"] }\r\n                    </td>\r\n                    <td>{ NumberUtils.formatCurrency(investment.properties[\"investmentAmount\"] + investment.calculateNetGainAmount()) }</td>\r\n                    <td>{ payDateDetails[\"nextPayDate\"].toString() }</td>\r\n                    <td>{ NumberUtils.formatCurrency(payDateDetails[\"nextPayAmount\"]) }</td>\r\n                    <td>{ payDateDetails[\"maturityDate\"].toString() }</td>\r\n                </tr>\r\n            });\r\n        }\r\n\r\n        // Save the filters\r\n        window.localStorage.setItem(\"investmentsTable.state\", JSON.stringify(this.state));\r\n\r\n\t\treturn (\r\n\t\t\t<div ref={this.listRef}>\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<Col md=\"12\">\r\n\t\t\t\t\t\t<h2>Investments</h2>\r\n\t\t\t\t\t\t<p><Button variant=\"primary\" onClick={ this.props.addInvestmentClick }>Add Investment</Button></p>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<Col md=\"2\">\r\n\t\t\t\t\t\t<Form.Group>\r\n\t\t\t\t\t\t\t<Form.Text className=\"text-muted\">From Date</Form.Text>\r\n\t\t\t\t\t\t\t<Form.Control type=\"date\" placeholder=\"yyyy-mm-dd\" \r\n                                value={this.state.fromDate} onChange={(e) => { this.setState({\"fromDate\": e.target.value }) }}/>\r\n\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col md=\"2\">\r\n\t\t\t\t\t\t<Form.Group>\r\n\t\t\t\t\t\t\t<Form.Text className=\"text-muted\">To Date</Form.Text>\r\n\t\t\t\t\t\t\t<Form.Control type=\"date\" placeholder=\"yyyy-mm-dd\" \r\n                                value={this.state.toDate} onChange={(e) => { this.setState({\"toDate\": e.target.value }) }}/>\r\n\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col md=\"2\">\r\n\t\t\t\t\t\t<Form.Group>\r\n\t\t\t\t\t\t\t<Form.Text className=\"text-muted\">Sorted By</Form.Text>\r\n\t\t\t\t\t\t\t<Form.Control as=\"select\" custom\r\n                                value={this.state.sortedBy} onChange={(e) => { this.setState({\"sortedBy\": e.target.value }) }}>\r\n\t\t\t\t\t\t\t\t<option>Project ID</option>\r\n\t\t\t\t\t\t\t\t<option>Investment Amount</option>\r\n\t\t\t\t\t\t\t\t<option>Interest Rate</option>\r\n\t\t\t\t\t\t\t\t<option>Next Pay Date</option>\r\n\t\t\t\t\t\t\t\t<option>Maturity Date</option>\r\n\t\t\t\t\t\t\t</Form.Control>\r\n\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col md=\"2\">\r\n\t\t\t\t\t\t<Form.Group>\r\n\t\t\t\t\t\t\t<Form.Text className=\"text-muted\">Sort Order</Form.Text>\r\n\t\t\t\t\t\t\t<Form.Control as=\"select\" custom\r\n                                value={this.state.sortOrder} onChange={(e) => { this.setState({\"sortOrder\": e.target.value }) }}>\r\n\t\t\t\t\t\t\t\t<option>Ascending</option>\r\n\t\t\t\t\t\t\t\t<option>Descending</option>\r\n\t\t\t\t\t\t\t</Form.Control>\r\n\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col md=\"2\">\r\n\t\t\t\t\t\t<Form.Group>\r\n\t\t\t\t\t\t\t<Form.Text className=\"text-muted\">Repayment Method</Form.Text>\r\n\t\t\t\t\t\t\t<Form.Control as=\"select\" custom\r\n                                value={this.state.repaymentMethod} onChange={(e) => { this.setState({\"repaymentMethod\": e.target.value}) }}>\r\n\t\t\t\t\t\t\t\t<option>All</option>\r\n\t\t\t\t\t\t\t\t<option>Balloon</option>\r\n\t\t\t\t\t\t\t\t<option>Equal</option>\r\n\t\t\t\t\t\t\t</Form.Control>\r\n\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col md=\"2\">\r\n\t\t\t\t\t\t<Form.Group>\r\n\t\t\t\t\t\t\t<Form.Text className=\"text-muted\">Issuer</Form.Text>\r\n\t\t\t\t\t\t\t<Form.Control as=\"select\" custom\r\n                                value={this.state.issuer} onChange={(e) => { this.setState({\"issuer\": e.target.value}) }}>\r\n\t\t\t\t\t\t\t\t<option>All</option>\r\n                                { issuerOptions }\r\n\t\t\t\t\t\t\t</Form.Control>\r\n\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t\t<Row>\r\n                    <Col md=\"12\">\r\n                        <Table id=\"investmentsTable\" responsive striped bordered hover variant=\"dark\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th className=\"align-middle\">Project ID</th>\r\n                                    <th className=\"align-middle\">Investment Amount</th>\r\n                                    <th className=\"align-middle\">Gross %</th>\r\n                                    <th className=\"align-middle\">Net Payout</th>\r\n                                    <th className=\"align-middle\">Next Pay Date</th>\r\n                                    <th className=\"align-middle\">Next Pay Amount</th>\r\n                                    <th className=\"align-middle\">Maturity Date</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>{ investmentsTableRows }</tbody>\r\n                        </Table>\r\n                    </Col>\r\n\t\t\t\t</Row>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default InvestmentsTable;\r\n","import React from \"react\";\r\nimport InvestmentForm from \"./InvestmentForm\";\r\nimport InvestmentsTable from \"./InvestmentsTable\";\r\n\r\n// This holds components for listing investments, adding, viewing, and updating\r\nclass InvestmentsContainer extends React.Component {\r\n\r\n\t// Initialize the investments container\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\t// Initialize component to show is the investment lists\r\n\t\tthis.state = { \r\n\t\t\tactiveComponentName: \"InvestmentsTable\",\r\n\t\t\tinvestment: null\r\n\t\t};\r\n\r\n\t\t// This function needs binding to this container because when an investment is selected\r\n\t\t// we need to make it executable to sub components\r\n\t\tthis.handleOpenInvestmentClick = this.handleOpenInvestmentClick.bind(this);\r\n\t}\r\n\r\n\t// Make the active component the add investments\r\n\thandleAddInvestmentClick() {\r\n\t\tlocalStorage.setItem(\"investmentsTable.scrollY\", 0);\r\n\t\tthis.setState({ activeComponentName: \"AddInvestmentForm\", investment: null });\r\n\t}\r\n\r\n\t// Make the active component the update/view invsetment\r\n\thandleOpenInvestmentClick(clickedInvestment) {\r\n\t\tthis.setState({ activeComponentName: \"OpenInvestmentForm\", investment: clickedInvestment });\r\n\t}\r\n\r\n\t// Back to the investments list component\r\n\thandleBackClick() {\r\n\t\tthis.setState({ activeComponentName: \"InvestmentsTable\" });\r\n\t}\r\n\r\n\t// Render the appropraite container\r\n\trender() {\r\n\t\t// Component names and mapping component\r\n\t\tconst componentNames = [\"InvestmentsTable\", \"AddInvestmentForm\", \"OpenInvestmentForm\"];\r\n\t\tconst components = [ \r\n\t\t\t<InvestmentsTable addInvestmentClick={(e) => { this.handleAddInvestmentClick() }} openInvestmentClick={ this.handleOpenInvestmentClick } />, \r\n\t\t\t<InvestmentForm formMode=\"add\" backClick={(e) => { this.handleBackClick() }} />,\r\n\t\t\t<InvestmentForm formMode=\"update\" backClick={(e) => { this.handleBackClick() }} investment={this.state.investment} />];\r\n\r\n\t\t// Show the chosen component\r\n\t\tlet activeComponent = components[componentNames.indexOf(this.state.activeComponentName)];\t\r\n\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t{activeComponent}\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default InvestmentsContainer;\r\n","import React from \"react\";\r\nimport { Form, Row, Col, Button } from \"react-bootstrap\";\r\nimport Database from \"../Entities/Database\";\r\nimport MyDate from \"../Entities/MyDate\";\r\n\r\n// Container for import and export of data\r\nclass MyDataContainer extends React.Component {\r\n\r\n\t// Initialize stuff\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.database = new Database();\r\n\t}\r\n\r\n\t// Export data and download it\r\n\thandleExportClick() {\t\t\r\n\t\tvar version = this.props.appVersion.major + \".\" + this.props.appVersion.minor + \".\" + this.props.appVersion.patch;\r\n\r\n\t\tvar downloadLink = document.createElement(\"a\");\r\n\t\tdownloadLink.download = \"seedin\" + version + \" \" + MyDate.now().toString() + \".data\";\r\n\t\tdownloadLink.href=\"data:text/plain;charset=utf-8,\" + encodeURIComponent(JSON.stringify(this.database.exportAsJson(version)));\r\n\t\tdownloadLink.click();\r\n\t}\r\n\r\n\t// Import from a json file\r\n\thandleImportClick(file) {\r\n\t\tif(!window.confirm(\"This will delete your current data, are you sure you want to continue?\"))\r\n\t\t\treturn;\r\n\t\t\r\n\t\tvar fileReader = new FileReader();\r\n\t\tvar database = this.database;\r\n\t\tvar appVersion = this.props.appVersion.major + \".\" + this.props.appVersion.minor + \".\" + this.props.appVersion.patch;\r\n\r\n\t\tfileReader.onload = () => {\r\n\t\t\ttry {\r\n\t\t\t\tif(database.importJson(appVersion, JSON.parse(fileReader.result)))\r\n\t\t\t\t\twindow.alert(\"Import successful.\");\r\n\t\t\t\telse\r\n\t\t\t\t\twindow.alert(\"Import failed.\");\r\n\t\t\t} catch(err) {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t\twindow.alert(\"Invalid file.\");\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tfileReader.readAsText(file)\r\n\t}\r\n\r\n\t// Delete all stored data\r\n\thandleResetClick() {\r\n\t\tif(!window.confirm(\"Are you sure you want to clear your data?\"))\r\n\t\t\treturn;\r\n\r\n\t\tthis.database.clear();\r\n\t\tlocalStorage.clear();\r\n\t\twindow.alert(\"Clear successful.\");\t\t\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Row>\r\n\t\t\t\t<Col md=\"6\">\r\n\t\t\t\t\t<h2>My Data</h2>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\tYour data is locally saved on this web browser you are currently using. \r\n\t\t\t\t\t\tYou can continue working on it anytime. \r\n\t\t\t\t\t\tYou can export and download your data as a file if you wish to work \r\n\t\t\t\t\t\ton your data from another device or web browser.\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<h2>Export</h2>\r\n\t\t\t\t\t<p><Button variant=\"primary\" onClick={(e) => { this.handleExportClick() }}>Download My Data</Button></p>\r\n\t\t\t\t\t<h2>Import</h2>\r\n\t\t\t\t\t<p>Restore your data from an exported file. This replaces any data that is currently saved.</p>\r\n\t\t\t\t\t<Form.File label=\"Browse or drag file to this box\" custom\r\n\t\t\t\t\t\tonChange={(e) => { this.handleImportClick(e.target.files[0]) }} />\r\n\t\t\t\t\t<br /><br />\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col md=\"6\">\r\n\t\t\t\t\t<h2>Reset</h2>\r\n\t\t\t\t\t<p>Delete all your saved data from this web browser.</p>\r\n\t\t\t\t\t<p><Button variant=\"danger\" onClick={(e) => { this.handleResetClick() }}>Clear My Data</Button></p>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default MyDataContainer;\r\n","import React from \"react\";\r\nimport { InputGroup, Card, Form, FormControl, ProgressBar, Button } from \"react-bootstrap\";\r\nimport NumberUtils from \"../Entities/NumberUtils\";\r\n\r\n// A dashboard pin is a pinned report\r\nclass DashboardPin extends React.Component {\r\n\r\n    // The values for the dashboard pin will be taken from the props\r\n    render() {\r\n        var properties = this.props.pin[\"properties\"];\r\n        \r\n        return (\r\n            <Card bg=\"dark\" text=\"white\" style={{ marginBottom: \"2rem\" }}>\r\n            <Card.Header><strong>{properties[\"fromDate\"]} to {properties[\"toDate\"]}</strong></Card.Header>\r\n            <Card.Body>\r\n                <Form.Group>\r\n                    <Form.Label>Repayment Method</Form.Label>\r\n                    <FormControl size=\"sm\" readOnly value={properties[\"repaymentMethod\"]} />\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>Issuer</Form.Label>\r\n                    <FormControl size=\"sm\" readOnly value={properties[\"issuer\"]} />\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>Amount Invested / Projected Net</Form.Label>\r\n                    <ProgressBar className=\"progress\" now={ properties[\"gainPercent\"] } max=\"20\" />\r\n                    <InputGroup size=\"sm\" className=\"mb-3\">\r\n                        <FormControl readOnly value= { NumberUtils.formatCurrency(properties[\"amountInvested\"]) + \" / \" + NumberUtils.formatCurrency(properties[\"projectedNetAmount\"]) } />\r\n                        <InputGroup.Append>\r\n                            <InputGroup.Text>{ properties[\"gainPercent\"] }%</InputGroup.Text>\r\n                        </InputGroup.Append>\r\n                    </InputGroup>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                <Form.Label>Net Payout</Form.Label>\r\n                    <ProgressBar className=\"progress\" now={ properties[\"completedNetPayoutAmount\"] } max={ properties[\"projectedNetAmount\"] } />\r\n                    <FormControl size=\"sm\" readOnly value={ NumberUtils.formatCurrency(properties[\"completedNetPayoutAmount\"]) + \" out of \" + NumberUtils.formatCurrency(properties[\"projectedNetAmount\"]) } />\r\n                </Form.Group>              \r\n                <Form.Group>\r\n                    <Form.Label>Net Earnings</Form.Label>\r\n                    <ProgressBar className=\"progress\" now={ properties[\"completedNetEarnings\"] } max={ properties[\"netEarnings\"] } />\r\n                    <FormControl size=\"sm\" readOnly value={ NumberUtils.formatCurrency(properties[\"completedNetEarnings\"]) + \" out of \" + NumberUtils.formatCurrency(properties[\"netEarnings\"]) } />\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>Completed Projects</Form.Label>\r\n                    <ProgressBar className=\"progress\" now={ properties[\"completedProjects\"] } max={ properties[\"numOngoingProjects\"] } />\r\n                    <FormControl size=\"sm\" readOnly value={ properties[\"completedProjects\"] + \" out of \" + properties[\"numOngoingProjects\"] } />\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>Net Interest Rate per annum</Form.Label>\r\n                    <ProgressBar className=\"progress\" now={ (properties[\"netInterestRateStats\"][\"avg\"] * 100) } max=\"20\" />\r\n                    <InputGroup size=\"sm\" className=\"mb-3\">\r\n                        <InputGroup.Prepend>\r\n                            <InputGroup.Text>Avg</InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                        <FormControl readOnly value={ (properties[\"netInterestRateStats\"][\"avg\"] * 100).toFixed(2) + \"%\" } />\r\n                        <InputGroup.Prepend>\r\n                            <InputGroup.Text>High</InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                        <FormControl readOnly value={ (properties[\"netInterestRateStats\"][\"high\"] * 100).toFixed(2) + \"%\" } />\r\n                        <InputGroup.Prepend>\r\n                            <InputGroup.Text>Low</InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                        <FormControl readOnly value={ (properties[\"netInterestRateStats\"][\"low\"] * 100).toFixed(2) + \"%\" } />\r\n                    </InputGroup>\t\t\t\t\t\t\t\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>Net Interest Rate after Tenure</Form.Label>\r\n                    <ProgressBar className=\"progress\" now={ properties[\"netInterestRateAfterTenureStats\"][\"avg\"] * 100 } max=\"20\" />\r\n                    <InputGroup size=\"sm\" className=\"mb-3\">\r\n                        <InputGroup.Prepend>\r\n                            <InputGroup.Text>Avg</InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                        <FormControl readOnly value={ (properties[\"netInterestRateAfterTenureStats\"][\"avg\"] * 100).toFixed(2) + \"%\" } />\r\n                        <InputGroup.Prepend>\r\n                            <InputGroup.Text>High</InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                        <FormControl readOnly value={ (properties[\"netInterestRateAfterTenureStats\"][\"high\"] * 100).toFixed(2) + \"%\" } />\r\n                        <InputGroup.Prepend>\r\n                            <InputGroup.Text>Low</InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                        <FormControl readOnly value={ (properties[\"netInterestRateAfterTenureStats\"][\"low\"] * 100).toFixed(2) + \"%\" } />\r\n                    </InputGroup>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>Project Tenure (months)</Form.Label>\r\n                    <ProgressBar className=\"progress\" now={ properties[\"tenureStats\"][\"avg\"] } max=\"12\" />\r\n                    <InputGroup size=\"sm\" className=\"mb-3\">\r\n                        <InputGroup.Prepend>\r\n                            <InputGroup.Text>Avg</InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                        <FormControl readOnly value={ parseInt(properties[\"tenureStats\"][\"avg\"]) } /> \r\n                        <InputGroup.Prepend>\r\n                            <InputGroup.Text>High</InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                        <FormControl readOnly value={ properties[\"tenureStats\"][\"high\"] } />\r\n                        <InputGroup.Prepend>\r\n                            <InputGroup.Text>Low</InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                        <FormControl readOnly value={ properties[\"tenureStats\"][\"low\"] } />\r\n                    </InputGroup>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>Subscription Length (days)</Form.Label>\r\n                    <ProgressBar className=\"progress\" now={ properties[\"subscriptionDaysStats\"][\"avg\"] } max=\"30\" />\r\n                    <InputGroup size=\"sm\" className=\"mb-3\">\r\n                        <InputGroup.Prepend>\r\n                            <InputGroup.Text>Avg</InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                        <FormControl readOnly value={ parseInt(properties[\"subscriptionDaysStats\"][\"avg\"]) } />\r\n                        <InputGroup.Prepend>\r\n                            <InputGroup.Text>High</InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                        <FormControl readOnly value={ properties[\"subscriptionDaysStats\"][\"high\"] } />\r\n                        <InputGroup.Prepend>\r\n                            <InputGroup.Text>Low</InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                        <FormControl readOnly value={ properties[\"subscriptionDaysStats\"][\"low\"] } />\r\n                    </InputGroup>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>Days before participating on another project</Form.Label>\r\n                    <ProgressBar className=\"progress\" now={ properties[\"idleDaysStats\"][\"avg\"] } max=\"30\" />\r\n                    <InputGroup size=\"sm\" className=\"mb-3\">\r\n                        <InputGroup.Prepend>\r\n                            <InputGroup.Text>Avg</InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                        <FormControl readOnly value={ parseInt(properties[\"idleDaysStats\"][\"avg\"]) } />\r\n                        <InputGroup.Prepend>\r\n                            <InputGroup.Text>High</InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                        <FormControl readOnly value={ properties[\"idleDaysStats\"][\"high\"] } />\r\n                        <InputGroup.Prepend>\r\n                            <InputGroup.Text>Low</InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                        <FormControl readOnly value={ properties[\"idleDaysStats\"][\"low\"] } />\r\n                    </InputGroup>\r\n                </Form.Group>\r\n            </Card.Body>\r\n            <Card.Footer style={{ textAlign: \"center\" }}>\r\n                <Button onClick={() => { this.props.removePinClick(this.props.pinNumber) }}>Remove</Button>\r\n            </Card.Footer>\r\n        </Card>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DashboardPin;\r\n","import React from \"react\";\r\nimport { Table, Button, ButtonGroup, Modal, Alert, Form, FormControl, Row, Col, InputGroup, ProgressBar } from \"react-bootstrap\";\r\nimport Database from \"../Entities/Database\";\r\nimport Investment from \"../Entities/Investment\";\r\nimport MyDate from \"../Entities/MyDate\";\r\nimport NumberUtils from \"../Entities/NumberUtils\";\r\nimport DashboardPin from \"./DashboardPin\"\r\nimport Pin from \"../Entities/Pin\";\r\n\r\n// The dashboard contains all summary of projects\r\nclass DashboardContainer extends React.Component {\r\n\r\n\t// Initialize the default stats\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.database = new Database();\r\n\t\t\t\t\r\n\t\tthis.investments = this.database.getInvestments();\r\n\t\tthis.issuers = Investment.getIssuers(this.investments);\r\n\r\n\t\t// Initialize the earliest and latest dates\r\n\t\tvar dates = Investment.getEarliestAndLatestInvestmentDates(this.investments);\r\n\r\n\t\tthis.state = {\r\n\t\t\t\"fromDate\": dates !== null ? dates[\"earliest\"].toString() : \"\",\r\n\t\t\t\"toDate\": dates !== null ? dates[\"latest\"].toString() : \"\",\r\n\t\t\t\"repaymentMethod\": \"All\",\r\n\t\t\t\"issuer\": \"All\",\r\n\t\t\t\"showNegativeGainExplanation\": false,\r\n\t\t\t\"showPinReportHelp\": false,\r\n\t\t\t\"showInterestRateDistribution\": false,\r\n\t\t\t\"showTenureDistribution\": false,\r\n\t\t\t\"pins\": this.database.getPins()\r\n\t\t};\r\n\r\n\t\tthis.handleRemovePinClick = this.handleRemovePinClick.bind(this);\r\n\t}\r\n\r\n\t// Create a new dashboard pin\r\n\thandleCreatePinClick() {\r\n\t\tvar earliestDate = MyDate.toMyDate(this.state.fromDate);\r\n\t\tvar latestDate = MyDate.toMyDate(this.state.toDate);\r\n\r\n\t\tif(earliestDate == null || latestDate == null || earliestDate.compareTo(latestDate) > 0) {\r\n\t\t\twindow.alert(\"Pick a sensible date.\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar pin = new Pin(\r\n\t\t\tthis.state.fromDate,\r\n\t\t\tthis.state.toDate,\r\n\t\t\tthis.state.repaymentMethod,\r\n\t\t\tthis.state.issuer,\r\n\t\t\tthis.amountInvested,\r\n\t\t\tthis.completedNetEarnings,\r\n\t\t\tthis.netEarnings,\r\n\t\t\tthis.projectedNetAmount,\r\n\t\t\tthis.completedNetPayoutAmount,\r\n\t\t\tthis.completedProjects,\r\n\t\t\tthis.gainPercent,\r\n\t\t\tthis.numOngoingProjects,\r\n\t\t\tthis.netInterestRateStats,\r\n\t\t\tthis.tenureStats,\r\n\t\t\tthis.netInterestRateAfterTenureStats,\r\n\t\t\tthis.subscriptionDaysStats,\r\n\t\t\tthis.idleDaysStats\r\n\t\t);\r\n\t\t\r\n\t\tthis.database.addPin(pin);\r\n\t\tthis.setState({\"pins\": this.database.getPins()});\r\n\t}\r\n\r\n\t// Handle the removal of a pin from the dashboard\r\n\thandleRemovePinClick(pinNumber) {\r\n\t\tthis.database.deletePin(pinNumber - 1);\t\t\r\n\t\tthis.setState({\"pins\": this.database.getPins()});\r\n\t}\r\n\r\n\trender() {\r\n\t\t// Load the issuers\r\n\t\tlet issuerOptions = this.issuers.map((issuer) => {\r\n            return <option key={issuer}>{ issuer }</option>\r\n\t\t});\r\n\t\t\r\n\t\tvar earliestDate = MyDate.toMyDate(this.state.fromDate);\r\n\t\tvar latestDate = MyDate.toMyDate(this.state.toDate);\r\n\r\n\t\t// Dashboard numbers\r\n\t\tvar currentDate = MyDate.now();\r\n\t\tvar numMaturedToday = 0;\r\n\r\n\t\tvar numOnHold = 0;\r\n\t\tvar onHoldAmount = 0;\r\n\r\n\t\tvar numPayoutsToday = 0;\r\n\t\tvar totalPayoutsToday = 0;\r\n\t\tvar totalSubscriptionDays = 0;\r\n\r\n\t\tthis.amountInvested = 0;\r\n\t\tthis.completedNetEarnings = 0;\r\n\t\tthis.netEarnings = 0;\r\n\t\tthis.projectedNetAmount = 0;\r\n\t\tthis.completedNetPayoutAmount = 0;\r\n\t\tthis.completedProjects = 0;\r\n\t\tthis.gainPercent = 0;\r\n\t\tthis.numOngoingProjects = 0;\r\n\t\t\r\n\t\tthis.netInterestRateStats = { \"avg\": 0, \"low\": 0, \"high\": 0};\r\n\t\tthis.tenureStats = { \"avg\": 0, \"low\": 0, \"high\": 0 };\r\n\t\tthis.netInterestRateAfterTenureStats = { \"avg\": 0, \"low\": 0, \"high\": 0 };\r\n\t\tthis.subscriptionDaysStats = { \"avg\": 0, \"low\": 0, \"high\": 0 };\r\n\t\tthis.idleDaysStats = { \"avg\": 0, \"low\": 0, \"high\": 0 };\r\n\r\n\t\tthis.interestRateDistribution = {};\r\n\t\tthis.tenureDistribution = {};\r\n\r\n\t\tvar filteredInvestments = [];\r\n\r\n\t\t// Proceed only with the calculation on validate dates\r\n\t\tif(earliestDate != null && latestDate != null && earliestDate.compareTo(latestDate) <= 0) {\r\n\t\t\tfilteredInvestments = Investment.filterInvestmentsByDate(this.investments, earliestDate, latestDate);\r\n\t\t\tfilteredInvestments = Investment.filterInvestmentsByRepaymentMethod(filteredInvestments, this.state.repaymentMethod);\r\n\t\t\tfilteredInvestments = Investment.filterInvestmentsByIssuer(filteredInvestments, this.state.issuer);\r\n\t\t\t\r\n\t\t\t// Sort the investments by project ID, the project ID is the date and that's how we can compute the idle days\r\n\t\t\tif(filteredInvestments.length > 0) {\r\n\t\t\t\tfilteredInvestments.sort((investmentA, investmentB) => {\r\n\t\t\t\t\treturn investmentA.properties[\"propertyId\"] - investmentB.properties[\"propertyId\"];\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// Calculate the total idle days\r\n\t\t\t\tvar totalIdleDays = 0;\r\n\r\n\t\t\t\tfor(var k = 1; k < filteredInvestments.length; k++) {\r\n\t\t\t\t\tvar idleDays = filteredInvestments[k - 1].getOpenDate().daysBetween(filteredInvestments[k].getOpenDate());\r\n\r\n\t\t\t\t\tif(k === 1 || idleDays > this.idleDaysStats[\"high\"])\r\n\t\t\t\t\t\tthis.idleDaysStats[\"high\"] = idleDays;\t\t\t\t\t\t\r\n\r\n\t\t\t\t\tif(k === 1 || idleDays < this.idleDaysStats[\"low\"])\r\n\t\t\t\t\t\tthis.idleDaysStats[\"low\"] = idleDays;\r\n\r\n\t\t\t\t\ttotalIdleDays += idleDays;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Calculate the average\r\n\t\t\t\tthis.idleDaysStats[\"avg\"] = totalIdleDays / filteredInvestments.length;\r\n\t\t\t}\r\n\r\n\t\t\tvar totalNetInterestRate = 0;\t\r\n\t\t\tvar totalTenure = 0;\r\n\r\n\t\t\tfor(var i = 0; i < filteredInvestments.length; i++) {\r\n\t\t\t\tvar investment = filteredInvestments[i];\r\n\t\r\n\t\t\t\tif(investment.properties[\"status\"] === \"On Hold\") {\r\n\t\t\t\t\tnumOnHold++;\r\n\t\t\t\t\tonHoldAmount += investment.properties[\"investmentAmount\"];\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Update the distribution of interest rates\r\n\t\t\t\tif(!(investment.properties[\"grossInterestRate\"] in this.interestRateDistribution)) {\r\n\t\t\t\t\tthis.interestRateDistribution[investment.properties[\"grossInterestRate\"]] = { \r\n\t\t\t\t\t\t\"netInterestRate\":  investment.calculateNetInterestRate(),\r\n\t\t\t\t\t\t\"frequency\": 0\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.interestRateDistribution[investment.properties[\"grossInterestRate\"]].frequency++;\r\n\r\n\t\t\t\t// Update the distribution of tenure\r\n\t\t\t\tif(!(investment.properties[\"tenure\"] in this.tenureDistribution)) {\r\n\t\t\t\t\tthis.tenureDistribution[investment.properties[\"tenure\"]] = 1;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.tenureDistribution[investment.properties[\"tenure\"]]++;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Update net interest stats\r\n\t\t\t\tvar netInterestRate = investment.calculateNetInterestRate();\r\n\r\n\t\t\t\tif(i === 0 || netInterestRate > this.netInterestRateStats[\"high\"])\r\n\t\t\t\t\tthis.netInterestRateStats[\"high\"] = netInterestRate;\r\n\t\t\t\t\r\n\t\t\t\tif(i === 0 || netInterestRate < this.netInterestRateStats[\"low\"])\r\n\t\t\t\t\tthis.netInterestRateStats[\"low\"] = netInterestRate;\r\n\r\n\t\t\t\t// Update tenure stats\r\n\t\t\t\tvar tenure = investment.properties[\"tenure\"];\r\n\r\n\t\t\t\tif(i === 0 || tenure > this.tenureStats[\"high\"])\r\n\t\t\t\t\tthis.tenureStats[\"high\"] = tenure;\r\n\r\n\t\t\t\tif(i === 0 || tenure < this.tenureStats[\"low\"])\r\n\t\t\t\t\tthis.tenureStats[\"low\"] = tenure;\r\n\r\n\t\t\t\t// Update subscription days stats\r\n\t\t\t\tvar subscriptionDays = investment.calculateSubscriptionDays();\r\n\r\n\t\t\t\tif(i === 0 || subscriptionDays > this.subscriptionDaysStats[\"high\"])\r\n\t\t\t\t\tthis.subscriptionDaysStats[\"high\"] = subscriptionDays;\r\n\t\t\t\t\r\n\t\t\t\tif(i === 0 || subscriptionDays < this.subscriptionDaysStats[\"low\"])\r\n\t\t\t\t\tthis.subscriptionDaysStats[\"low\"] = subscriptionDays;\r\n\r\n\t\t\t\ttotalNetInterestRate += netInterestRate;\r\n\t\t\t\ttotalTenure += tenure;\r\n\t\t\t\ttotalSubscriptionDays += subscriptionDays;\r\n\t\r\n\t\t\t\t// Break down each investment schedule and include only those schedule that is exactly in the\r\n\t\t\t\t// date range, filters out months that\r\n\t\t\t\tvar schedules = investment.generateRepaymentSchedule();\r\n\t\t\t\t\r\n\t\t\t\tif(schedules[schedules.length - 1][\"date\"].compareTo(currentDate) === 0)\r\n\t\t\t\t\tnumMaturedToday++;\r\n\t\r\n\t\t\t\tif(schedules[schedules.length - 1][\"date\"].compareTo(currentDate) <= 0)\r\n\t\t\t\t\tthis.completedProjects++;\r\n\t\t\t\t\r\n\t\t\t\t// If repayment method is balloon, there's no monthly investment.\r\n\t\t\t\t// So we put the whole investment amount.\r\n\t\t\t\tif(investment.properties[\"repaymentMethod\"] === \"Balloon\")\r\n\t\t\t\t\tthis.amountInvested += investment.properties[\"investmentAmount\"];\r\n\t\t\t\t\r\n\t\t\t\tfor(var j = 0; j < schedules.length; j++) {\r\n\t\t\t\t\tvar schedule = schedules[j];\r\n\t\r\n\t\t\t\t\tif(schedule[\"date\"].compareTo(earliestDate) >= 0 && schedule[\"date\"].compareTo(latestDate) <= 0) {\r\n\t\t\t\t\t\tif(schedule[\"date\"].compareTo(currentDate) === 0) {\r\n\t\t\t\t\t\t\tnumPayoutsToday++;\r\n\t\t\t\t\t\t\ttotalPayoutsToday += schedule[\"netPayout\"];\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tthis.projectedNetAmount += schedule[\"netPayout\"];\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t// For equal repayment method, we consider the investment as divided as equal as well.\r\n\t\t\t\t\t\tif(investment.properties[\"repaymentMethod\"] === \"Equal\")\r\n\t\t\t\t\t\t\tthis.amountInvested += schedule[\"netPayout\"] - schedule[\"netInterestPayout\"];\r\n\t\r\n\t\t\t\t\t\tthis.netEarnings += schedule[\"netInterestPayout\"];\r\n\t\r\n\t\t\t\t\t\tif(schedule[\"date\"].compareTo(currentDate) <= 0) {\t\r\n\t\t\t\t\t\t\tthis.completedNetEarnings += schedule[\"netInterestPayout\"];\r\n\t\t\t\t\t\t\tthis.completedNetPayoutAmount += schedule[\"netPayout\"];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.numOngoingProjects = filteredInvestments.length - numOnHold;\r\n\t\t\tthis.gainPercent = (((this.projectedNetAmount - this.amountInvested) / this.amountInvested) * 100).toFixed(2);\r\n\t\t\t\r\n\t\t\tif(isNaN(this.gainPercent))\r\n\t\t\t\tthis.gainPercent = 0;\r\n\r\n\t\t\t// Average interest rate calculation\r\n\t\t\tif(this.numOngoingProjects > 0) {\r\n\t\t\t\tthis.netInterestRateStats[\"avg\"] = totalNetInterestRate / this.numOngoingProjects;\r\n\t\t\t\tthis.tenureStats[\"avg\"] = totalTenure / this.numOngoingProjects;\r\n\r\n\t\t\t\tthis.netInterestRateAfterTenureStats[\"avg\"] = ((this.netInterestRateStats[\"avg\"] / 12.0) * this.tenureStats[\"avg\"]);\r\n\t\t\t\tthis.netInterestRateAfterTenureStats[\"high\"] = ((this.netInterestRateStats[\"high\"] / 12.0) * this.tenureStats[\"high\"]);\r\n\t\t\t\tthis.netInterestRateAfterTenureStats[\"low\"] = ((this.netInterestRateStats[\"low\"] / 12.0) * this.tenureStats[\"low\"]);\r\n\r\n\t\t\t\tthis.subscriptionDaysStats[\"avg\"] = \r\n\t\t\t\tthis.averageNetInterestRateAfterTenure = totalSubscriptionDays / this.numOngoingProjects;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Set negative gain notification\r\n\t\tlet negativeGainPercentNotification = <></>\r\n\r\n\t\tif(this.gainPercent < 0)\r\n\t\t\tnegativeGainPercentNotification = <Alert className=\"clickable-alert\" variant=\"info\" onClick={(e) => { this.setState({\"showNegativeGainExplanation\": true}) }}>You got a <strong><u>negative gain</u></strong>.</Alert>\r\n\r\n\t\t// Set any matured projects notifications\r\n\t\tlet maturedProjectsNotification = <></>\r\n\r\n\t\tif(numMaturedToday > 0)\r\n\t\t\tmaturedProjectsNotification = <Alert variant=\"success\"><strong>Congratulations!</strong> You have <strong>{ numMaturedToday} project(s)</strong> that reached the maturity date today.</Alert>\r\n\r\n\t\t// Set the number of on hold projects notification\r\n\t\tlet onHoldProjectsNotification = <></>\r\n\r\n\t\tif(numOnHold > 0)\r\n\t\t\tonHoldProjectsNotification = <Alert variant=\"warning\">You have <strong>{ numOnHold } on hold project(s)</strong> with a total amount of <strong>{ NumberUtils.formatCurrency(onHoldAmount) }</strong></Alert>\r\n\r\n\t\tlet payoutsTodayNotification = <></>\r\n\r\n\t\tif(numPayoutsToday > 0)\r\n\t\t\tpayoutsTodayNotification = <Alert variant=\"success\">You have <strong>{ numPayoutsToday } payout(s)</strong> today with a total amount of <strong>{ NumberUtils.formatCurrency(totalPayoutsToday) }</strong></Alert>\r\n\r\n\t\t// Set the pins\r\n\t\tlet pins = <></>\r\n\t\tvar pinId = 0;\r\n\r\n\t\tif(this.state.pins.length > 0) {\r\n\t\t\tpins = this.state.pins.map((pin) => {\r\n\t\t\t\tpinId++;\r\n\r\n\t\t\t\treturn <Col md=\"4\" key={\"pin-\" + pinId}>\r\n\t\t\t\t\t<DashboardPin pinNumber={pinId} pin={pin} removePinClick={this.handleRemovePinClick} />\r\n\t\t\t\t</Col>\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<Col md=\"12\">\r\n\t\t\t\t\t\t<h2>Dashboard</h2>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\t\t\t\t\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<Col md=\"12\">{ negativeGainPercentNotification }</Col>\r\n\t\t\t\t\t<Col md=\"12\">{ maturedProjectsNotification }</Col>\r\n\t\t\t\t\t<Col md=\"12\">{ onHoldProjectsNotification }</Col>\r\n\t\t\t\t\t<Col md=\"12\">{ payoutsTodayNotification }</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<Col md=\"2\">\r\n\t\t\t\t\t\t<Form.Group>\r\n\t\t\t\t\t\t\t<Form.Text className=\"text-muted\">From Date</Form.Text>\r\n\t\t\t\t\t\t\t<Form.Control type=\"date\" placeholder=\"yyyy-mm-dd\" \r\n                                value={this.state.fromDate} onChange={(e) => { this.setState({\"fromDate\": e.target.value }) }}/>\r\n\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col md=\"2\">\r\n\t\t\t\t\t\t<Form.Group>\r\n\t\t\t\t\t\t\t<Form.Text className=\"text-muted\">To Date</Form.Text>\r\n\t\t\t\t\t\t\t<Form.Control type=\"date\" placeholder=\"yyyy-mm-dd\" \r\n                                value={this.state.toDate} onChange={(e) => { this.setState({\"toDate\": e.target.value }) }}/>\r\n\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col md=\"2\">\r\n\t\t\t\t\t\t<Form.Group>\r\n\t\t\t\t\t\t\t<Form.Text className=\"text-muted\">Repayment Method</Form.Text>\r\n\t\t\t\t\t\t\t<Form.Control as=\"select\" custom\r\n                                value={this.state.repaymentMethod} onChange={(e) => { this.setState({\"repaymentMethod\": e.target.value}) }}>\r\n\t\t\t\t\t\t\t\t<option>All</option>\r\n\t\t\t\t\t\t\t\t<option>Balloon</option>\r\n\t\t\t\t\t\t\t\t<option>Equal</option>\r\n\t\t\t\t\t\t\t</Form.Control>\r\n\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col md=\"2\">\r\n\t\t\t\t\t\t<Form.Group>\r\n\t\t\t\t\t\t\t<Form.Text className=\"text-muted\">Issuer</Form.Text>\r\n\t\t\t\t\t\t\t<Form.Control as=\"select\" custom\r\n                                value={this.state.issuer} onChange={(e) => { this.setState({\"issuer\": e.target.value}) }}>\r\n\t\t\t\t\t\t\t\t<option>All</option>\r\n                                { issuerOptions }\r\n\t\t\t\t\t\t\t</Form.Control>\r\n\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<Col md=\"4\">\r\n\t\t\t\t\t\t<Form.Group>\r\n\t\t\t\t\t\t\t<Form.Label>Amount Invested / Projected Net</Form.Label>\r\n\t\t\t\t\t\t\t<ProgressBar className=\"progress\" now={ this.gainPercent > 0 ? this.gainPercent: 0  } max=\"20\" />\r\n\t\t\t\t\t\t\t<InputGroup className=\"mb-3\">\r\n\t\t\t\t\t\t\t\t<FormControl readOnly value={ NumberUtils.formatCurrency(this.amountInvested) + \" / \" + NumberUtils.formatCurrency(this.projectedNetAmount) } />\r\n\t\t\t\t\t\t\t\t<InputGroup.Append>\r\n\t\t\t\t\t\t\t\t\t<InputGroup.Text>{ this.gainPercent }%</InputGroup.Text>\r\n\t\t\t\t\t\t\t\t</InputGroup.Append>\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</InputGroup>\r\n\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t<Form.Group>\r\n\t\t\t\t\t\t\t<Form.Label>Net Payout</Form.Label>\r\n\t\t\t\t\t\t\t<ProgressBar className=\"progress\" now={ this.completedNetPayoutAmount } max={ this.projectedNetAmount > 0 ? this.projectedNetAmount : 100 } />\r\n\t\t\t\t\t\t\t<FormControl readOnly value={ NumberUtils.formatCurrency(this.completedNetPayoutAmount) + \" out of \" + NumberUtils.formatCurrency(this.projectedNetAmount) } />\r\n\t\t\t\t\t\t</Form.Group>\t\t\t\t\r\n\t\t\t\t\t\t<Form.Group>\r\n\t\t\t\t\t\t\t<Form.Label>Net Earnings</Form.Label>\r\n\t\t\t\t\t\t\t<ProgressBar className=\"progress\" now={ this.completedNetEarnings } max={ this.netEarnings > 0 ? this.netEarnings : 100 } />\r\n\t\t\t\t\t\t\t<FormControl readOnly value={ NumberUtils.formatCurrency(this.completedNetEarnings) + \" out of \" + NumberUtils.formatCurrency(this.netEarnings) } />\r\n\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t<Form.Group>\r\n\t\t\t\t\t\t\t<Form.Label>Completed Projects</Form.Label>\r\n\t\t\t\t\t\t\t<ProgressBar className=\"progress\" now={ this.completedProjects } max={ this.numOngoingProjects > 0 ? this.numOngoingProjects : 100 } />\r\n\t\t\t\t\t\t\t<FormControl readOnly value={ this.completedProjects + \" out of \" + this.numOngoingProjects } />\r\n\t\t\t\t\t\t</Form.Group>\t\t\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col md=\"4\">\r\n\t\t\t\t\t\t<Form.Group>\r\n\t\t\t\t\t\t\t<Button onClick={ () => { this.setState({\"showInterestRateDistribution\": true}) } } variant=\"link\" style={{ padding: 0, margin: 0 }} className=\"float-right\"><small>Distribution</small></Button>\r\n\t\t\t\t\t\t\t<Form.Label>Net Interest Rate per annum</Form.Label>\r\n\t\t\t\t\t\t\t<ProgressBar className=\"progress\" now={ (this.netInterestRateStats[\"avg\"] * 100) } max=\"20\" />\r\n\t\t\t\t\t\t\t<InputGroup className=\"mb-3\">\r\n\t\t\t\t\t\t\t\t<InputGroup.Prepend>\r\n\t\t\t\t\t\t\t\t\t<InputGroup.Text>Avg</InputGroup.Text>\r\n\t\t\t\t\t\t\t\t</InputGroup.Prepend>\r\n\t\t\t\t\t\t\t\t<FormControl readOnly value={ (this.netInterestRateStats[\"avg\"] * 100).toFixed(2) + \"%\" } />\r\n\t\t\t\t\t\t\t\t<InputGroup.Prepend>\r\n\t\t\t\t\t\t\t\t\t<InputGroup.Text>High</InputGroup.Text>\r\n\t\t\t\t\t\t\t\t</InputGroup.Prepend>\r\n\t\t\t\t\t\t\t\t<FormControl readOnly value={ (this.netInterestRateStats[\"high\"] * 100).toFixed(2) + \"%\" } />\r\n\t\t\t\t\t\t\t\t<InputGroup.Prepend>\r\n\t\t\t\t\t\t\t\t\t<InputGroup.Text>Low</InputGroup.Text>\r\n\t\t\t\t\t\t\t\t</InputGroup.Prepend>\r\n\t\t\t\t\t\t\t\t<FormControl readOnly value={ (this.netInterestRateStats[\"low\"] * 100).toFixed(2) + \"%\" } />\r\n\t\t\t\t\t\t\t</InputGroup>\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t<Form.Group>\r\n\t\t\t\t\t\t\t<Form.Label>Net Interest Rate after Tenure</Form.Label>\r\n\t\t\t\t\t\t\t<ProgressBar className=\"progress\" now={ this.netInterestRateAfterTenureStats[\"avg\"] * 100 } max=\"20\" />\r\n\t\t\t\t\t\t\t<InputGroup className=\"mb-3\">\r\n\t\t\t\t\t\t\t\t<InputGroup.Prepend>\r\n\t\t\t\t\t\t\t\t\t<InputGroup.Text>Avg</InputGroup.Text>\r\n\t\t\t\t\t\t\t\t</InputGroup.Prepend>\r\n\t\t\t\t\t\t\t\t<FormControl readOnly value={ (this.netInterestRateAfterTenureStats[\"avg\"] * 100).toFixed(2) + \"%\" } />\r\n\t\t\t\t\t\t\t\t<InputGroup.Prepend>\r\n\t\t\t\t\t\t\t\t\t<InputGroup.Text>High</InputGroup.Text>\r\n\t\t\t\t\t\t\t\t</InputGroup.Prepend>\r\n\t\t\t\t\t\t\t\t<FormControl readOnly value={ (this.netInterestRateAfterTenureStats[\"high\"] * 100).toFixed(2) + \"%\" } />\r\n\t\t\t\t\t\t\t\t<InputGroup.Prepend>\r\n\t\t\t\t\t\t\t\t\t<InputGroup.Text>Low</InputGroup.Text>\r\n\t\t\t\t\t\t\t\t</InputGroup.Prepend>\r\n\t\t\t\t\t\t\t\t<FormControl readOnly value={ (this.netInterestRateAfterTenureStats[\"low\"] * 100).toFixed(2) + \"%\" } />\r\n\t\t\t\t\t\t\t</InputGroup>\r\n\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t<Form.Group>\r\n\t\t\t\t\t\t<Button onClick={ () => { this.setState({\"showTenureDistribution\": true}) } } variant=\"link\" style={{ padding: 0, margin: 0 }} className=\"float-right\"><small>Distribution</small></Button>\r\n\t\t\t\t\t\t\t<Form.Label>Project Tenure (months)</Form.Label>\r\n\t\t\t\t\t\t\t<ProgressBar className=\"progress\" now={ this.tenureStats[\"avg\"] } max=\"12\" />\r\n\t\t\t\t\t\t\t<InputGroup className=\"mb-3\">\r\n\t\t\t\t\t\t\t\t<InputGroup.Prepend>\r\n\t\t\t\t\t\t\t\t\t<InputGroup.Text>Avg</InputGroup.Text>\r\n\t\t\t\t\t\t\t\t</InputGroup.Prepend>\r\n\t\t\t\t\t\t\t\t<FormControl readOnly value={ parseInt(this.tenureStats[\"avg\"]) } /> \r\n\t\t\t\t\t\t\t\t<InputGroup.Prepend>\r\n\t\t\t\t\t\t\t\t\t<InputGroup.Text>High</InputGroup.Text>\r\n\t\t\t\t\t\t\t\t</InputGroup.Prepend>\r\n\t\t\t\t\t\t\t\t<FormControl readOnly value={ this.tenureStats[\"high\"] } />\r\n\t\t\t\t\t\t\t\t<InputGroup.Prepend>\r\n\t\t\t\t\t\t\t\t\t<InputGroup.Text>Low</InputGroup.Text>\r\n\t\t\t\t\t\t\t\t</InputGroup.Prepend>\r\n\t\t\t\t\t\t\t\t<FormControl readOnly value={ this.tenureStats[\"low\"] } />\r\n\t\t\t\t\t\t\t</InputGroup>\r\n\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t<Form.Group>\r\n\t\t\t\t\t\t\t<Form.Label>Subscription Length (days)</Form.Label>\r\n\t\t\t\t\t\t\t<ProgressBar className=\"progress\" now={ this.subscriptionDaysStats[\"avg\"] } max=\"30\" />\r\n\t\t\t\t\t\t\t<InputGroup className=\"mb-3\">\r\n\t\t\t\t\t\t\t\t<InputGroup.Prepend>\r\n\t\t\t\t\t\t\t\t\t<InputGroup.Text>Avg</InputGroup.Text>\r\n\t\t\t\t\t\t\t\t</InputGroup.Prepend>\r\n\t\t\t\t\t\t\t\t<FormControl readOnly value={ parseInt(this.subscriptionDaysStats[\"avg\"]) } />\r\n\t\t\t\t\t\t\t\t<InputGroup.Prepend>\r\n\t\t\t\t\t\t\t\t\t<InputGroup.Text>High</InputGroup.Text>\r\n\t\t\t\t\t\t\t\t</InputGroup.Prepend>\r\n\t\t\t\t\t\t\t\t<FormControl readOnly value={ this.subscriptionDaysStats[\"high\"] } />\r\n\t\t\t\t\t\t\t\t<InputGroup.Prepend>\r\n\t\t\t\t\t\t\t\t\t<InputGroup.Text>Low</InputGroup.Text>\r\n\t\t\t\t\t\t\t\t</InputGroup.Prepend>\r\n\t\t\t\t\t\t\t\t<FormControl readOnly value={ this.subscriptionDaysStats[\"low\"] } />\r\n\t\t\t\t\t\t\t</InputGroup>\r\n\t\t\t\t\t\t</Form.Group>\t\t\t\t\t\t\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col md=\"4\">\r\n\t\t\t\t\t\t<Form.Group>\r\n\t\t\t\t\t\t\t<Form.Label>Days before participating on another project</Form.Label>\r\n\t\t\t\t\t\t\t<ProgressBar className=\"progress\" now={ this.idleDaysStats[\"avg\"] } max=\"30\" />\r\n\t\t\t\t\t\t\t<InputGroup className=\"mb-3\">\r\n\t\t\t\t\t\t\t\t<InputGroup.Prepend>\r\n\t\t\t\t\t\t\t\t\t<InputGroup.Text>Avg</InputGroup.Text>\r\n\t\t\t\t\t\t\t\t</InputGroup.Prepend>\r\n\t\t\t\t\t\t\t\t<FormControl readOnly value={ parseInt(this.idleDaysStats[\"avg\"]) } />\r\n\t\t\t\t\t\t\t\t<InputGroup.Prepend>\r\n\t\t\t\t\t\t\t\t\t<InputGroup.Text>High</InputGroup.Text>\r\n\t\t\t\t\t\t\t\t</InputGroup.Prepend>\r\n\t\t\t\t\t\t\t\t<FormControl readOnly value={ this.idleDaysStats[\"high\"] } />\r\n\t\t\t\t\t\t\t\t<InputGroup.Prepend>\r\n\t\t\t\t\t\t\t\t\t<InputGroup.Text>Low</InputGroup.Text>\r\n\t\t\t\t\t\t\t\t</InputGroup.Prepend>\r\n\t\t\t\t\t\t\t\t<FormControl readOnly value={ this.idleDaysStats[\"low\"] } />\r\n\t\t\t\t\t\t\t</InputGroup>\r\n\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<Col md=\"12\" style={{ textAlign: \"center\", marginBottom: \"1rem\" }}>\r\n\t\t\t\t\t\t<ButtonGroup size=\"lg\" className=\"mb-2\">\r\n\t\t\t\t\t\t\t<Button onClick={ ()=> { this.handleCreatePinClick(); } }>Pin Report</Button>\r\n\t\t\t\t\t\t\t<Button variant=\"dark\" onClick={ () => { this.setState({\"showPinReportHelp\": true}) } }>?</Button>\r\n\t\t\t\t\t\t</ButtonGroup>\t\t\t\t\t\t\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t\t<Row>\t\t\r\n\t\t\t\t\t{ pins }\r\n\t\t\t\t</Row>\r\n\t\t\t\t<Modal show={this.state.showInterestRateDistribution} onHide={(e) => { this.setState({\"showInterestRateDistribution\": false}) }}>\r\n\t\t\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t\t\t<Modal.Title>Interest Rate Distribution</Modal.Title>\r\n\t\t\t\t\t</Modal.Header>\r\n\t\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t\t<Table responsive striped bordered hover variant=\"dark\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th className=\"align-middle\">Gross % p.a.</th>\r\n                                    <th className=\"align-middle\">Net % p.a.</th>\r\n                                    <th className=\"align-middle\">Frequency</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tObject.keys(this.interestRateDistribution).sort().map((grossInterestRate) => {\r\n\t\t\t\t\t\t\t\t\t\treturn <tr>\r\n\t\t\t\t\t\t\t\t\t\t\t<td>{ (grossInterestRate * 100).toFixed(2) }%</td>\r\n\t\t\t\t\t\t\t\t\t\t\t<td>{ (this.interestRateDistribution[grossInterestRate][\"netInterestRate\"] * 100).toFixed(2) }%</td>\r\n\t\t\t\t\t\t\t\t\t\t\t<td>{ (this.interestRateDistribution[grossInterestRate][\"frequency\"]) }</td>\r\n\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t</tbody>\r\n                        </Table>\r\n\t\t\t\t\t</Modal.Body>\r\n\t\t\t\t</Modal>\r\n\t\t\t\t<Modal show={this.state.showTenureDistribution} onHide={(e) => { this.setState({\"showTenureDistribution\": false}) }}>\r\n\t\t\t\t\t<Modal.Header>\r\n\t\t\t\t\t\t<Modal.Title>Tenure Distribution</Modal.Title>\r\n\t\t\t\t\t</Modal.Header>\r\n\t\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t<Table responsive striped bordered hover variant=\"dark\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th className=\"align-middle\">Tenure</th>\r\n                                    <th className=\"align-middle\">Frequency</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tObject.keys(this.tenureDistribution).sort(function(a, b) { return a - b }).map((tenure) => {\r\n\t\t\t\t\t\t\t\t\t\treturn <tr>\r\n\t\t\t\t\t\t\t\t\t\t\t<td>{ tenure } month(s)</td>\r\n\t\t\t\t\t\t\t\t\t\t\t<td>{ this.tenureDistribution[tenure] }</td>\r\n\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t</tbody>\r\n                        </Table>\r\n\t\t\t\t\t</Modal.Body>\t\t\t\t\t\r\n\t\t\t\t</Modal>\r\n\t\t\t\t<Modal show={this.state.showNegativeGainExplanation} onHide={(e) => { this.setState({\"showNegativeGainExplanation\": false}) }}>\r\n\t\t\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t\t\t<Modal.Title>Negative Gain</Modal.Title>\r\n\t\t\t\t\t</Modal.Header>\r\n\t\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\tYou have a negative gain on the <strong>selected range of date</strong>{' '}\r\n\t\t\t\t\t\t\tbecause you have <strong>more funds on balloon repayment projects than equal repayment projects</strong>.{' '}\r\n\t\t\t\t\t\t\tUnlike equal repayment projects, your invested funds in a balloon repayment project is{' '}\r\n\t\t\t\t\t\t\t<strong>not divided into months but summed as a whole</strong>. Some of the interests might have{' '}\r\n\t\t\t\t\t\t\tbeen paid which already lowered your negative gain. As we move closer to the maturity dates more interest earned will be released and{' '}\r\n                \t\t\tthe negative gain will soon decrease and become positive <strong>once the tenure of the balloon projects have been reached</strong>.{' '}\r\n\t\t\t\t\t\t\tSo within the range of dates you have selected, some of your <strong>balloon projects{' '}\r\n\t\t\t\t\t\t\thave not yet reached their tenure</strong> which resulted to a negative gain.\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t</Modal.Body>\r\n\t\t\t\t</Modal>\r\n\t\t\t\t<Modal show={this.state.showPinReportHelp} onHide={(e) => { this.setState({\"showPinReportHelp\": false}) }}>\r\n\t\t\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t\t\t<Modal.Title>Pin Report</Modal.Title>\r\n\t\t\t\t\t</Modal.Header>\r\n\t\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\tThis feature allows you to take a snapshot of the calculated values in the dashboard based on the selected filters.\r\n\t\t\t\t\t\t\tThis is useful if you want to perform an analysis by comparing the performance of your investments from different dates,\r\n\t\t\t\t\t\t\trepayment methods, and/or issuers.\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t<strong>Note that snapshots does not update. If changes were made on investments, the snapshot will\r\n\t\t\t\t\t\t\tnot reflect those changes.</strong>\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t</Modal.Body>\r\n\t\t\t\t</Modal>\t\t\t\t\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default DashboardContainer;\r\n","import React from \"react\";\r\nimport { Alert, Row, Col, Button } from \"react-bootstrap\";\r\n\r\n// For programmer credits\r\nclass AboutContainer extends React.Component {\r\n\r\n    // Open my BMC page\r\n    buyMeACoffee() {\r\n        var link = document.createElement(\"a\");\r\n        link.href = \"https://www.buymeacoffee.com/it2051229\";\r\n        link.target = \"_blank\";\r\n        link.click();\r\n    }\r\n\r\n    // Display info\r\n\trender() {\r\n\t\treturn (\r\n            <>\r\n                <Row>\r\n                    <Col md=\"6\">\r\n                        <h4>Are you related to SeedIn?</h4>\r\n                        <p>\r\n                            No, just like you we are fellow investors in SeedIn.\r\n                        </p>\r\n                        <h4>Why build this application?</h4>\r\n                        <p>\r\n                            For some, SeedIn's dashboard makes it difficult to keep track and sort investments. \r\n                            Some opted to create their own excel sheets, some used calendar apps, some used \r\n                            their own custom database, and some used reminder apps to keep track of their \r\n                            investments. Each and everyone of us have questions with regards to our investments \r\n                            which SeedIn's dashboard cannot directly answer. We decided to create our \r\n                            personalized way of tracking investment to make things easier and clearer \r\n                            for us. After all, we all need to do due diligence and be in sync with what's \r\n                            going on with our funds.\r\n                        </p>\r\n                        <p>\r\n                            We made it public and share with other SeedIn investors just in case it would be \r\n                            something useful to them.\r\n                        </p>\r\n                        <h4>Do you keep my data?</h4>\r\n                        <p>\r\n                            No, all your data are private and locally stored on this web browser. We do not keep your \r\n                            data in our servers. You cannot access your data from another computer or web browser.\r\n                        </p>\r\n                        <h4>Can I keep my data?</h4>\r\n                        <p>\r\n                            Yes, you can export your data. It will be extracted from your computer and downloaded as a file. \r\n                            You can then import the file through using this app from another web browser.\r\n                        </p>\r\n                    </Col>\r\n                    <Col md=\"6\">\r\n                        <h4>What else do I need to know before using this app?</h4>\r\n                        <p>\r\n                            This project is a work in progress but you're using a stable version. \r\n                            There might be changes and improvements anytime so you should use it at your own risk. \r\n                            We recommend to backup your data frequently.\r\n                        </p>\r\n                        <p>\r\n                            We're gradually adding features and fixing things so check our change logs from time to time so you can download\r\n                            the latest stable version:\r\n                        </p>                    \r\n                        <Alert variant=\"dark\">\r\n                            <Alert.Link href=\"https://it2051229.github.io/seedin/download.html\" target=\"_blank\" rel=\"noopener noreferrer\">https://it2051229.github.io/ seedin/download.html</Alert.Link>\r\n                        </Alert>    \r\n                        <p>\r\n                            If you found any issues feel free to shoot \r\n                            us a message at <a href=\"mailto:contact@it2051229.com\">contact@it2051229.com</a>.\r\n                        </p>\r\n                        <p>\r\n                            <center><Button variant=\"primary\" onClick={(e) => this.buyMeACoffee()}>Buy me a coffee!</Button></center>\r\n                        </p>\r\n                    </Col>\r\n                </Row>\r\n            </>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default AboutContainer;\r\n","import React from \"react\";\nimport { Navbar, Nav, Container } from \"react-bootstrap\";\nimport disableBrowserBackButton from \"disable-browser-back-navigation\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport InvestmentsContainer from \"./Components/InvestmentsContainer\";\nimport MyDataContainer from \"./Components/MyDataContainer\";\nimport DashboardContainer from \"./Components/DashboardContainer\";\nimport AboutContainer from \"./Components/AboutContainer\";\n\n// Entry class of the program\nclass App extends React.Component {\n\n\t// Initialize the main container\n\tconstructor(props) {\n\t\tsuper(props);\n\t\t\n\t\t// The dashboard is the starting container\n\t\tthis.state = { \n\t\t\t\"activeMenuName\": \"Dashboard\",\n\t\t\t\"version\": { \"major\": 1, \"minor\": 2, \"patch\": 13 }\n\t\t};\n\t}\n\n\t// Switch to another container\n\thandleMenuClick(newActiveMenuName) {\n\t\twindow.scrollTo(0, 0);\n\t\tlocalStorage.setItem(\"investmentsTable.scrollY\", 0);\n\t\tthis.setState({ \"activeMenuName\": newActiveMenuName });\n\t}\n\n\t// Disable the back button of the browser\n\tcomponentDidMount() {\n\t\tdisableBrowserBackButton();\n\t}\n\n\t// Entry point of the program\n\trender() {\n\t\t// Our containers and its mapping\n\t\tconst menuNames = [ \"Dashboard\", \"Investments\", \"My Data\", \"About\" ];\n\t\tconst menuContainers = [ <DashboardContainer />, <InvestmentsContainer />, <MyDataContainer appVersion={this.state.version} />, <AboutContainer /> ]\n\t\t\n\t\t// Put the nav links in a list, also show an active state on the selected menu\n\t\tconst menuNavLinks = menuNames.map((menuName) => {\n\t\t\tif(menuName === this.state.activeMenuName)\n\t\t\t\treturn <Nav.Link eventKey={menuName} key={menuName} active onClick={(e) => this.handleMenuClick(menuName)}>{menuName}</Nav.Link>\n\t\t\t\n\t\t\treturn <Nav.Link eventKey={menuName} key={menuName} onClick={(e) => this.handleMenuClick(menuName)}>{menuName}</Nav.Link>\n\t\t});\n\n\t\t// Find the active menu and the appropriate container to display\n\t\tlet activeMenuContainer = menuContainers[menuNames.indexOf(this.state.activeMenuName)];\t\n\t\t\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<Navbar collapseOnSelect bg=\"dark\" variant=\"dark\" expand=\"md\" fixed=\"top\">\n\t\t\t\t<Navbar.Brand href=\"#home\"><strong>SeedIn Portfolio</strong><sup>{this.state.version.major}.{this.state.version.minor}.{this.state.version.patch}</sup></Navbar.Brand>\n\t\t\t\t\t<Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n\t\t\t\t\t<Navbar.Collapse id=\"basic-navbar-nav\">\n\t\t\t\t\t\t<Nav className=\"mr-auto\">\n\t\t\t\t\t\t\t{ menuNavLinks }\n\t\t\t\t\t\t</Nav>\n\t\t\t\t\t</Navbar.Collapse>\n\t\t\t\t</Navbar>\n\t\t\t\t<Container fluid>\n\t\t\t\t\t{activeMenuContainer}\t\t\t\t\n\t\t\t\t</Container>\n\t\t\t</>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}