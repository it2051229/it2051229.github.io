{"version":3,"sources":["Components/NavigationBarComponent.js","Entities/MyDate.js","Entities/Investment.js","Entities/Database.js","Entities/NumberUtils.js","Components/DashboardComponent.js","Components/InvestmentsComponent.js","Components/InvestmentComponent.js","Components/MyDataComponent.js","Components/AboutComponent.js","App.js","reportWebVitals.js","index.js"],"names":["NavigationBarComponent","props","menuNavLinks","map","menu","activeMenuName","Nav","Link","href","active","eventKey","Navbar","collapseOnSelect","bg","variant","expand","fixed","Brand","Toggle","aria-controls","Collapse","id","className","React","Component","MyDate","year","month","day","this","properties","isNaN","Error","daysEachMonth","isLeapYear","other","otherDate","compareTo","daysBetween","currentDay","currentMonth","currentYear","daysPassed","jsDate","Date","getFullYear","getMonth","getDate","date","strDate","tokens","split","length","i","parseInt","daysInMonths","json","Investment","amount","interestRate","firstPayDate","repaymentMethod","tenure","status","toJson","calculateTenureInterestRate","monthlyInterestRate","currentDate","now","schedules","generateRepaymentSchedule","result","monthlyNetInterestPayoutAmount","calculateMonthlyNetInterestPayoutAmount","monthlyCapitalAmount","calculateMonthlyCapitalPayoutAmount","copy","netPayout","schedule","push","addMonth","projectId","validationResult","toMyDate","jsonToObject","investments","filter","investment","Database","databaseName","localStorage","setItem","JSON","stringify","console","log","investmentsJson","parse","getItem","toImportJson","tempInvestments","err","persist","investmentsList","NumberUtils","x","toFixed","toString","replace","DashboardComponent","database","getInvestments","state","numMaturedToday","numOnHold","onHoldAmount","numPayoutsToday","totalPayoutsToday","amountInvested","completedNetEarnings","netEarnings","projectedNetAmount","completedNetPayoutAmount","completedProjects","gainPercent","numOngoingProjects","netInterestRateStats","tenureStats","netInterestRateAfterTenureStats","interestRateDistribution","tenureDistribution","interestRateTenureDistribution","filteredInvestments","filterInvestmentsByRepaymentMethod","sort","investmentA","investmentB","totalNetInterestRate","totalTenure","frequency","interestRateByTenure","netInterestRate","j","maturedProjectsNotification","Alert","onHoldProjectsNotification","formatCurrency","payoutsTodayNotification","Container","fluid","Row","Col","md","Form","Group","Text","Control","as","custom","value","onChange","e","setState","target","Label","ProgressBar","max","InputGroup","FormControl","readOnly","Append","Button","onClick","style","padding","margin","Prepend","Modal","show","showInterestRateDistribution","onHide","Header","closeButton","Title","Body","Table","responsive","striped","bordered","hover","Object","keys","showTenureDistribution","a","b","showInterestRateByTenureDistribution","localeCompare","interestAtTenure","InvestmentsComponent","window","investmentsTableRows","sortedBy","dateA","calculateNextPayDate","dateB","calculateMaturityDate","sortOrder","reverse","payDateDetails","calculateNextPayAndMaturityDate","location","calculateNetGainAmount","InvestmentComponent","match","params","findInvestment","validateProjectId","alert","formMode","validateInvestedAmount","investedAmount","validateNetInterestRate","validateDate","validateTenure","parseFloat","createInvestmentObject","addInvestment","confirm","deleteInvestment","controls","formTitle","projectIdInputControl","handleDeleteClick","handleCalculateClick","handleUpdateClick","type","handleAddClick","placeholder","firstDateOfPaymentInputControl","netGainRate","netGainAmount","netTotalPayoutAmount","paymentSchedules","onHoldNotice","step","textAlign","MyDataComponent","downloadLink","document","createElement","download","encodeURIComponent","exportAsJson","click","file","fileReader","FileReader","onload","importJson","readAsText","clear","handleExportClick","File","label","handleImportClick","files","handleResetClick","AboutComponent","link","rel","buyMeACoffee","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f43e0ecf.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Navbar, Nav } from \"react-bootstrap\";\r\n\r\n// A consistent header for all \r\nclass NavigationBarComponent extends React.Component {\r\n\r\n\t// Initialize the header\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t}\r\n\r\n\t// Display the header\r\n\trender() {\r\n\t\tconst menus = [ \r\n\t\t\t{\"name\": \"Dashboard\", \"link\": \"#dashboard\"},\r\n\t\t\t{\"name\": \"Investments\", \"link\": \"#investments\"},\r\n\t\t\t{\"name\": \"My Data\", \"link\": \"#mydata\"},\r\n\t\t\t{\"name\": \"About\", \"link\": \"#about\"} \r\n\t\t];\r\n\r\n\t\t// Put the nav links in a list, also show an active state on the selected menu\r\n\t\tconst menuNavLinks = menus.map((menu) => {\r\n\t\t\tif(menu[\"name\"] === this.props.activeMenuName)\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<Nav.Link href={menu[\"link\"]} active eventKey={menu[\"name\"]} key={menu[\"name\"]}>\r\n\t\t\t\t\t\t{menu[\"name\"]}\r\n\t\t\t\t\t</Nav.Link>\r\n\t\t\t\t);\r\n\t\t\t\r\n\t\t\treturn (\r\n\t\t\t\t<Nav.Link href={menu[\"link\"]} eventKey={menu[\"name\"]} key={menu[\"name\"]}>\r\n\t\t\t\t\t{menu[\"name\"]}\r\n\t\t\t\t</Nav.Link>\r\n\t\t\t);\r\n\t\t});\r\n\r\n\t\treturn (\r\n\t\t\t<Navbar collapseOnSelect bg=\"dark\" variant=\"dark\" expand=\"md\" fixed=\"top\">\r\n\t\t\t\t<Navbar.Brand href=\"/\"><strong>Flint Portfolio</strong><sup>0.1.0</sup></Navbar.Brand>\r\n\t\t\t\t<Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n\t\t\t\t<Navbar.Collapse id=\"basic-navbar-nav\">\r\n\t\t\t\t\t<Nav className=\"mr-auto\">\r\n\t\t\t\t\t\t{ menuNavLinks }\r\n\t\t\t\t\t</Nav>\r\n\t\t\t\t</Navbar.Collapse>\r\n\t\t\t</Navbar>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default NavigationBarComponent;\r\n","// Date library\r\nclass MyDate {\r\n\r\n    // Create a date\r\n    constructor(year, month, day) {\r\n        this.properties = {\r\n            \"year\": year,\r\n            \"month\": month,\r\n            \"day\": day\r\n        };    \r\n\r\n        // Validate the date\r\n        if(isNaN(year) || isNaN(month) || isNaN(day))\r\n            throw new Error(\"Year, month, and/or day should be a number.\");\r\n        \r\n        // Validate the year\r\n        if(year < 1900)\r\n            throw new Error(\"Year cannot go below 1900.\");\r\n\r\n        // Validate the month\r\n        if(month < 1 || month > 12)\r\n            throw new Error(\"Month should be 1 to 12\");\r\n\r\n        // Validate the day\r\n        var daysEachMonth = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\n\r\n        if(MyDate.isLeapYear(year))\r\n            daysEachMonth[1] = 29;\r\n\r\n        if(day < 1 || day > daysEachMonth[month - 1])\r\n            throw new Error(\"Invalid day in month range.\");\r\n    }\r\n\r\n    // Compare if this date goes before, equal or after the other date\r\n    compareTo(other) {\r\n        if(this.properties[\"year\"] > other.properties[\"year\"])\r\n            return 1;\r\n        \r\n        if(this.properties[\"year\"] < other.properties[\"year\"])\r\n            return -1;\r\n\r\n        if(this.properties[\"month\"] > other.properties[\"month\"])\r\n            return 1;\r\n        \r\n        if(this.properties[\"month\"] < other.properties[\"month\"])\r\n            return -1;\r\n\r\n        if(this.properties[\"day\"] > other.properties[\"day\"])\r\n            return 1;\r\n\r\n        if(this.properties[\"day\"] < other.properties[\"day\"])\r\n            return -1;\r\n\r\n        return 0;\r\n    }\r\n\r\n    // Return the date as yyyy-mm-dd format\r\n    toString() {\r\n        var month = this.properties[\"month\"];\r\n        var day = this.properties[\"day\"];\r\n\r\n        if(month < 10)\r\n            month = \"0\" + month;\r\n\r\n        if(day < 10)\r\n            day = \"0\" + day;\r\n\r\n        return this.properties[\"year\"] + \"-\" \r\n            + month + \"-\" \r\n            + day;\r\n    }\r\n\r\n    // Calculate how many days between this date and the other date\r\n    daysBetween(otherDate) {\r\n        if(this.compareTo(otherDate) > 0)\r\n            return otherDate.daysBetween(this);\r\n\r\n        var daysEachMonth = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\n\r\n        var currentDay = this.properties[\"day\"];\r\n        var currentMonth = this.properties[\"month\"];\r\n        var currentYear = this.properties[\"year\"];\r\n        var daysPassed = 0;\r\n\r\n        // Update month for february if leap year\r\n        if(MyDate.isLeapYear(currentYear))\r\n            daysEachMonth[1] = 29;\r\n\r\n        while(currentYear !== otherDate.properties[\"year\"]\r\n                || currentMonth !== otherDate.properties[\"month\"]\r\n                || currentDay !== otherDate.properties[\"day\"]) {\r\n            currentDay++;\r\n            daysPassed++;\r\n\r\n            if(currentDay > daysEachMonth[currentMonth - 1]) {\r\n                // Move to the next month\r\n                currentDay = 1;\r\n                currentMonth++;\r\n\r\n                if(currentMonth > 12) {\r\n                    // Move to the next year\r\n                    currentMonth = 1;\r\n                    currentYear++;\r\n\r\n                    // Check if leap year, update the month for february\r\n                    if(MyDate.isLeapYear(currentYear))\r\n                        daysEachMonth[1] = 29;\r\n                    else\r\n                        daysEachMonth[1] = 28;\r\n                }\r\n            }\r\n        }\r\n\r\n        return daysPassed;\r\n    }\r\n\r\n    // Get the date before a month\r\n    subtractMonth() {\r\n        var year = this.properties[\"year\"];\r\n        var month = this.properties[\"month\"] - 1;\r\n        var day = this.properties[\"day\"];\r\n\r\n        if(month < 1) {\r\n            month = 12;\r\n            year--;\r\n        }\r\n\r\n        return new MyDate(year, month, day);\r\n    }\r\n\r\n    // Add a month, this is special. Each month consists of different\r\n    // days but SeedIn never releases payments that ends in days where\r\n    // it is 31 and it is 29\r\n    addMonth() {\r\n        // Set the days for each month    \r\n        var year = this.properties[\"year\"];\r\n        var month = this.properties[\"month\"] + 1;\r\n        var day = this.properties[\"day\"];\r\n\r\n        if(month > 12) {\r\n            year++;\r\n            month = 1;\r\n        }\r\n\r\n        return new MyDate(year, month, day);\r\n    }\r\n\r\n    // Return the proeprties of the date as a JSON\r\n    toJson() {\r\n        return {\r\n            \"year\": this.properties[\"year\"],\r\n            \"month\": this.properties[\"month\"],\r\n            \"day\": this.properties[\"day\"]\r\n        }\r\n    }\r\n\r\n    // Get the date now\r\n    static now() {\r\n        var jsDate = new Date();\r\n        return new MyDate(jsDate.getFullYear(), jsDate.getMonth() + 1, jsDate.getDate());\r\n    }\r\n\r\n    // Create a copy of the date as a new object\r\n    static copy(date) {\r\n        return new MyDate(date.properties[\"year\"], date.properties[\"month\"], date.properties[\"day\"]);\r\n    }\r\n\r\n    // Attempt to create a date object out of the string date\r\n    // Expects that the date is in yyyy-mm-dd format\r\n    // Returns null if the date is invalid\r\n    static toMyDate(strDate) {\r\n        // Validate the format\r\n        this.tokens = strDate.split(\"-\");\r\n\r\n        if(this.tokens.length !== 3)\r\n            return null;\r\n\r\n        // Check that everything else is a number\r\n        for(var i = 0; i < this.tokens.length; i++)\r\n            if(isNaN(this.tokens[i]))\r\n                return null;\r\n\r\n        var year = parseInt(this.tokens[0]);\r\n        var month = parseInt(this.tokens[1]);\r\n        var day = parseInt(this.tokens[2]);\r\n\r\n        // Validate the year\r\n        if(year < 1900 || isNaN(year) || isNaN(month) || isNaN(day))\r\n            return null;\r\n\r\n        // Validate the month, should be 1 to 12\r\n        if(month < 1 || month > 12)\r\n            return null;\r\n\r\n        // Validate the day, it should be within the month's day\r\n        var daysInMonths = [31,28,31,30,31,30,31,31,30,31,30,31];\r\n\r\n        // February is 29 days during leap year\r\n        if((year % 100 === 0) ? (year % 400 === 0) : (year % 4 === 0))\r\n            daysInMonths[1] = 29;\r\n\r\n        if(day < 1 || day > daysInMonths[month - 1])\r\n            return null;\r\n        \r\n        // We're good\r\n        return new MyDate(year, month, day);\r\n    }\r\n\r\n    // Convert the JSON to a date object\r\n    static jsonToObject(json) {\r\n        return new MyDate(\r\n            json[\"year\"],\r\n            json[\"month\"],\r\n            json[\"day\"]\r\n        );\r\n    }\r\n\r\n    // Utility function to check if leap year\r\n    static isLeapYear(year) {\r\n        return year % 100 === 0 ? year % 400 === 0 : year % 4 === 0;\r\n    }\r\n}\r\n\r\nexport default MyDate;\r\n","import MyDate from \"./MyDate\"\r\n\r\nclass Investment {\r\n\r\n    // Create a new investment object\r\n    constructor(id, amount, interestRate, firstPayDate, repaymentMethod, tenure, status) {\r\n        this.properties = {\r\n            \"projectId\": id,\r\n            \"investmentAmount\": amount,\r\n            \"netInterestRate\": interestRate,\r\n            \"date\": firstPayDate, \r\n            \"repaymentMethod\": repaymentMethod,\r\n            \"tenure\": tenure,\r\n            \"status\": status\r\n        };\r\n    }\r\n\r\n    // Return the proeprties of the date as a JSON\r\n    toJson() {\r\n        return {\r\n            \"projectId\": this.properties[\"projectId\"],\r\n            \"investmentAmount\": this.properties[\"investmentAmount\"],\r\n            \"netInterestRate\": this.properties[\"netInterestRate\"],\r\n            \"date\": this.properties[\"date\"].toJson(),\r\n            \"repaymentMethod\": this.properties[\"repaymentMethod\"],\r\n            \"tenure\": this.properties[\"tenure\"],\r\n            \"status\": this.properties[\"status\"]\r\n        };\r\n    }\r\n\r\n    // Calculate the interest rate within the tenure only\r\n    calculateTenureInterestRate() {\r\n        var netInterestRate = this.properties[\"netInterestRate\"];\r\n        var tenureInterestRate = (netInterestRate / 12.0) * this.properties[\"tenure\"];\r\n        return tenureInterestRate;\r\n    }\r\n\r\n    // Calculate the gain amount within the tenure\r\n    calculateNetGainAmount() {\r\n        var netGainAmount = this.calculateTenureInterestRate() * this.properties[\"investmentAmount\"];\r\n        return netGainAmount;\r\n    }\r\n\r\n    // How much is the interest payout per month\r\n    calculateMonthlyNetInterestPayoutAmount() {\r\n        var monthlyInterestRate = this.properties[\"netInterestRate\"] / 12;\r\n        return this.properties[\"investmentAmount\"] * monthlyInterestRate;\r\n    }\r\n\r\n    // How much of the capital is returned per month\r\n    calculateMonthlyCapitalPayoutAmount() {\r\n        if(this.properties[\"repaymentMethod\"] === \"Equal\")\r\n            return this.properties[\"investmentAmount\"] / this.properties[\"tenure\"];\r\n        \r\n        return 0;\r\n    }\r\n\r\n    // Return the next paydate\r\n    // Function is separated to save power\r\n    calculateNextPayDate() {\r\n        var currentDate = MyDate.now();\r\n        var schedules = this.generateRepaymentSchedule();\r\n\r\n        if(currentDate.compareTo(schedules[schedules.length - 1][\"date\"]) > 0)\r\n            return null;\r\n        \r\n        // Find the month\r\n        for(var i = 0; i < schedules.length; i++)\r\n            if(currentDate.compareTo(schedules[i][\"date\"]) <= 0)\r\n                return schedules[i][\"date\"];\r\n\r\n        return null;\r\n    }\r\n\r\n    // Return the maturity date\r\n    // Function is separated to save power\r\n    calculateMaturityDate() {\r\n        var schedules = this.generateRepaymentSchedule();\r\n        return schedules[schedules.length - 1][\"date\"];\r\n    }\r\n\r\n    // Calculate the next payout date, how much, and when it will mature\r\n    calculateNextPayAndMaturityDate() {        \r\n        if(this.properties[\"status\"] === \"On Hold\") {\r\n            return {\r\n                \"maturityDate\": \"On Hold\",\r\n                \"nextPayDate\": \"On Hold\",\r\n                \"nextPayAmount\": 0\r\n            }            \r\n        }\r\n\r\n        var currentDate = MyDate.now();\r\n        var schedules = this.generateRepaymentSchedule();\r\n\r\n        var result = {\r\n            \"maturityDate\": schedules[schedules.length - 1][\"date\"],\r\n            \"nextPayDate\": \"Completed\",\r\n            \"nextPayAmount\": 0\r\n        };\r\n\r\n        if(currentDate.compareTo(schedules[schedules.length - 1][\"date\"]) <= 0) {\r\n            // Find the month and amount\r\n            for(var i = 0; i < schedules.length; i++) {\r\n                if(currentDate.compareTo(schedules[i][\"date\"]) <= 0) {\r\n                    // Found it\r\n                    result[\"nextPayDate\"] = schedules[i][\"date\"];\r\n                    result[\"nextPayAmount\"] = schedules[i][\"netPayout\"];\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        \r\n        return result;\r\n    }\r\n\r\n    // Generate the repayment schedule based on repayment method\r\n    generateRepaymentSchedule() {\r\n        var schedules = [];\r\n        var monthlyNetInterestPayoutAmount = this.calculateMonthlyNetInterestPayoutAmount();\r\n        var monthlyCapitalAmount = this.calculateMonthlyCapitalPayoutAmount();\r\n        var currentDate = MyDate.copy(this.properties[\"date\"]);\r\n\r\n        if(this.properties[\"status\"] === \"On Hold\")\r\n            currentDate.properties[\"day\"] = 1;\r\n\r\n        for(var i = 0; i < this.properties[\"tenure\"]; i++) {\r\n            var netPayout =  monthlyNetInterestPayoutAmount + monthlyCapitalAmount;\r\n            \r\n            // Balloon will have all the capital amount on the last month\r\n            if(i + 1 === this.properties[\"tenure\"] && this.properties[\"repaymentMethod\"] === \"Balloon\")                \r\n                netPayout += this.properties[\"investmentAmount\"];\r\n            \r\n            var schedule = {\r\n                \"date\": currentDate,\r\n                \"netInterestPayout\": monthlyNetInterestPayoutAmount,\r\n                \"netPayout\": netPayout\r\n            }\r\n\r\n            schedules.push(schedule);\r\n            currentDate = currentDate.addMonth();\r\n        }\r\n\r\n        return schedules;\r\n    }\r\n\r\n    // Project ID is valid if it is not empty and it is unique\r\n    static validateProjectId(projectId) {\r\n        this.validationResult = { \"status\": true };\r\n\r\n        if(projectId === \"\") {\r\n            this.validationResult[\"status\"] = false;\r\n            this.validationResult[\"message\"] = \"Project ID is required.\";\r\n        }\r\n\r\n        return this.validationResult;\r\n    }\r\n\r\n    // Amount should be a numeric value greater than 0\r\n    static validateInvestedAmount(amount) {\r\n        this.validationResult = { \"status\": true };\r\n\r\n        if(amount === \"\") {\r\n            this.validationResult[\"status\"] = false;\r\n            this.validationResult[\"message\"] = \"Invested amount is required.\";\r\n        } else if(isNaN(amount)) {\r\n            this.validationResult[\"status\"] = false;\r\n            this.validationResult[\"message\"] = \"Amount should be a numeric value.\";\r\n        } else if(amount <= 0) {\r\n            this.validationResult[\"status\"] = false;\r\n            this.validationResult[\"message\"] = \"Amount should be a non-zero positive value.\";\r\n        }\r\n\r\n        return this.validationResult;\r\n    }\r\n\r\n    // Interest rate should be numeric and at least 1%\r\n    static validateNetInterestRate(interestRate) {\r\n        this.validationResult = { \"status\": true };\r\n\r\n        if(interestRate === \"\") {\r\n            this.validationResult[\"status\"] = false;\r\n            this.validationResult[\"message\"] = \"Net interest rate amount is required.\";\r\n        } else if(isNaN(interestRate)) {\r\n            this.validationResult[\"status\"] = false;\r\n            this.validationResult[\"message\"] = \"Net interest rate should be a numeric value.\";\r\n        } else if(interestRate < 1) {\r\n            this.validationResult[\"status\"] = false;\r\n            this.validationResult[\"message\"] = \"Net interest rate should at least be 1%.\";\r\n        }\r\n\r\n        return this.validationResult;\r\n    }\r\n\r\n    // Check that the date is in the format yyyy-mm-dd\r\n    static validateDate(date) {\r\n        date = MyDate.toMyDate(date);\r\n        this.validationResult = { \"status\": true };\r\n\r\n        if(date === null) {\r\n            this.validationResult[\"status\"] = false;\r\n            this.validationResult[\"message\"] = \"Invalid date.\";\r\n        }\r\n\r\n        return this.validationResult;\r\n    }\r\n\r\n    // Check that tenure is at least 1 month\r\n    static validateTenure(tenure) {\r\n        this.validationResult = { \"status\": true };\r\n\r\n        if(tenure === \"\") {\r\n            this.validationResult[\"status\"] = false;\r\n            this.validationResult[\"message\"] = \"Tenure is required.\";\r\n        } else if(isNaN(tenure)) {\r\n            this.validationResult[\"status\"] = false;\r\n            this.validationResult[\"message\"] = \"Tenure should be a numeric value.\";\r\n        } else if(tenure < 1) {\r\n            this.validationResult[\"status\"] = false;\r\n            this.validationResult[\"message\"] = \"Tenure should be at least 1 month.\";\r\n        }\r\n\r\n        return this.validationResult;\r\n    }\r\n\r\n    // Convert the Json as an investment object\r\n    static jsonToObject(json) {        \r\n        var investment = new Investment(\r\n            json[\"projectId\"],\r\n            json[\"investmentAmount\"],\r\n            json[\"netInterestRate\"],\r\n            MyDate.jsonToObject(json[\"date\"]),\r\n            json[\"repaymentMethod\"],\r\n            json[\"tenure\"],\r\n            json[\"status\"]\r\n        );\r\n\t\t\r\n        return investment;\r\n    }\r\n\r\n    // Return all investment that matches the repayment method\r\n    static filterInvestmentsByRepaymentMethod(investments, repaymentMethod) {\r\n        return investments.filter(function(investment) {\r\n            return repaymentMethod === \"All\" \r\n                || repaymentMethod === investment.properties[\"repaymentMethod\"];\r\n        });\r\n    }\r\n}\r\n\r\nexport default Investment;\r\n","import Investment from \"./Investment\";\r\n\r\n// Our database just uses the local storage\r\nclass Database\r\n{\r\n    // Initialize the data\r\n    constructor() {\r\n\t\tthis.databaseName = \"flint\";\r\n\t\t\r\n        if(!(this.databaseName in localStorage)) {\r\n            localStorage.setItem(this.databaseName, JSON.stringify({}));\r\n            console.log(\"New investments storage created.\");\r\n        }\r\n\r\n        // Parse back the investments as an investment object\r\n        var investmentsJson = JSON.parse(localStorage.getItem(this.databaseName));\r\n\r\n        this.investments = {};\r\n\r\n        for(var i = 0; i < investmentsJson.length; i++) {\r\n            var investment = Investment.jsonToObject(investmentsJson[i])\r\n            this.investments[investment.properties[\"projectId\"]] = investment;\r\n        }\r\n    }\r\n\r\n    // Export it as json\r\n    exportAsJson() {\r\n        var investmentsJson = [];\r\n\r\n        // Serialize everything as a json object\r\n        for(var projectId in this.investments)\r\n            investmentsJson.push(this.investments[projectId].toJson());\r\n\r\n        // Write to the storage\r\n        localStorage.setItem(this.databaseName, JSON.stringify(investmentsJson));\r\n        \r\n        return { \r\n            \"investments\": investmentsJson,\r\n        };\r\n    }\r\n\r\n    // Convert the JSON to investment objects\r\n    importJson(toImportJson) {        \r\n        if(!(\"investments\" in toImportJson))\r\n            return false;\r\n\r\n        // Look for the investments key, put it as investment objects\r\n        var tempInvestments = {};\r\n        var investmentsJson = toImportJson[\"investments\"];\r\n\r\n        for(var i = 0; i < investmentsJson.length; i++) {\r\n            try {\r\n                var investment = Investment.jsonToObject(investmentsJson[i]);\r\n                tempInvestments[investment.properties[\"projectId\"]] = investment;\r\n            } catch(err) {\r\n                console.log(err);\r\n                return false;\r\n            }\r\n        }\r\n\r\n        this.investments = tempInvestments;\r\n        this.persist();\r\n        return true;\r\n    }\r\n\r\n    // Find the investment that holds the given ID, return null if none\r\n    findInvestment(projectId) {\r\n        if(!(projectId in this.investments))\r\n            return null;\r\n\r\n        return this.investments[projectId];\r\n    }\r\n\r\n    // Delete an investment\r\n    deleteInvestment(projectId) {\r\n        delete this.investments[projectId];\r\n        this.persist();\r\n    }\r\n\r\n    // Add a new investment, assumes that the investment has been well validated\r\n    addInvestment(investment) {\r\n        this.investments[investment.properties[\"projectId\"]] = investment;        \r\n        this.persist();\r\n    }\r\n\r\n    // Return the investments as a list\r\n    getInvestments() {\r\n        var investmentsList = [];\r\n\r\n        for(var projectId in this.investments)\r\n            investmentsList.push(this.investments[projectId]);\r\n\r\n        return investmentsList;\r\n    }\r\n\r\n    // Write the investments to the local storage\r\n    persist() {        \r\n        var investmentsJson = [];\r\n\r\n        // Serialize everything as a json object\r\n        for(var projectId in this.investments)\r\n            investmentsJson.push(this.investments[projectId].toJson());\r\n\r\n        // Write to the storage\r\n        localStorage.setItem(this.databaseName, JSON.stringify(investmentsJson));\r\n    }\r\n\r\n    // Delete everything from the database\r\n    clear() {\r\n        this.investments = {};\r\n        this.persist();\r\n    }\r\n}\r\n\r\nexport default Database;\r\n","class NumberUtils {\r\n    // Convery a numer with commas and a peso sign\r\n    static formatCurrency(x) {\r\n        return \"₱\" + x.toFixed(2).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n    }\r\n}\r\n\r\nexport default NumberUtils;\r\n","import React from \"react\";\r\nimport { Container, Form, ProgressBar, FormControl, Row, Col, InputGroup, Alert, Modal, Button, Table } from \"react-bootstrap\";\r\n\r\nimport NavigationBarComponent from \"./NavigationBarComponent\";\r\n\r\nimport Database from \"../Entities/Database\";\r\nimport NumberUtils from \"../Entities/NumberUtils\";\r\nimport MyDate from \"../Entities/MyDate\";\r\nimport Investment from \"../Entities/Investment\";\r\n\r\nclass DashboardComponent extends React.Component {\r\n\r\n\t// Initialize the default stats\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.database = new Database();\t\t\t\t\r\n\t\tthis.investments = this.database.getInvestments();\r\n\r\n\t\tthis.state = {\r\n\t\t\t\"repaymentMethod\": \"All\",\r\n\t\t\t\"issuer\": \"All\",\r\n\t\t\t\"showInterestRateDistribution\": false,\r\n\t\t\t\"showTenureDistribution\": false,\r\n\t\t\t\"showInterestRateByTenureDistribution\": false\r\n\t\t};\r\n\t}\r\n\r\n\t// Display dashboard\r\n\trender() {\r\n\t\t// Dashboard numbers\r\n\t\tvar currentDate = MyDate.now();\r\n\t\tvar numMaturedToday = 0;\r\n\t\tvar numOnHold = 0;\r\n\t\tvar onHoldAmount = 0;\r\n\r\n\t\tvar numPayoutsToday = 0;\r\n\t\tvar totalPayoutsToday = 0;\r\n\r\n\t\tthis.amountInvested = 0;\r\n\t\tthis.completedNetEarnings = 0;\r\n\t\tthis.netEarnings = 0;\r\n\t\tthis.projectedNetAmount = 0;\r\n\t\tthis.completedNetPayoutAmount = 0;\r\n\t\tthis.completedProjects = 0;\r\n\t\tthis.gainPercent = 0;\r\n\t\tthis.numOngoingProjects = 0;\r\n\r\n\t\tthis.netInterestRateStats = { \"avg\": 0, \"low\": 0, \"high\": 0};\r\n\t\tthis.tenureStats = { \"avg\": 0, \"low\": 0, \"high\": 0 };\r\n\t\tthis.netInterestRateAfterTenureStats = { \"avg\": 0, \"low\": 0, \"high\": 0 };\r\n\r\n\t\tthis.interestRateDistribution = {};\r\n\t\tthis.tenureDistribution = {};\r\n\t\tthis.interestRateTenureDistribution = {};\r\n\r\n\t\tvar filteredInvestments = Investment.filterInvestmentsByRepaymentMethod(this.investments, this.state.repaymentMethod);\r\n\t\tconsole.log(filteredInvestments);\r\n\t\t\r\n\t\t// Sort the investments by project ID, the project ID is the date and that's how we can compute the idle days\r\n\t\tif(filteredInvestments.length > 0) {\r\n\t\t\tfilteredInvestments.sort((investmentA, investmentB) => {\r\n\t\t\t\treturn investmentA.properties[\"projectId\"] - investmentB.properties[\"projectId\"];\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tvar totalNetInterestRate = 0;\t\r\n\t\tvar totalTenure = 0;\r\n\r\n\t\tfor(var i = 0; i < filteredInvestments.length; i++) {\r\n\t\t\tvar investment = filteredInvestments[i];\r\n\r\n\t\t\tif(investment.properties[\"status\"] === \"On Hold\") {\r\n\t\t\t\tnumOnHold++;\r\n\t\t\t\tonHoldAmount += investment.properties[\"investmentAmount\"];\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\t// Update the distribution of interest rates\r\n\t\t\tif(!(investment.properties[\"netInterestRate\"] in this.interestRateDistribution)) {\r\n\t\t\t\tthis.interestRateDistribution[investment.properties[\"netInterestRate\"]] = { \r\n\t\t\t\t\t\"netInterestRate\":  investment.properties[\"netInterestRate\"],\r\n\t\t\t\t\t\"frequency\": 0\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\tthis.interestRateDistribution[investment.properties[\"netInterestRate\"]].frequency++;\r\n\r\n\t\t\t// Update the distribution of tenure\r\n\t\t\tif(!(investment.properties[\"tenure\"] in this.tenureDistribution)) {\r\n\t\t\t\tthis.tenureDistribution[investment.properties[\"tenure\"]] = 1;\r\n\t\t\t} else {\r\n\t\t\t\tthis.tenureDistribution[investment.properties[\"tenure\"]]++;\r\n\t\t\t}\r\n\r\n\t\t\t// Update the distribution of interest rate and tenure\r\n\t\t\tvar interestRateByTenure = (investment.properties[\"netInterestRate\"] * 100).toFixed(2) + \"% @ \" + investment.properties[\"tenure\"] + \" month(s)\";\r\n\r\n\t\t\tif(!(interestRateByTenure in this.interestRateTenureDistribution)) {\r\n\t\t\t\tthis.interestRateTenureDistribution[interestRateByTenure] = 1;\r\n\t\t\t} else {\r\n\t\t\t\tthis.interestRateTenureDistribution[interestRateByTenure]++;\r\n\t\t\t}\r\n\r\n\t\t\t// Update net interest stats\r\n\t\t\tvar netInterestRate = investment.properties[\"netInterestRate\"];\r\n\r\n\t\t\tif(i === 0 || netInterestRate > this.netInterestRateStats[\"high\"])\r\n\t\t\t\tthis.netInterestRateStats[\"high\"] = netInterestRate;\r\n\t\t\t\r\n\t\t\tif(i === 0 || netInterestRate < this.netInterestRateStats[\"low\"])\r\n\t\t\t\tthis.netInterestRateStats[\"low\"] = netInterestRate;\r\n\r\n\t\t\t// Update tenure stats\r\n\t\t\tvar tenure = investment.properties[\"tenure\"];\r\n\r\n\t\t\tif(i === 0 || tenure > this.tenureStats[\"high\"])\r\n\t\t\t\tthis.tenureStats[\"high\"] = tenure;\r\n\r\n\t\t\tif(i === 0 || tenure < this.tenureStats[\"low\"])\r\n\t\t\t\tthis.tenureStats[\"low\"] = tenure;\r\n\r\n\r\n\t\t\ttotalNetInterestRate += netInterestRate;\r\n\t\t\ttotalTenure += tenure;\r\n\r\n\t\t\t// Break down each investment schedule and include only those schedule that is exactly in the\r\n\t\t\t// date range, filters out months that\r\n\t\t\tvar schedules = investment.generateRepaymentSchedule();\r\n\t\t\t\r\n\t\t\tif(schedules[schedules.length - 1][\"date\"].compareTo(currentDate) === 0)\r\n\t\t\t\tnumMaturedToday++;\r\n\r\n\t\t\tif(schedules[schedules.length - 1][\"date\"].compareTo(currentDate) <= 0)\r\n\t\t\t\tthis.completedProjects++;\r\n\t\t\t\r\n\t\t\t// If repayment method is balloon, there's no monthly investment.\r\n\t\t\t// So we put the whole investment amount.\r\n\t\t\tif(investment.properties[\"repaymentMethod\"] === \"Balloon\")\r\n\t\t\t\tthis.amountInvested += investment.properties[\"investmentAmount\"];\r\n\t\t\t\r\n\t\t\tfor(var j = 0; j < schedules.length; j++) {\r\n\t\t\t\tvar schedule = schedules[j];\r\n\r\n\t\t\t\tif(schedule[\"date\"].compareTo(currentDate) === 0) {\r\n\t\t\t\t\tnumPayoutsToday++;\r\n\t\t\t\t\ttotalPayoutsToday += schedule[\"netPayout\"];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.projectedNetAmount += schedule[\"netPayout\"];\r\n\t\t\t\t\r\n\t\t\t\t// For equal repayment method, we consider the investment as divided as equal as well.\r\n\t\t\t\tif(investment.properties[\"repaymentMethod\"] === \"Equal\")\r\n\t\t\t\t\tthis.amountInvested += schedule[\"netPayout\"] - schedule[\"netInterestPayout\"];\r\n\r\n\t\t\t\tthis.netEarnings += schedule[\"netInterestPayout\"];\r\n\r\n\t\t\t\tif(schedule[\"date\"].compareTo(currentDate) <= 0) {\t\r\n\t\t\t\t\tthis.completedNetEarnings += schedule[\"netInterestPayout\"];\r\n\t\t\t\t\tthis.completedNetPayoutAmount += schedule[\"netPayout\"];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.numOngoingProjects = filteredInvestments.length - numOnHold;\r\n\t\tthis.gainPercent = (((this.projectedNetAmount - this.amountInvested) / this.amountInvested) * 100).toFixed(2);\r\n\t\t\r\n\t\tif(isNaN(this.gainPercent))\r\n\t\t\tthis.gainPercent = 0;\r\n\r\n\t\t// Average interest rate calculation\r\n\t\tif(this.numOngoingProjects > 0) {\r\n\t\t\tthis.netInterestRateStats[\"avg\"] = totalNetInterestRate / this.numOngoingProjects;\r\n\t\t\tthis.tenureStats[\"avg\"] = totalTenure / this.numOngoingProjects;\r\n\r\n\t\t\tthis.netInterestRateAfterTenureStats[\"avg\"] = ((this.netInterestRateStats[\"avg\"] / 12.0) * this.tenureStats[\"avg\"]);\r\n\t\t\tthis.netInterestRateAfterTenureStats[\"high\"] = ((this.netInterestRateStats[\"high\"] / 12.0) * this.tenureStats[\"high\"]);\r\n\t\t\tthis.netInterestRateAfterTenureStats[\"low\"] = ((this.netInterestRateStats[\"low\"] / 12.0) * this.tenureStats[\"low\"]);\r\n\t\t}\r\n\r\n\t\t// Set any matured projects notifications\r\n\t\tlet maturedProjectsNotification = <></>\r\n\r\n\t\tif(numMaturedToday > 0)\r\n\t\t\tmaturedProjectsNotification = <Alert variant=\"success\"><strong>Congratulations!</strong> You have <strong>{ numMaturedToday} project(s)</strong> that reached the maturity date today.</Alert>\r\n\r\n\t\t// Set the number of on hold projects notification\r\n\t\tlet onHoldProjectsNotification = <></>\r\n\r\n\t\tif(numOnHold > 0)\r\n\t\t\tonHoldProjectsNotification = <Alert variant=\"warning\">You have <strong>{ numOnHold } on hold project(s)</strong> with a total amount of <strong>{ NumberUtils.formatCurrency(onHoldAmount) }</strong></Alert>\r\n\r\n\t\tlet payoutsTodayNotification = <></>\r\n\r\n\t\tif(numPayoutsToday > 0)\r\n\t\t\tpayoutsTodayNotification = <Alert variant=\"success\">You have <strong>{ numPayoutsToday } payout(s)</strong> today with a total amount of <strong>{ NumberUtils.formatCurrency(totalPayoutsToday) }</strong></Alert>\r\n\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<NavigationBarComponent activeMenuName=\"Dashboard\" />\r\n\t\t\t\t<Container fluid>\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<Col md=\"12\">\r\n\t\t\t\t\t\t\t<h2>Dashboard</h2>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<Col md=\"12\">{ maturedProjectsNotification }</Col>\r\n\t\t\t\t\t\t<Col md=\"12\">{ onHoldProjectsNotification }</Col>\r\n\t\t\t\t\t\t<Col md=\"12\">{ payoutsTodayNotification }</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<Col md=\"6\">\r\n\t\t\t\t\t\t\t<Form.Group>\r\n\t\t\t\t\t\t\t\t<Form.Text className=\"text-muted\">Repayment Method</Form.Text>\r\n\t\t\t\t\t\t\t\t<Form.Control as=\"select\" custom\r\n\t\t\t\t\t\t\t\t\tvalue={this.state.repaymentMethod} onChange={(e) => { this.setState({\"repaymentMethod\": e.target.value}) }}>\r\n\t\t\t\t\t\t\t\t\t<option>All</option>\r\n\t\t\t\t\t\t\t\t\t<option>Balloon</option>\r\n\t\t\t\t\t\t\t\t\t<option>Equal</option>\r\n\t\t\t\t\t\t\t\t</Form.Control>\r\n\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<Col md=\"6\">\r\n\t\t\t\t\t\t\t<Form.Group>\r\n\t\t\t\t\t\t\t\t<Form.Label>Amount Invested / Projected Net</Form.Label>\r\n\t\t\t\t\t\t\t\t<ProgressBar className=\"progress\" now={ this.gainPercent > 0 ? this.gainPercent: 0  } max=\"20\" />\r\n\t\t\t\t\t\t\t\t<InputGroup className=\"mb-3\">\r\n\t\t\t\t\t\t\t\t\t<FormControl readOnly value={ NumberUtils.formatCurrency(this.amountInvested) + \" / \" + NumberUtils.formatCurrency(this.projectedNetAmount) } />\r\n\t\t\t\t\t\t\t\t\t<InputGroup.Append>\r\n\t\t\t\t\t\t\t\t\t\t<InputGroup.Text>{ this.gainPercent }%</InputGroup.Text>\r\n\t\t\t\t\t\t\t\t\t</InputGroup.Append>\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t</InputGroup>\r\n\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t<Form.Group>\r\n\t\t\t\t\t\t\t\t<Form.Label>Net Payout</Form.Label>\r\n\t\t\t\t\t\t\t\t<ProgressBar className=\"progress\" now={ this.completedNetPayoutAmount } max={ this.projectedNetAmount > 0 ? this.projectedNetAmount : 100 } />\r\n\t\t\t\t\t\t\t\t<FormControl readOnly value={ NumberUtils.formatCurrency(this.completedNetPayoutAmount) + \" out of \" + NumberUtils.formatCurrency(this.projectedNetAmount) } />\r\n\t\t\t\t\t\t\t</Form.Group>\t\t\t\t\r\n\t\t\t\t\t\t\t<Form.Group>\r\n\t\t\t\t\t\t\t\t<Form.Label>Net Earnings</Form.Label>\r\n\t\t\t\t\t\t\t\t<ProgressBar className=\"progress\" now={ this.completedNetEarnings } max={ this.netEarnings > 0 ? this.netEarnings : 100 } />\r\n\t\t\t\t\t\t\t\t<FormControl readOnly value={ NumberUtils.formatCurrency(this.completedNetEarnings) + \" out of \" + NumberUtils.formatCurrency(this.netEarnings) } />\r\n\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t<Form.Group>\r\n\t\t\t\t\t\t\t\t<Form.Label>Completed Projects</Form.Label>\r\n\t\t\t\t\t\t\t\t<ProgressBar className=\"progress\" now={ this.completedProjects } max={ this.numOngoingProjects > 0 ? this.numOngoingProjects : 100 } />\r\n\t\t\t\t\t\t\t\t<FormControl readOnly value={ this.completedProjects + \" out of \" + this.numOngoingProjects } />\r\n\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col md=\"6\">\r\n\t\t\t\t\t\t\t<Form.Group>\r\n\t\t\t\t\t\t\t\t<Button onClick={ () => { this.setState({\"showInterestRateDistribution\": true}) } } variant=\"link\" style={{ padding: 0, margin: 0 }} className=\"float-right\"><small>Distribution</small></Button>\r\n\t\t\t\t\t\t\t\t<Form.Label>Net Interest Rate per annum</Form.Label>\r\n\t\t\t\t\t\t\t\t<ProgressBar className=\"progress\" now={ (this.netInterestRateStats[\"avg\"] * 100) } max=\"20\" />\r\n\t\t\t\t\t\t\t\t<InputGroup className=\"mb-3\">\r\n\t\t\t\t\t\t\t\t\t<InputGroup.Prepend>\r\n\t\t\t\t\t\t\t\t\t\t<InputGroup.Text>Avg</InputGroup.Text>\r\n\t\t\t\t\t\t\t\t\t</InputGroup.Prepend>\r\n\t\t\t\t\t\t\t\t\t<FormControl readOnly value={ (this.netInterestRateStats[\"avg\"] * 100).toFixed(2) + \"%\" } />\r\n\t\t\t\t\t\t\t\t\t<InputGroup.Prepend>\r\n\t\t\t\t\t\t\t\t\t\t<InputGroup.Text>High</InputGroup.Text>\r\n\t\t\t\t\t\t\t\t\t</InputGroup.Prepend>\r\n\t\t\t\t\t\t\t\t\t<FormControl readOnly value={ (this.netInterestRateStats[\"high\"] * 100).toFixed(2) + \"%\" } />\r\n\t\t\t\t\t\t\t\t\t<InputGroup.Prepend>\r\n\t\t\t\t\t\t\t\t\t\t<InputGroup.Text>Low</InputGroup.Text>\r\n\t\t\t\t\t\t\t\t\t</InputGroup.Prepend>\r\n\t\t\t\t\t\t\t\t\t<FormControl readOnly value={ (this.netInterestRateStats[\"low\"] * 100).toFixed(2) + \"%\" } />\r\n\t\t\t\t\t\t\t\t</InputGroup>\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t<Form.Group>\r\n\t\t\t\t\t\t\t\t<Button onClick={ () => { this.setState({\"showTenureDistribution\": true}) } } variant=\"link\" style={{ padding: 0, margin: 0 }} className=\"float-right\"><small>Distribution</small></Button>\r\n\t\t\t\t\t\t\t\t<Form.Label>Project Tenure (months)</Form.Label>\r\n\t\t\t\t\t\t\t\t<ProgressBar className=\"progress\" now={ this.tenureStats[\"avg\"] } max=\"12\" />\r\n\t\t\t\t\t\t\t\t<InputGroup className=\"mb-3\">\r\n\t\t\t\t\t\t\t\t\t<InputGroup.Prepend>\r\n\t\t\t\t\t\t\t\t\t\t<InputGroup.Text>Avg</InputGroup.Text>\r\n\t\t\t\t\t\t\t\t\t</InputGroup.Prepend>\r\n\t\t\t\t\t\t\t\t\t<FormControl readOnly value={ parseInt(this.tenureStats[\"avg\"]) } /> \r\n\t\t\t\t\t\t\t\t\t<InputGroup.Prepend>\r\n\t\t\t\t\t\t\t\t\t\t<InputGroup.Text>High</InputGroup.Text>\r\n\t\t\t\t\t\t\t\t\t</InputGroup.Prepend>\r\n\t\t\t\t\t\t\t\t\t<FormControl readOnly value={ this.tenureStats[\"high\"] } />\r\n\t\t\t\t\t\t\t\t\t<InputGroup.Prepend>\r\n\t\t\t\t\t\t\t\t\t\t<InputGroup.Text>Low</InputGroup.Text>\r\n\t\t\t\t\t\t\t\t\t</InputGroup.Prepend>\r\n\t\t\t\t\t\t\t\t\t<FormControl readOnly value={ this.tenureStats[\"low\"] } />\r\n\t\t\t\t\t\t\t\t</InputGroup>\r\n\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t<Form.Group>\r\n\t\t\t\t\t\t\t\t<Button onClick={ () => { this.setState({\"showInterestRateByTenureDistribution\": true}) } } variant=\"link\" style={{ padding:0, margin: 0 }} className=\"float-right\"><small>Distribution</small></Button>\r\n\t\t\t\t\t\t\t\t<Form.Label>Net Interest Rate after Tenure</Form.Label>\r\n\t\t\t\t\t\t\t\t<ProgressBar className=\"progress\" now={ this.netInterestRateAfterTenureStats[\"avg\"] * 100 } max=\"20\" />\r\n\t\t\t\t\t\t\t\t<InputGroup className=\"mb-3\">\r\n\t\t\t\t\t\t\t\t\t<InputGroup.Prepend>\r\n\t\t\t\t\t\t\t\t\t\t<InputGroup.Text>Avg</InputGroup.Text>\r\n\t\t\t\t\t\t\t\t\t</InputGroup.Prepend>\r\n\t\t\t\t\t\t\t\t\t<FormControl readOnly value={ (this.netInterestRateAfterTenureStats[\"avg\"] * 100).toFixed(2) + \"%\" } />\r\n\t\t\t\t\t\t\t\t\t<InputGroup.Prepend>\r\n\t\t\t\t\t\t\t\t\t\t<InputGroup.Text>High</InputGroup.Text>\r\n\t\t\t\t\t\t\t\t\t</InputGroup.Prepend>\r\n\t\t\t\t\t\t\t\t\t<FormControl readOnly value={ (this.netInterestRateAfterTenureStats[\"high\"] * 100).toFixed(2) + \"%\" } />\r\n\t\t\t\t\t\t\t\t\t<InputGroup.Prepend>\r\n\t\t\t\t\t\t\t\t\t\t<InputGroup.Text>Low</InputGroup.Text>\r\n\t\t\t\t\t\t\t\t\t</InputGroup.Prepend>\r\n\t\t\t\t\t\t\t\t\t<FormControl readOnly value={ (this.netInterestRateAfterTenureStats[\"low\"] * 100).toFixed(2) + \"%\" } />\r\n\t\t\t\t\t\t\t\t</InputGroup>\r\n\t\t\t\t\t\t\t</Form.Group>\t\t\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t\t<Modal show={this.state.showInterestRateDistribution} onHide={(e) => { this.setState({\"showInterestRateDistribution\": false}) }}>\r\n\t\t\t\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t\t\t\t<Modal.Title>Interest Rate Distribution</Modal.Title>\r\n\t\t\t\t\t\t</Modal.Header>\r\n\t\t\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t\t\t<Table responsive striped bordered hover variant=\"dark\">\r\n\t\t\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t<th className=\"align-middle\">Net % p.a.</th>\r\n\t\t\t\t\t\t\t\t\t\t<th className=\"align-middle\">Frequency</th>\r\n\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\tObject.keys(this.interestRateDistribution).sort().map((netInterestRate) => {\r\n\t\t\t\t\t\t\t\t\t\t\treturn <tr>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{ (this.interestRateDistribution[netInterestRate][\"netInterestRate\"] * 100).toFixed(2) }%</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{ (this.interestRateDistribution[netInterestRate][\"frequency\"]) }</td>\r\n\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t\t\t</Table>\r\n\t\t\t\t\t\t</Modal.Body>\r\n\t\t\t\t\t</Modal>\r\n\t\t\t\t\t<Modal show={this.state.showTenureDistribution} onHide={(e) => { this.setState({\"showTenureDistribution\": false}) }}>\r\n\t\t\t\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t\t\t\t<Modal.Title>Tenure Distribution</Modal.Title>\r\n\t\t\t\t\t\t</Modal.Header>\r\n\t\t\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t\t\t<Table responsive striped bordered hover variant=\"dark\">\r\n\t\t\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t<th className=\"align-middle\">Tenure</th>\r\n\t\t\t\t\t\t\t\t\t\t<th className=\"align-middle\">Frequency</th>\r\n\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\tObject.keys(this.tenureDistribution).sort(function(a, b) { return a - b }).map((tenure) => {\r\n\t\t\t\t\t\t\t\t\t\t\treturn <tr>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{ tenure } month(s)</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{ this.tenureDistribution[tenure] }</td>\r\n\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t\t\t</Table>\r\n\t\t\t\t\t\t</Modal.Body>\t\t\t\t\t\r\n\t\t\t\t\t</Modal>\r\n\t\t\t\t\t<Modal show={this.state.showInterestRateByTenureDistribution} onHide={(e) => { this.setState({\"showInterestRateByTenureDistribution\": false}) }}>\r\n\t\t\t\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t\t\t\t<Modal.Title>Interest Rate x Tenure Distribution</Modal.Title>\r\n\t\t\t\t\t\t</Modal.Header>\r\n\t\t\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t\t\t<Table responsive striped bordered hover variant=\"dark\">\r\n\t\t\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t<th className=\"align-middle\">Net Interest Rate</th>\r\n\t\t\t\t\t\t\t\t\t\t<th className=\"align-middle\">Frequency</th>\r\n\t\t\t\t\t\t\t\t\t</tr>\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\tObject.keys(this.interestRateTenureDistribution).sort(function(a, b) { return a.localeCompare(b) }).map((interestAtTenure) => {\r\n\t\t\t\t\t\t\t\t\t\t\treturn <tr>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{ interestAtTenure }</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{ this.interestRateTenureDistribution[interestAtTenure] }</td>\r\n\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t\t\t</Table>\r\n\t\t\t\t\t\t</Modal.Body>\r\n\t\t\t\t\t</Modal>\r\n\t\t\t\t</Container>\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default DashboardComponent;\r\n","import React from \"react\";\r\nimport { Container, Row, Col, Button, Table, Form } from \"react-bootstrap\";\r\nimport NavigationBarComponent from \"./NavigationBarComponent\";\r\nimport Investment from \"../Entities/Investment\";\r\nimport NumberUtils from \"../Entities/NumberUtils\";\r\nimport Database from \"../Entities/Database\";\r\n\r\n// This holds components for listing investments\r\nclass InvestmentsComponent extends React.Component {\r\n\r\n\t// Initialize the investments component\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.investments = new Database().getInvestments();\r\n\r\n\t\tthis.state = {\r\n\t\t\t\"sortedBy\": \"Project ID\",\r\n\t\t\t\"sortOrder\": \"Ascending\",\r\n\t\t\t\"repaymentMethod\": \"All\"\r\n\t\t}\r\n\r\n\t\tif(\"flintInvestments.state\" in localStorage)\r\n            this.state = JSON.parse(window.localStorage.getItem(\"flintInvestments.state\"));\r\n\t}\r\n\r\n\t// Display the investments\r\n\trender() {\r\n\r\n\t\tlet investmentsTableRows = <tr>\r\n            <td>...</td>\r\n            <td>...</td>\r\n            <td>...</td>\r\n            <td>...</td>\r\n            <td>...</td>\r\n            <td>...</td>\r\n            <td>...</td>\r\n\t\t</tr>;\r\n\t\t\r\n\t\tif(this.investments.length > 0) {\r\n            // Filter by repayment method\r\n            var filteredInvestments = Investment.filterInvestmentsByRepaymentMethod(this.investments, this.state.repaymentMethod);\r\n\r\n            // Do sorting\r\n            var sortedBy = this.state.sortedBy;\r\n            \r\n            filteredInvestments.sort((investmentA, investmentB) => {\r\n\t\t\t\tif(sortedBy === \"Project Name\")\r\n\t\t\t\t\treturn investmentA.properties[\"projectId\"].localeCompare(investmentB.properties[\"projectId\"]);\r\n                \r\n                if(sortedBy === \"Investment Amount\")\r\n                    return investmentA.properties[\"investmentAmount\"] - investmentB.properties[\"investmentAmount\"];\r\n                \r\n                if(sortedBy === \"Interest Rate\")\r\n                    return investmentA.properties[\"netInterestRate\"] - investmentB.properties[\"netInterestRate\"];\r\n            \r\n                if(sortedBy === \"Next Pay Date\") {\r\n                    var dateA = investmentA.calculateNextPayDate(); \r\n                    var dateB = investmentB.calculateNextPayDate();\r\n\r\n                    if(investmentA.properties[\"status\"] === \"On Hold\" && investmentB.properties[\"status\"] === \"On Hold\")\r\n                        return 0;\r\n                    \r\n                    if(investmentA.properties[\"status\"] === \"On Hold\" && investmentB.properties[\"status\"] === \"Invested\")\r\n                        return 1;\r\n\r\n                    if(investmentA.properties[\"status\"] === \"Invested\" && investmentB.properties[\"status\"] === \"On Hold\")\r\n                        return -1;\r\n\r\n                    if(dateA === null && dateB === null)\r\n                        return 0;\r\n                    \r\n                    if(dateA === null)\r\n                        return 1;\r\n                    \r\n                    if(dateB === null)\r\n                        return -1;\r\n                        \r\n                    return dateA.compareTo(dateB);\r\n                }\r\n\r\n                if(sortedBy === \"Maturity Date\") {\r\n                    if(investmentA.properties[\"status\"] === \"On Hold\" && investmentB.properties[\"status\"] === \"On Hold\")\r\n                        return 0;\r\n                    \r\n                    if(investmentA.properties[\"status\"] === \"On Hold\" && investmentB.properties[\"status\"] === \"Invested\")\r\n                        return 1;\r\n\r\n                    if(investmentA.properties[\"status\"] === \"Invested\" && investmentB.properties[\"status\"] === \"On Hold\")\r\n                        return -1;\r\n\r\n                    return investmentA.calculateMaturityDate().compareTo(investmentB.calculateMaturityDate());\r\n                }\r\n\r\n                return 0;\r\n            });\r\n\r\n            // Reverse if descending\r\n            if(this.state.sortOrder === \"Descending\")\r\n                filteredInvestments.reverse();\r\n            \r\n            // Put it as an output\r\n            investmentsTableRows = filteredInvestments.map((investment) => {\r\n                var payDateDetails = investment.calculateNextPayAndMaturityDate();\r\n\r\n                // When a row is clicked, we save the scroll so we can store later on\r\n                return (\r\n\t\t\t\t\t<tr key={investment.properties[\"projectId\"]} onClick={(e) => { window.location.href = \"#/investment/\" + investment.properties[\"projectId\"]; }}>\r\n\t\t\t\t\t\t<td><strong>{ investment.properties[\"projectId\"] }</strong></td>\r\n\t\t\t\t\t\t<td>{ NumberUtils.formatCurrency(investment.properties[\"investmentAmount\"]) }</td>\r\n\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t{ (investment.properties[\"netInterestRate\"] * 100).toFixed(2) }% p.a. {' '}\r\n\t\t\t\t\t\t\t{ investment.properties[\"repaymentMethod\"] }\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t<td>{ NumberUtils.formatCurrency(investment.properties[\"investmentAmount\"] + investment.calculateNetGainAmount()) }</td>\r\n\t\t\t\t\t\t<td>{ payDateDetails[\"nextPayDate\"].toString() }</td>\r\n\t\t\t\t\t\t<td>{ NumberUtils.formatCurrency(payDateDetails[\"nextPayAmount\"]) }</td>\r\n\t\t\t\t\t\t<td>{ payDateDetails[\"maturityDate\"].toString() }</td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t);\r\n            });\r\n\t\t}\r\n\t\t\r\n\t\t// Save the filters\r\n        window.localStorage.setItem(\"flintInvestments.state\", JSON.stringify(this.state));\r\n\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<NavigationBarComponent activeMenuName=\"Investments\" />\r\n\t\t\t\t<Container fluid>\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<Col md=\"12\">\r\n\t\t\t\t\t\t\t<h2>Investments</h2>\r\n\t\t\t\t\t\t\t<p><Button variant=\"primary\" href=\"#/investment\">Add Investment</Button></p>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<Col md=\"4\">\r\n\t\t\t\t\t\t\t<Form.Group>\r\n\t\t\t\t\t\t\t\t<Form.Text className=\"text-muted\">Sorted By</Form.Text>\r\n\t\t\t\t\t\t\t\t<Form.Control as=\"select\" custom\r\n\t\t\t\t\t\t\t\t\tvalue={this.state.sortedBy} onChange={(e) => { this.setState({\"sortedBy\": e.target.value }) }}>\r\n\t\t\t\t\t\t\t\t\t<option>Project Name</option>\r\n\t\t\t\t\t\t\t\t\t<option>Investment Amount</option>\r\n\t\t\t\t\t\t\t\t\t<option>Interest Rate</option>\r\n\t\t\t\t\t\t\t\t\t<option>Next Pay Date</option>\r\n\t\t\t\t\t\t\t\t\t<option>Maturity Date</option>\r\n\t\t\t\t\t\t\t\t</Form.Control>\r\n\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col md=\"4\">\r\n\t\t\t\t\t\t\t<Form.Group>\r\n\t\t\t\t\t\t\t\t<Form.Text className=\"text-muted\">Sort Order</Form.Text>\r\n\t\t\t\t\t\t\t\t<Form.Control as=\"select\" custom\r\n\t\t\t\t\t\t\t\t\tvalue={this.state.sortOrder} onChange={(e) => { this.setState({\"sortOrder\": e.target.value }) }}>\r\n\t\t\t\t\t\t\t\t\t<option>Ascending</option>\r\n\t\t\t\t\t\t\t\t\t<option>Descending</option>\r\n\t\t\t\t\t\t\t\t</Form.Control>\r\n\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col md=\"4\">\r\n\t\t\t\t\t\t\t<Form.Group>\r\n\t\t\t\t\t\t\t\t<Form.Text className=\"text-muted\">Repayment Method</Form.Text>\r\n\t\t\t\t\t\t\t\t<Form.Control as=\"select\" custom\r\n\t\t\t\t\t\t\t\t\tvalue={this.state.repaymentMethod} onChange={(e) => { this.setState({\"repaymentMethod\": e.target.value}) }}>\r\n\t\t\t\t\t\t\t\t\t<option>All</option>\r\n\t\t\t\t\t\t\t\t\t<option>Balloon</option>\r\n\t\t\t\t\t\t\t\t\t<option>Equal</option>\r\n\t\t\t\t\t\t\t\t</Form.Control>\r\n\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<Col md=\"12\">\r\n\t\t\t\t\t\t\t<Table id=\"investmentsTable\" responsive striped bordered hover variant=\"dark\">\r\n\t\t\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t<th className=\"align-middle\">Project</th>\r\n\t\t\t\t\t\t\t\t\t\t<th className=\"align-middle\">Investment Amount</th>\r\n\t\t\t\t\t\t\t\t\t\t<th className=\"align-middle\">Net %</th>\r\n\t\t\t\t\t\t\t\t\t\t<th className=\"align-middle\">Net Payout</th>\r\n\t\t\t\t\t\t\t\t\t\t<th className=\"align-middle\">Next Pay Date</th>\r\n\t\t\t\t\t\t\t\t\t\t<th className=\"align-middle\">Next Pay Amount</th>\r\n\t\t\t\t\t\t\t\t\t\t<th className=\"align-middle\">Maturity Date</th>\r\n\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t\t\t<tbody>{ investmentsTableRows }</tbody>\r\n\t\t\t\t\t\t\t</Table>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t</Container>\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default InvestmentsComponent;\r\n","import React from \"react\";\r\nimport { Container, Row, Col, Button, Form, Table, Alert } from \"react-bootstrap\";\r\nimport NavigationBarComponent from \"./NavigationBarComponent\";\r\nimport Investment from \"../Entities/Investment\";\r\nimport MyDate from \"../Entities/MyDate\";\r\nimport NumberUtils from \"../Entities/NumberUtils\";\r\nimport Database from \"../Entities/Database\";\r\n\r\n// Form for adding/updating/deleting/viewing an investment\r\nclass InvestmentComponent extends React.Component {\r\n\r\n\t// Initialize the form\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\t\r\n\t\tthis.database = new Database();\r\n\r\n\t\tthis.state = {\r\n\t\t\t\"projectId\": \"\",\r\n\t\t\t\"investedAmount\": \"\",\r\n\t\t\t\"netInterestRate\": \"\",\r\n\t\t\t\"status\": \"Invested\",\r\n\t\t\t\"tenure\": \"\",\r\n\t\t\t\"repaymentMethod\": \"Equal\",\r\n\t\t\t\"date\": \"\",\r\n\t\t\t\"investment\": null\r\n\t\t};\r\n\r\n\t\tif(\"id\" in props.match.params) {\r\n\t\t\t// Edit mode, load the data\r\n\t\t\tvar investment = this.database.findInvestment(props.match.params.id);\r\n\r\n\t\t\tif(investment === null)\r\n\t\t\t\treturn;\r\n\t\t\t\r\n\t\t\tthis.state[\"projectId\"] = investment.properties[\"projectId\"];\r\n\t\t\tthis.state[\"investedAmount\"] = investment.properties[\"investmentAmount\"].toFixed(2);\r\n\t\t\tthis.state[\"netInterestRate\"] = (investment.properties[\"netInterestRate\"] * 100).toFixed(2);\r\n\t\t\tthis.state[\"status\"] = investment.properties[\"status\"];\r\n\t\t\tthis.state[\"tenure\"] = investment.properties[\"tenure\"];\r\n\t\t\tthis.state[\"repaymentMethod\"] = investment.properties[\"repaymentMethod\"];\r\n\t\t\tthis.state[\"date\"] = investment.properties[\"date\"].toString();\r\n\t\t\tthis.state[\"investment\"] = investment;\r\n\t\t}\r\n\t}\r\n\r\n\t// Validate and tranform input into an investment object\r\n\tcreateInvestmentObject() {\r\n\t\t// Validate the project ID\r\n        var validationResult = Investment.validateProjectId(this.state.projectId);\r\n\r\n        if(!validationResult[\"status\"]) {\r\n            alert(validationResult[\"message\"]);\r\n            return null;\r\n        }\r\n        \r\n        if(this.props.formMode === \"add\") {\r\n            if(this.database.findInvestment(this.state.projectId) != null) {\r\n                alert(\"Another project has this name already.\");\r\n                return null;\r\n            }\r\n        }\r\n\t\t\r\n\t\t// Validate the invested amount\r\n        validationResult = Investment.validateInvestedAmount(this.state.investedAmount);\r\n\r\n        if(!validationResult[\"status\"]) {\r\n            alert(validationResult[\"message\"]);\r\n            return null;\r\n\t\t}\r\n\t\t\r\n\t\t// Validate the net interest rate\r\n        validationResult = Investment.validateNetInterestRate(this.state.netInterestRate);\r\n\r\n        if(!validationResult[\"status\"]) {\r\n            alert(validationResult[\"message\"]);\r\n            return null;\r\n\t\t}\r\n\t\t\r\n        // Validate the date only if it is not on hold\r\n        var date = this.state.date;\r\n\r\n        if(this.state.status === \"Invested\") {\r\n            validationResult = Investment.validateDate(date);\r\n\r\n            if(!validationResult[\"status\"]) {\r\n                alert(validationResult[\"message\"]);\r\n                return null;\r\n            }\r\n        } else if(this.state.status === \"On Hold\") {\r\n            date = MyDate.now().toString()\r\n            this.setState({ \"date\": date });\r\n\t\t}\r\n\t\t\r\n\t\t// Repayment method needs no validation...\r\n\r\n\t\t// Validate tenure\r\n        validationResult = Investment.validateTenure(this.state.tenure);\r\n\r\n        if(!validationResult[\"status\"]) {\r\n            alert(validationResult[\"message\"]);\r\n            return null;\r\n\t\t}\r\n\t\t\r\n        // Calculate the net interest rate\r\n        try {\r\n            var investment = new Investment(\r\n                this.state.projectId, \r\n                parseFloat(this.state.investedAmount), \r\n                parseFloat(this.state.netInterestRate) / 100.0,  \r\n                MyDate.toMyDate(date), \r\n                this.state.repaymentMethod,\r\n                parseInt(this.state.tenure),\r\n                this.state.status);\r\n            \r\n            return investment;\r\n        } catch(err) {\r\n            alert(\"The project ID is invalid, make sure it follows SeedIn's format because it represents the opening date. If this project is invested, make sure the first pay date is after the opening date.\");\r\n            console.log(err);\r\n        }\r\n\r\n        return null;\r\n\t}\r\n\r\n\t// Calculate the net interest rates and the repayment schedules\r\n\thandleCalculateClick() {\r\n\t\tvar investment = this.createInvestmentObject();\r\n\r\n\t\tif(investment == null)\r\n\t\t\treturn;\r\n\r\n\t\tthis.setState({\"investment\": investment});\r\n    }\r\n\r\n\t// Validate and add a new investment\r\n\thandleAddClick() {\r\n\t\tvar investment = this.createInvestmentObject();\r\n\r\n\t\tif(investment == null)\r\n            return;\r\n            \r\n        // Do add\r\n        this.database.addInvestment(investment);\r\n        \r\n        // After successful validation and add , we go back to the list of investments\r\n        alert(\"Investment created.\");\r\n\t\twindow.location.href = \"#/investments\";\r\n\t}\r\n\t\r\n\t// Delete the investment\r\n\thandleDeleteClick() {\r\n\t\tif(!window.confirm(\"Are you sure you want to delete this investment?\"))\r\n\t\t\treturn;\r\n\r\n\t\tthis.database.deleteInvestment(this.state.investment.properties[\"projectId\"]);\r\n\t\twindow.location.href = \"#/investments\";\r\n\t}\r\n\r\n\t// Update the investment\r\n\thandleUpdateClick() {\r\n\t\tvar investment = this.createInvestmentObject();\r\n\r\n        if(investment == null)\r\n            return;\r\n\r\n        // Do update\r\n        this.database.addInvestment(investment);\r\n        alert(\"Investment updated.\");\r\n\t}\r\n\r\n\t// Display the form\r\n\trender() {\r\n\t\tlet controls;\r\n\t\tlet formTitle;\r\n\t\tlet projectIdInputControl;\r\n\r\n\t\tif(\"id\" in this.props.match.params) {\r\n\t\t\t// Update mode\r\n\t\t\tcontrols =\r\n\t\t\t\t<>\r\n\t\t\t\t\t<Button variant=\"dark\" href=\"#/investments\">Back</Button>{\" \"}\r\n\t\t\t\t\t<Button variant=\"danger\" onClick={(e) => { this.handleDeleteClick() }}>Delete</Button>{\" \"}\r\n\t\t\t\t\t<Button variant=\"info\" onClick={(e) => { this.handleCalculateClick() }}>Calculate</Button>{\" \"}\r\n\t\t\t\t\t<Button variant=\"primary\" onClick={(e) => { this.handleUpdateClick() }}>Update</Button>\r\n\t\t\t\t</>\r\n\t\t\t\r\n\t\t\tformTitle = \"Update Investment\";\r\n\r\n\t\t\tprojectIdInputControl = \r\n\t\t\t\t<Form.Group>\r\n\t\t\t\t\t<Form.Label>Project Name</Form.Label>\r\n\t\t\t\t\t<Form.Control type=\"text\" readOnly value={this.state.projectId} />\r\n\t\t\t\t</Form.Group>\r\n\t\t} else {\r\n\t\t\t// New mode investment mode\r\n\t\t\tcontrols = \r\n\t\t\t\t<>\r\n\t\t\t\t\t<Button variant=\"dark\" href=\"#/investments\">Back</Button>{\" \"}\r\n\t\t\t\t\t<Button variant=\"info\" onClick={(e) => { this.handleCalculateClick() }}>Calculate</Button>{\" \"}\r\n\t\t\t\t\t<Button variant=\"primary\" onClick={(e) => { this.handleAddClick() }}>Add</Button>\r\n\t\t\t\t</>\r\n\r\n\t\t\tformTitle = \"Add Investment\";\r\n\r\n\t\t\tprojectIdInputControl = \r\n\t\t\t\t<Form.Group>\r\n\t\t\t\t\t<Form.Label>Project Name</Form.Label>\r\n\t\t\t\t\t<Form.Control type=\"text\" placeholder=\"Project Name given by Flint\" \r\n\t\t\t\t\t\tvalue={this.state.projectId} onChange={(e) => { this.setState({\"projectId\": e.target.value}) }} />\r\n\t\t\t\t</Form.Group>\r\n\t\t}\r\n\r\n\t\t// First date of repayment appears only when the status of investment is \"invested\"\r\n\t\tlet firstDateOfPaymentInputControl = <></>\r\n\r\n\t\tif(this.state.status === \"Invested\") {\r\n\t\t\tfirstDateOfPaymentInputControl = \r\n\t\t\t\t<Form.Group>\r\n\t\t\t\t\t<Form.Label>First Date of Payment Schedule</Form.Label>\r\n\t\t\t\t\t<Form.Control type=\"date\" placeholder=\"yyyy-mm-dd\"\r\n\t\t\t\t\t\tvalue={this.state.date} onChange={(e) => { this.setState({\"date\": e.target.value}) }} />\r\n\t\t\t\t\t<Form.Text className=\"text-muted\">Please check your Flint account for the date.</Form.Text>\r\n\t\t\t\t</Form.Group>\r\n\t\t}\r\n\t\t\r\n\t\t// Set the investment details and table\r\n        let netGainRate = \"...\";\r\n        let netGainAmount = \"...\";\r\n        let netTotalPayoutAmount = \"...\";\r\n        let paymentSchedules = <tr><td>...</td><td>...</td><td>...</td></tr>\r\n        let onHoldNotice = <></>\r\n\r\n\t\t// If an investment is provided then display the details\r\n        if(this.state.investment !== null) {            \r\n            netGainRate = (this.state.investment.calculateTenureInterestRate() * 100).toFixed(2) + \"%\";\r\n            netGainAmount = this.state.investment.calculateNetGainAmount();\r\n            netTotalPayoutAmount = this.state.investment.properties[\"investmentAmount\"] + netGainAmount;\r\n            paymentSchedules = this.state.investment.generateRepaymentSchedule();\r\n\r\n            netGainAmount = NumberUtils.formatCurrency(netGainAmount);\r\n            netTotalPayoutAmount = NumberUtils.formatCurrency(netTotalPayoutAmount);\r\n\r\n            paymentSchedules = paymentSchedules.map((schedule) => {\r\n                return <tr key={schedule[\"date\"].toString()}>\r\n                    <td>{ schedule[\"date\"].toString() }</td>\r\n                    <td>{ NumberUtils.formatCurrency(schedule[\"netInterestPayout\"]) }</td>\r\n                    <td>{ NumberUtils.formatCurrency(schedule[\"netPayout\"]) }</td>\r\n                </tr>\r\n            })\r\n\r\n            // Notice for on hold project\r\n            if(this.state.investment.properties[\"status\"] === \"On Hold\") {\r\n                onHoldNotice = <Alert variant=\"warning\">This project is <strong>On Hold</strong> and the <strong>repayment dates are just samples dates</strong>. </Alert>\r\n            }\r\n        }\r\n\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<NavigationBarComponent activeMenuName=\"Investments\" />\r\n\t\t\t\t<Container fluid>\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<Col md=\"6\">\r\n\t\t\t\t\t\t\t<h2>{formTitle}</h2>\r\n\t\t\t\t\t\t\t<Form>\r\n\t\t\t\t\t\t\t\t{projectIdInputControl}\r\n\t\t\t\t\t\t\t\t<Form.Group>\r\n\t\t\t\t\t\t\t\t\t<Form.Label>Invested Amount</Form.Label>\r\n\t\t\t\t\t\t\t\t\t<Form.Control type=\"number\" step=\"any\" placeholder=\"₱\"\r\n\t\t\t\t\t\t\t\t\t\tvalue={this.state.investedAmount} onChange={(e) => { this.setState({\"investedAmount\": e.target.value}) }} />\r\n\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t<Form.Group>\r\n\t\t\t\t\t\t\t\t\t<Form.Label>Net Interest Rate per annum</Form.Label>\r\n\t\t\t\t\t\t\t\t\t<Form.Control type=\"number\" step=\"any\" placeholder=\"%\"\r\n\t\t\t\t\t\t\t\t\t\tvalue={this.state.netInterestRate} onChange={(e) => { this.setState({\"netInterestRate\": e.target.value}) }} />\r\n\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t<Form.Group>\r\n\t\t\t\t\t\t\t\t\t<Form.Label>Status</Form.Label>\r\n\t\t\t\t\t\t\t\t\t<Form.Control as=\"select\" custom\r\n\t\t\t\t\t\t\t\t\t\tvalue={this.state.status} onChange={(e) => { this.setState({\"status\": e.target.value}) }}>\r\n\t\t\t\t\t\t\t\t\t\t<option>Invested</option>\r\n\t\t\t\t\t\t\t\t\t\t<option>On Hold</option>\r\n\t\t\t\t\t\t\t\t\t</Form.Control>\r\n\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t{ firstDateOfPaymentInputControl }\r\n\t\t\t\t\t\t\t\t<Form.Group>\r\n\t\t\t\t\t\t\t\t\t<Form.Label>Repayment Method</Form.Label>\r\n\t\t\t\t\t\t\t\t\t<Form.Control as=\"select\" custom\r\n\t\t\t\t\t\t\t\t\t\tvalue={this.state.repaymentMethod} onChange={(e) => { this.setState({\"repaymentMethod\": e.target.value}) }}>\r\n\t\t\t\t\t\t\t\t\t\t<option>Equal</option>\r\n\t\t\t\t\t\t\t\t\t\t<option>Balloon</option>\r\n\t\t\t\t\t\t\t\t\t</Form.Control>\r\n\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t<Form.Group>\r\n\t\t\t\t\t\t\t\t\t<Form.Label>Tenure</Form.Label>\r\n\t\t\t\t\t\t\t\t\t<Form.Control type=\"number\" placeholder=\"Months\" \r\n\t\t\t\t\t\t\t\t\t\tvalue={this.state.tenure} onChange={(e) => { this.setState({\"tenure\": e.target.value}) }}/>\r\n\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t\t\t<p style={{textAlign: \"right\"}}>\r\n\t\t\t\t\t\t\t\t{controls}\r\n\t\t\t\t\t\t\t</p>\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col md=\"6\">\r\n\t\t\t\t\t\t\t<h2>Investment Details</h2>\r\n\t\t\t\t\t\t\t<Form>\r\n\t\t\t\t\t\t\t\t<Form.Group>\r\n\t\t\t\t\t\t\t\t\t<Form.Label>Net Gain Rate after Tenure</Form.Label>\r\n\t\t\t\t\t\t\t\t\t<Form.Control type=\"text\" readOnly value={netGainRate} />\r\n\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t<Form.Group>\r\n\t\t\t\t\t\t\t\t\t<Form.Label>Net Gain Amount after Tenure</Form.Label>\r\n\t\t\t\t\t\t\t\t\t<Form.Control type=\"text\" readOnly value={netGainAmount} />\r\n\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t<Form.Group>\r\n\t\t\t\t\t\t\t\t\t<Form.Label>Total Net Payout after Tenure</Form.Label>\r\n\t\t\t\t\t\t\t\t\t<Form.Control type=\"text\" readOnly value={netTotalPayoutAmount} />\r\n\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t\t\t{ onHoldNotice }\r\n\t\t\t\t\t\t\t<Table responsive striped bordered hover variant=\"dark\">\r\n\t\t\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t<th>Payment Date</th>                        \r\n\t\t\t\t\t\t\t\t\t\t<th>Net Interest</th>\r\n\t\t\t\t\t\t\t\t\t\t<th>Net Payout</th>\r\n\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t\t\t<tbody>{ paymentSchedules }</tbody>\r\n\t\t\t\t\t\t\t</Table>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t</Container>\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default InvestmentComponent;\r\n","import React from \"react\";\r\nimport { Container, Form, Row, Col, Button } from \"react-bootstrap\";\r\nimport NavigationBarComponent from \"./NavigationBarComponent\";\r\nimport Database from \"../Entities/Database\";\r\nimport MyDate from \"../Entities/MyDate\";\r\n\r\n// Container for import and export of data\r\nclass MyDataComponent extends React.Component {\r\n\r\n\t// Initialize stuff\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.database = new Database();\r\n\t}\r\n\r\n\t// Export data and download it\r\n\thandleExportClick() {\t\t\r\n\t\tvar downloadLink = document.createElement(\"a\");\r\n\t\tdownloadLink.download = \"flint \" + MyDate.now().toString() + \".data\";\r\n\t\tdownloadLink.href=\"data:text/plain;charset=utf-8,\" + encodeURIComponent(JSON.stringify(this.database.exportAsJson()));\r\n\t\tdownloadLink.click();\r\n\t}\r\n\r\n\t// Import from a json file\r\n\thandleImportClick(file) {\r\n\t\tif(!window.confirm(\"This will delete your current data, are you sure you want to continue?\"))\r\n\t\t\treturn;\r\n\t\t\r\n\t\tvar fileReader = new FileReader();\r\n\t\tvar database = this.database;\r\n\r\n\t\tfileReader.onload = () => {\r\n\t\t\ttry {\r\n\t\t\t\tif(database.importJson(JSON.parse(fileReader.result)))\r\n\t\t\t\t\twindow.alert(\"Import successful.\");\r\n\t\t\t\telse\r\n\t\t\t\t\twindow.alert(\"Import failed.\");\r\n\t\t\t} catch(err) {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t\twindow.alert(\"Invalid file.\");\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tfileReader.readAsText(file)\r\n\t}\r\n\r\n\t// Delete all stored data\r\n\thandleResetClick() {\r\n\t\tif(!window.confirm(\"Are you sure you want to clear your data?\"))\r\n\t\t\treturn;\r\n\r\n\t\tthis.database.clear();\r\n\t\twindow.alert(\"Clear successful.\");\t\t\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<NavigationBarComponent activeMenuName=\"My Data\" />\r\n\t\t\t\t<Container fluid>\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<Col md=\"6\">\r\n\t\t\t\t\t\t\t<h2>My Data</h2>\r\n\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\tYour data is locally saved on this web browser you are currently using. \r\n\t\t\t\t\t\t\t\tYou can continue working on it anytime. \r\n\t\t\t\t\t\t\t\tYou can export and download your data as a file if you wish to work \r\n\t\t\t\t\t\t\t\ton your data from another device or web browser.\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t<h2>Export</h2>\r\n\t\t\t\t\t\t\t<p><Button variant=\"primary\" onClick={(e) => { this.handleExportClick() }}>Download My Data</Button></p>\r\n\t\t\t\t\t\t\t<h2>Import</h2>\r\n\t\t\t\t\t\t\t<p>Restore your data from an exported file. This replaces any data that is currently saved.</p>\r\n\t\t\t\t\t\t\t<Form.File label=\"Browse or drag file to this box\" custom\r\n\t\t\t\t\t\t\t\tonChange={(e) => { this.handleImportClick(e.target.files[0]) }} />\r\n\t\t\t\t\t\t\t<br /><br />\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col md=\"6\">\r\n\t\t\t\t\t\t\t<h2>Reset</h2>\r\n\t\t\t\t\t\t\t<p>Delete all your saved data from this web browser.</p>\r\n\t\t\t\t\t\t\t<p><Button variant=\"danger\" onClick={(e) => { this.handleResetClick() }}>Clear My Data</Button></p>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t</Container>\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default MyDataComponent;\r\n","import React from \"react\";\r\nimport { Alert, Row, Col, Button, Container } from \"react-bootstrap\";\r\nimport NavigationBarComponent from \"./NavigationBarComponent\";\r\n\r\n// For programmer credits\r\nclass AboutComponent extends React.Component {\r\n\r\n    // Open my BMC page\r\n    buyMeACoffee() {\r\n        var link = document.createElement(\"a\");\r\n        link.href = \"https://www.buymeacoffee.com/it2051229\";\r\n        link.target = \"_blank\";\r\n        link.click();\r\n    }\r\n\r\n    // Display info\r\n\trender() {\r\n\t\treturn (\r\n            <>\r\n                <NavigationBarComponent activeMenuName=\"About\" />\r\n                <Container fluid>\r\n                    <Row>\r\n                        <Col md=\"6\">\r\n                            <h4>Are you related to Flint?</h4>\r\n                            <p>\r\n                                No, just like you we are fellow investors in Flint.\r\n                            </p>\r\n                            <h4>Do you keep my data?</h4>\r\n                            <p>\r\n                                No, all your data are private and locally stored on this web browser. We do not keep your \r\n                                data in our servers. You cannot access your data from another computer or web browser.\r\n                            </p>\r\n                            <h4>Can I keep my data?</h4>\r\n                            <p>\r\n                                Yes, you can export your data. It will be extracted from your computer and downloaded as a file. \r\n                                You can then import the file through using this app from another web browser.\r\n                            </p>\r\n                        </Col>\r\n                        <Col md=\"6\">\r\n                            <h4>What else do I need to know before using this app?</h4>\r\n                            <p>\r\n                                This project is a work in progress but you're using a stable version. \r\n                                There might be changes and improvements anytime so you should use it at your own risk. \r\n                                We recommend to backup your data frequently.\r\n                            </p>\r\n                            <p>\r\n                                We're gradually adding features and fixing things so check our change logs from time to time so you can download\r\n                                the latest stable version:\r\n                            </p>                    \r\n                            <Alert variant=\"dark\">\r\n                                <Alert.Link href=\"https://it2051229.github.io/flint/download.html\" target=\"_blank\" rel=\"noopener noreferrer\">https://it2051229.github.io/ flint/download.html</Alert.Link>\r\n                            </Alert>    \r\n                            <p>\r\n                                If you found any issues feel free to shoot \r\n                                us a message at <a href=\"mailto:contact@it2051229.com\">contact@it2051229.com</a>.\r\n                            </p>\r\n                            <p>\r\n                                <center><Button variant=\"primary\" onClick={(e) => this.buyMeACoffee()}>Buy me a coffee!</Button></center>\r\n                            </p>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default AboutComponent;\r\n","import React from \"react\";\r\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./App.css\";\r\n\r\nimport DashboardComponent from \"./Components/DashboardComponent\";\r\nimport InvestmentsComponent from \"./Components/InvestmentsComponent\";\r\nimport InvestmentComponent from \"./Components/InvestmentComponent\";\r\nimport MyDataComponent from \"./Components/MyDataComponent\";\r\nimport AboutComponent from \"./Components/AboutComponent\";\r\n\r\n// Entry class of the program\r\nclass App extends React.Component {\r\n\r\n\t// Entry point of the program, set the routes\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Router>\r\n\t\t\t\t<Switch>\r\n\t\t\t\t\t<Route exact path=\"/\" component={DashboardComponent} />\r\n\t\t\t\t\t<Route exact path=\"/dashboard\" component={DashboardComponent} />\r\n\t\t\t\t\t<Route exact path=\"/investments\" component={InvestmentsComponent} />\r\n\t\t\t\t\t<Route exact path=\"/investment\" component={InvestmentComponent} />\r\n\t\t\t\t\t<Route exact path=\"/investment/:id\" component={InvestmentComponent} />\r\n\t\t\t\t\t<Route exact path=\"/mydata\" component={MyDataComponent} />\r\n\t\t\t\t\t<Route exact path=\"/about\" component={AboutComponent} />\r\n\t\t\t\t</Switch>\r\n\t\t\t</Router>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}